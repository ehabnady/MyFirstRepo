//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AmounCRM4.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExecSummary3")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExecSummary3 : global::System.Data.DataSet {
        
        private Total_CovFreqCallsDataTable tableTotal_CovFreqCalls;
        
        private BySpec_CovFreqCallsDataTable tableBySpec_CovFreqCalls;
        
        private ByBrick_CovFreqCallsDataTable tableByBrick_CovFreqCalls;
        
        private ByClass_CovFreqCallsDataTable tableByClass_CovFreqCalls;
        
        private ByBrand_CovFreqCallsDataTable tableByBrand_CovFreqCalls;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ExecSummary3() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ExecSummary3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Total_CovFreqCalls"] != null)) {
                    base.Tables.Add(new Total_CovFreqCallsDataTable(ds.Tables["Total_CovFreqCalls"]));
                }
                if ((ds.Tables["BySpec_CovFreqCalls"] != null)) {
                    base.Tables.Add(new BySpec_CovFreqCallsDataTable(ds.Tables["BySpec_CovFreqCalls"]));
                }
                if ((ds.Tables["ByBrick_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByBrick_CovFreqCallsDataTable(ds.Tables["ByBrick_CovFreqCalls"]));
                }
                if ((ds.Tables["ByClass_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByClass_CovFreqCallsDataTable(ds.Tables["ByClass_CovFreqCalls"]));
                }
                if ((ds.Tables["ByBrand_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByBrand_CovFreqCallsDataTable(ds.Tables["ByBrand_CovFreqCalls"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Total_CovFreqCallsDataTable Total_CovFreqCalls {
            get {
                return this.tableTotal_CovFreqCalls;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BySpec_CovFreqCallsDataTable BySpec_CovFreqCalls {
            get {
                return this.tableBySpec_CovFreqCalls;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ByBrick_CovFreqCallsDataTable ByBrick_CovFreqCalls {
            get {
                return this.tableByBrick_CovFreqCalls;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ByClass_CovFreqCallsDataTable ByClass_CovFreqCalls {
            get {
                return this.tableByClass_CovFreqCalls;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ByBrand_CovFreqCallsDataTable ByBrand_CovFreqCalls {
            get {
                return this.tableByBrand_CovFreqCalls;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ExecSummary3 cln = ((ExecSummary3)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Total_CovFreqCalls"] != null)) {
                    base.Tables.Add(new Total_CovFreqCallsDataTable(ds.Tables["Total_CovFreqCalls"]));
                }
                if ((ds.Tables["BySpec_CovFreqCalls"] != null)) {
                    base.Tables.Add(new BySpec_CovFreqCallsDataTable(ds.Tables["BySpec_CovFreqCalls"]));
                }
                if ((ds.Tables["ByBrick_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByBrick_CovFreqCallsDataTable(ds.Tables["ByBrick_CovFreqCalls"]));
                }
                if ((ds.Tables["ByClass_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByClass_CovFreqCallsDataTable(ds.Tables["ByClass_CovFreqCalls"]));
                }
                if ((ds.Tables["ByBrand_CovFreqCalls"] != null)) {
                    base.Tables.Add(new ByBrand_CovFreqCallsDataTable(ds.Tables["ByBrand_CovFreqCalls"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTotal_CovFreqCalls = ((Total_CovFreqCallsDataTable)(base.Tables["Total_CovFreqCalls"]));
            if ((initTable == true)) {
                if ((this.tableTotal_CovFreqCalls != null)) {
                    this.tableTotal_CovFreqCalls.InitVars();
                }
            }
            this.tableBySpec_CovFreqCalls = ((BySpec_CovFreqCallsDataTable)(base.Tables["BySpec_CovFreqCalls"]));
            if ((initTable == true)) {
                if ((this.tableBySpec_CovFreqCalls != null)) {
                    this.tableBySpec_CovFreqCalls.InitVars();
                }
            }
            this.tableByBrick_CovFreqCalls = ((ByBrick_CovFreqCallsDataTable)(base.Tables["ByBrick_CovFreqCalls"]));
            if ((initTable == true)) {
                if ((this.tableByBrick_CovFreqCalls != null)) {
                    this.tableByBrick_CovFreqCalls.InitVars();
                }
            }
            this.tableByClass_CovFreqCalls = ((ByClass_CovFreqCallsDataTable)(base.Tables["ByClass_CovFreqCalls"]));
            if ((initTable == true)) {
                if ((this.tableByClass_CovFreqCalls != null)) {
                    this.tableByClass_CovFreqCalls.InitVars();
                }
            }
            this.tableByBrand_CovFreqCalls = ((ByBrand_CovFreqCallsDataTable)(base.Tables["ByBrand_CovFreqCalls"]));
            if ((initTable == true)) {
                if ((this.tableByBrand_CovFreqCalls != null)) {
                    this.tableByBrand_CovFreqCalls.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ExecSummary3";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExecSummary3.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTotal_CovFreqCalls = new Total_CovFreqCallsDataTable();
            base.Tables.Add(this.tableTotal_CovFreqCalls);
            this.tableBySpec_CovFreqCalls = new BySpec_CovFreqCallsDataTable();
            base.Tables.Add(this.tableBySpec_CovFreqCalls);
            this.tableByBrick_CovFreqCalls = new ByBrick_CovFreqCallsDataTable();
            base.Tables.Add(this.tableByBrick_CovFreqCalls);
            this.tableByClass_CovFreqCalls = new ByClass_CovFreqCallsDataTable();
            base.Tables.Add(this.tableByClass_CovFreqCalls);
            this.tableByBrand_CovFreqCalls = new ByBrand_CovFreqCallsDataTable();
            base.Tables.Add(this.tableByBrand_CovFreqCalls);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTotal_CovFreqCalls() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBySpec_CovFreqCalls() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeByBrick_CovFreqCalls() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeByClass_CovFreqCalls() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeByBrand_CovFreqCalls() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExecSummary3 ds = new ExecSummary3();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Total_CovFreqCallsRowChangeEventHandler(object sender, Total_CovFreqCallsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BySpec_CovFreqCallsRowChangeEventHandler(object sender, BySpec_CovFreqCallsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ByBrick_CovFreqCallsRowChangeEventHandler(object sender, ByBrick_CovFreqCallsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ByClass_CovFreqCallsRowChangeEventHandler(object sender, ByClass_CovFreqCallsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ByBrand_CovFreqCallsRowChangeEventHandler(object sender, ByBrand_CovFreqCallsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Total_CovFreqCallsDataTable : global::System.Data.TypedTableBase<Total_CovFreqCallsRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsDataTable() {
                this.TableName = "Total_CovFreqCalls";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Total_CovFreqCallsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Total_CovFreqCallsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsRow this[int index] {
                get {
                    return ((Total_CovFreqCallsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Total_CovFreqCallsRowChangeEventHandler Total_CovFreqCallsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Total_CovFreqCallsRowChangeEventHandler Total_CovFreqCallsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Total_CovFreqCallsRowChangeEventHandler Total_CovFreqCallsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Total_CovFreqCallsRowChangeEventHandler Total_CovFreqCallsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTotal_CovFreqCallsRow(Total_CovFreqCallsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsRow AddTotal_CovFreqCallsRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal VisitedDoctors, decimal TargetVisits, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                Total_CovFreqCallsRow rowTotal_CovFreqCallsRow = ((Total_CovFreqCallsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        VisitedDoctors,
                        TargetVisits,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowTotal_CovFreqCallsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTotal_CovFreqCallsRow);
                return rowTotal_CovFreqCallsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Total_CovFreqCallsDataTable cln = ((Total_CovFreqCallsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Total_CovFreqCallsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsRow NewTotal_CovFreqCallsRow() {
                return ((Total_CovFreqCallsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Total_CovFreqCallsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Total_CovFreqCallsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Total_CovFreqCallsRowChanged != null)) {
                    this.Total_CovFreqCallsRowChanged(this, new Total_CovFreqCallsRowChangeEvent(((Total_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Total_CovFreqCallsRowChanging != null)) {
                    this.Total_CovFreqCallsRowChanging(this, new Total_CovFreqCallsRowChangeEvent(((Total_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Total_CovFreqCallsRowDeleted != null)) {
                    this.Total_CovFreqCallsRowDeleted(this, new Total_CovFreqCallsRowChangeEvent(((Total_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Total_CovFreqCallsRowDeleting != null)) {
                    this.Total_CovFreqCallsRowDeleting(this, new Total_CovFreqCallsRowChangeEvent(((Total_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTotal_CovFreqCallsRow(Total_CovFreqCallsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary3 ds = new ExecSummary3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Total_CovFreqCallsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BySpec_CovFreqCallsDataTable : global::System.Data.TypedTableBase<BySpec_CovFreqCallsRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            private global::System.Data.DataColumn columnSpecialityID;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsDataTable() {
                this.TableName = "BySpec_CovFreqCalls";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BySpec_CovFreqCallsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BySpec_CovFreqCallsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityIDColumn {
                get {
                    return this.columnSpecialityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsRow this[int index] {
                get {
                    return ((BySpec_CovFreqCallsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BySpec_CovFreqCallsRowChangeEventHandler BySpec_CovFreqCallsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BySpec_CovFreqCallsRowChangeEventHandler BySpec_CovFreqCallsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BySpec_CovFreqCallsRowChangeEventHandler BySpec_CovFreqCallsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BySpec_CovFreqCallsRowChangeEventHandler BySpec_CovFreqCallsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBySpec_CovFreqCallsRow(BySpec_CovFreqCallsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsRow AddBySpec_CovFreqCallsRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls, int SpecialityID, string SpecialityCode) {
                BySpec_CovFreqCallsRow rowBySpec_CovFreqCallsRow = ((BySpec_CovFreqCallsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls,
                        SpecialityID,
                        SpecialityCode};
                rowBySpec_CovFreqCallsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBySpec_CovFreqCallsRow);
                return rowBySpec_CovFreqCallsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BySpec_CovFreqCallsDataTable cln = ((BySpec_CovFreqCallsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BySpec_CovFreqCallsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
                this.columnSpecialityID = base.Columns["SpecialityID"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnSpecialityID = new global::System.Data.DataColumn("SpecialityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityID);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
                this.columnSpecialityCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsRow NewBySpec_CovFreqCallsRow() {
                return ((BySpec_CovFreqCallsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BySpec_CovFreqCallsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BySpec_CovFreqCallsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BySpec_CovFreqCallsRowChanged != null)) {
                    this.BySpec_CovFreqCallsRowChanged(this, new BySpec_CovFreqCallsRowChangeEvent(((BySpec_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BySpec_CovFreqCallsRowChanging != null)) {
                    this.BySpec_CovFreqCallsRowChanging(this, new BySpec_CovFreqCallsRowChangeEvent(((BySpec_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BySpec_CovFreqCallsRowDeleted != null)) {
                    this.BySpec_CovFreqCallsRowDeleted(this, new BySpec_CovFreqCallsRowChangeEvent(((BySpec_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BySpec_CovFreqCallsRowDeleting != null)) {
                    this.BySpec_CovFreqCallsRowDeleting(this, new BySpec_CovFreqCallsRowChangeEvent(((BySpec_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBySpec_CovFreqCallsRow(BySpec_CovFreqCallsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary3 ds = new ExecSummary3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BySpec_CovFreqCallsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ByBrick_CovFreqCallsDataTable : global::System.Data.TypedTableBase<ByBrick_CovFreqCallsRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            private global::System.Data.DataColumn columnBrickID;
            
            private global::System.Data.DataColumn columnAmounBrickName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsDataTable() {
                this.TableName = "ByBrick_CovFreqCalls";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByBrick_CovFreqCallsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ByBrick_CovFreqCallsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrickIDColumn {
                get {
                    return this.columnBrickID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmounBrickNameColumn {
                get {
                    return this.columnAmounBrickName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsRow this[int index] {
                get {
                    return ((ByBrick_CovFreqCallsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrick_CovFreqCallsRowChangeEventHandler ByBrick_CovFreqCallsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrick_CovFreqCallsRowChangeEventHandler ByBrick_CovFreqCallsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrick_CovFreqCallsRowChangeEventHandler ByBrick_CovFreqCallsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrick_CovFreqCallsRowChangeEventHandler ByBrick_CovFreqCallsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddByBrick_CovFreqCallsRow(ByBrick_CovFreqCallsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsRow AddByBrick_CovFreqCallsRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls, int BrickID, string AmounBrickName) {
                ByBrick_CovFreqCallsRow rowByBrick_CovFreqCallsRow = ((ByBrick_CovFreqCallsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls,
                        BrickID,
                        AmounBrickName};
                rowByBrick_CovFreqCallsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowByBrick_CovFreqCallsRow);
                return rowByBrick_CovFreqCallsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ByBrick_CovFreqCallsDataTable cln = ((ByBrick_CovFreqCallsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ByBrick_CovFreqCallsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
                this.columnBrickID = base.Columns["BrickID"];
                this.columnAmounBrickName = base.Columns["AmounBrickName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnBrickID = new global::System.Data.DataColumn("BrickID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrickID);
                this.columnAmounBrickName = new global::System.Data.DataColumn("AmounBrickName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmounBrickName);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
                this.columnAmounBrickName.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsRow NewByBrick_CovFreqCallsRow() {
                return ((ByBrick_CovFreqCallsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ByBrick_CovFreqCallsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ByBrick_CovFreqCallsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ByBrick_CovFreqCallsRowChanged != null)) {
                    this.ByBrick_CovFreqCallsRowChanged(this, new ByBrick_CovFreqCallsRowChangeEvent(((ByBrick_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ByBrick_CovFreqCallsRowChanging != null)) {
                    this.ByBrick_CovFreqCallsRowChanging(this, new ByBrick_CovFreqCallsRowChangeEvent(((ByBrick_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ByBrick_CovFreqCallsRowDeleted != null)) {
                    this.ByBrick_CovFreqCallsRowDeleted(this, new ByBrick_CovFreqCallsRowChangeEvent(((ByBrick_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ByBrick_CovFreqCallsRowDeleting != null)) {
                    this.ByBrick_CovFreqCallsRowDeleting(this, new ByBrick_CovFreqCallsRowChangeEvent(((ByBrick_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveByBrick_CovFreqCallsRow(ByBrick_CovFreqCallsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary3 ds = new ExecSummary3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ByBrick_CovFreqCallsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ByClass_CovFreqCallsDataTable : global::System.Data.TypedTableBase<ByClass_CovFreqCallsRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsDataTable() {
                this.TableName = "ByClass_CovFreqCalls";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByClass_CovFreqCallsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ByClass_CovFreqCallsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsRow this[int index] {
                get {
                    return ((ByClass_CovFreqCallsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByClass_CovFreqCallsRowChangeEventHandler ByClass_CovFreqCallsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByClass_CovFreqCallsRowChangeEventHandler ByClass_CovFreqCallsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByClass_CovFreqCallsRowChangeEventHandler ByClass_CovFreqCallsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByClass_CovFreqCallsRowChangeEventHandler ByClass_CovFreqCallsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddByClass_CovFreqCallsRow(ByClass_CovFreqCallsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsRow AddByClass_CovFreqCallsRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal VisitedDoctors, decimal TargetVisits, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls, string PhysicianClass) {
                ByClass_CovFreqCallsRow rowByClass_CovFreqCallsRow = ((ByClass_CovFreqCallsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        VisitedDoctors,
                        TargetVisits,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls,
                        PhysicianClass};
                rowByClass_CovFreqCallsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowByClass_CovFreqCallsRow);
                return rowByClass_CovFreqCallsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ByClass_CovFreqCallsDataTable cln = ((ByClass_CovFreqCallsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ByClass_CovFreqCallsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
                this.columnPhysicianClass.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsRow NewByClass_CovFreqCallsRow() {
                return ((ByClass_CovFreqCallsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ByClass_CovFreqCallsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ByClass_CovFreqCallsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ByClass_CovFreqCallsRowChanged != null)) {
                    this.ByClass_CovFreqCallsRowChanged(this, new ByClass_CovFreqCallsRowChangeEvent(((ByClass_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ByClass_CovFreqCallsRowChanging != null)) {
                    this.ByClass_CovFreqCallsRowChanging(this, new ByClass_CovFreqCallsRowChangeEvent(((ByClass_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ByClass_CovFreqCallsRowDeleted != null)) {
                    this.ByClass_CovFreqCallsRowDeleted(this, new ByClass_CovFreqCallsRowChangeEvent(((ByClass_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ByClass_CovFreqCallsRowDeleting != null)) {
                    this.ByClass_CovFreqCallsRowDeleting(this, new ByClass_CovFreqCallsRowChangeEvent(((ByClass_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveByClass_CovFreqCallsRow(ByClass_CovFreqCallsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary3 ds = new ExecSummary3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ByClass_CovFreqCallsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ByBrand_CovFreqCallsDataTable : global::System.Data.TypedTableBase<ByBrand_CovFreqCallsRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnBrandID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsDataTable() {
                this.TableName = "ByBrand_CovFreqCalls";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByBrand_CovFreqCallsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ByBrand_CovFreqCallsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandIDColumn {
                get {
                    return this.columnBrandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsRow this[int index] {
                get {
                    return ((ByBrand_CovFreqCallsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrand_CovFreqCallsRowChangeEventHandler ByBrand_CovFreqCallsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrand_CovFreqCallsRowChangeEventHandler ByBrand_CovFreqCallsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrand_CovFreqCallsRowChangeEventHandler ByBrand_CovFreqCallsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ByBrand_CovFreqCallsRowChangeEventHandler ByBrand_CovFreqCallsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddByBrand_CovFreqCallsRow(ByBrand_CovFreqCallsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsRow AddByBrand_CovFreqCallsRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls, string BrandName, int BrandID) {
                ByBrand_CovFreqCallsRow rowByBrand_CovFreqCallsRow = ((ByBrand_CovFreqCallsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls,
                        BrandName,
                        BrandID};
                rowByBrand_CovFreqCallsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowByBrand_CovFreqCallsRow);
                return rowByBrand_CovFreqCallsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ByBrand_CovFreqCallsDataTable cln = ((ByBrand_CovFreqCallsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ByBrand_CovFreqCallsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnBrandID = base.Columns["BrandID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnBrandID = new global::System.Data.DataColumn("BrandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandID);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
                this.columnBrandName.MaxLength = 50;
                this.columnBrandID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsRow NewByBrand_CovFreqCallsRow() {
                return ((ByBrand_CovFreqCallsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ByBrand_CovFreqCallsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ByBrand_CovFreqCallsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ByBrand_CovFreqCallsRowChanged != null)) {
                    this.ByBrand_CovFreqCallsRowChanged(this, new ByBrand_CovFreqCallsRowChangeEvent(((ByBrand_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ByBrand_CovFreqCallsRowChanging != null)) {
                    this.ByBrand_CovFreqCallsRowChanging(this, new ByBrand_CovFreqCallsRowChangeEvent(((ByBrand_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ByBrand_CovFreqCallsRowDeleted != null)) {
                    this.ByBrand_CovFreqCallsRowDeleted(this, new ByBrand_CovFreqCallsRowChangeEvent(((ByBrand_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ByBrand_CovFreqCallsRowDeleting != null)) {
                    this.ByBrand_CovFreqCallsRowDeleting(this, new ByBrand_CovFreqCallsRowChangeEvent(((ByBrand_CovFreqCallsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveByBrand_CovFreqCallsRow(ByBrand_CovFreqCallsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary3 ds = new ExecSummary3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ByBrand_CovFreqCallsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Total_CovFreqCallsRow : global::System.Data.DataRow {
            
            private Total_CovFreqCallsDataTable tableTotal_CovFreqCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Total_CovFreqCallsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTotal_CovFreqCalls = ((Total_CovFreqCallsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableTotal_CovFreqCalls.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableTotal_CovFreqCalls.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableTotal_CovFreqCalls.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'Total_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotal_CovFreqCalls.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableTotal_CovFreqCalls.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableTotal_CovFreqCalls.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableTotal_CovFreqCalls.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableTotal_CovFreqCalls.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableTotal_CovFreqCalls.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableTotal_CovFreqCalls.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableTotal_CovFreqCalls.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableTotal_CovFreqCalls.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableTotal_CovFreqCalls.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BySpec_CovFreqCallsRow : global::System.Data.DataRow {
            
            private BySpec_CovFreqCallsDataTable tableBySpec_CovFreqCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BySpec_CovFreqCallsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBySpec_CovFreqCalls = ((BySpec_CovFreqCallsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableBySpec_CovFreqCalls.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableBySpec_CovFreqCalls.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableBySpec_CovFreqCalls.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpecialityID {
                get {
                    try {
                        return ((int)(this[this.tableBySpec_CovFreqCalls.SpecialityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityID\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.SpecialityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableBySpec_CovFreqCalls.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'BySpec_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBySpec_CovFreqCalls.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableBySpec_CovFreqCalls.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableBySpec_CovFreqCalls.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableBySpec_CovFreqCalls.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableBySpec_CovFreqCalls.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableBySpec_CovFreqCalls.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableBySpec_CovFreqCalls.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableBySpec_CovFreqCalls.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableBySpec_CovFreqCalls.ActualCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityIDNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.SpecialityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityIDNull() {
                this[this.tableBySpec_CovFreqCalls.SpecialityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableBySpec_CovFreqCalls.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableBySpec_CovFreqCalls.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ByBrick_CovFreqCallsRow : global::System.Data.DataRow {
            
            private ByBrick_CovFreqCallsDataTable tableByBrick_CovFreqCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByBrick_CovFreqCallsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableByBrick_CovFreqCalls = ((ByBrick_CovFreqCallsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableByBrick_CovFreqCalls.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableByBrick_CovFreqCalls.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrick_CovFreqCalls.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BrickID {
                get {
                    try {
                        return ((int)(this[this.tableByBrick_CovFreqCalls.BrickIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrickID\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.BrickIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmounBrickName {
                get {
                    try {
                        return ((string)(this[this.tableByBrick_CovFreqCalls.AmounBrickNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmounBrickName\' in table \'ByBrick_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrick_CovFreqCalls.AmounBrickNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableByBrick_CovFreqCalls.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableByBrick_CovFreqCalls.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableByBrick_CovFreqCalls.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableByBrick_CovFreqCalls.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableByBrick_CovFreqCalls.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableByBrick_CovFreqCalls.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableByBrick_CovFreqCalls.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableByBrick_CovFreqCalls.ActualCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrickIDNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.BrickIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrickIDNull() {
                this[this.tableByBrick_CovFreqCalls.BrickIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmounBrickNameNull() {
                return this.IsNull(this.tableByBrick_CovFreqCalls.AmounBrickNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmounBrickNameNull() {
                this[this.tableByBrick_CovFreqCalls.AmounBrickNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ByClass_CovFreqCallsRow : global::System.Data.DataRow {
            
            private ByClass_CovFreqCallsDataTable tableByClass_CovFreqCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByClass_CovFreqCallsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableByClass_CovFreqCalls = ((ByClass_CovFreqCallsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableByClass_CovFreqCalls.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableByClass_CovFreqCalls.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByClass_CovFreqCalls.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableByClass_CovFreqCalls.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'ByClass_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByClass_CovFreqCalls.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableByClass_CovFreqCalls.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableByClass_CovFreqCalls.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableByClass_CovFreqCalls.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableByClass_CovFreqCalls.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableByClass_CovFreqCalls.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableByClass_CovFreqCalls.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableByClass_CovFreqCalls.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableByClass_CovFreqCalls.ActualCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableByClass_CovFreqCalls.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableByClass_CovFreqCalls.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ByBrand_CovFreqCallsRow : global::System.Data.DataRow {
            
            private ByBrand_CovFreqCallsDataTable tableByBrand_CovFreqCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ByBrand_CovFreqCallsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableByBrand_CovFreqCalls = ((ByBrand_CovFreqCallsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableByBrand_CovFreqCalls.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableByBrand_CovFreqCalls.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableByBrand_CovFreqCalls.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tableByBrand_CovFreqCalls.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'ByBrand_CovFreqCalls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BrandID {
                get {
                    return ((int)(this[this.tableByBrand_CovFreqCalls.BrandIDColumn]));
                }
                set {
                    this[this.tableByBrand_CovFreqCalls.BrandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableByBrand_CovFreqCalls.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableByBrand_CovFreqCalls.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableByBrand_CovFreqCalls.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableByBrand_CovFreqCalls.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableByBrand_CovFreqCalls.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableByBrand_CovFreqCalls.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableByBrand_CovFreqCalls.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableByBrand_CovFreqCalls.ActualCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tableByBrand_CovFreqCalls.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tableByBrand_CovFreqCalls.BrandNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Total_CovFreqCallsRowChangeEvent : global::System.EventArgs {
            
            private Total_CovFreqCallsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsRowChangeEvent(Total_CovFreqCallsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Total_CovFreqCallsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BySpec_CovFreqCallsRowChangeEvent : global::System.EventArgs {
            
            private BySpec_CovFreqCallsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsRowChangeEvent(BySpec_CovFreqCallsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BySpec_CovFreqCallsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ByBrick_CovFreqCallsRowChangeEvent : global::System.EventArgs {
            
            private ByBrick_CovFreqCallsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsRowChangeEvent(ByBrick_CovFreqCallsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrick_CovFreqCallsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ByClass_CovFreqCallsRowChangeEvent : global::System.EventArgs {
            
            private ByClass_CovFreqCallsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsRowChangeEvent(ByClass_CovFreqCallsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByClass_CovFreqCallsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ByBrand_CovFreqCallsRowChangeEvent : global::System.EventArgs {
            
            private ByBrand_CovFreqCallsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsRowChangeEvent(ByBrand_CovFreqCallsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ByBrand_CovFreqCallsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AmounCRM4.App_Data.ExecSummary3TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Total_CovFreqCallsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Total_CovFreqCallsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Total_CovFreqCalls";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetVisits',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualVisits',
CONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetCalls',
CONVERT(decimal(10,2), COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID = Cycles.CycleID
Where [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID = @EmployeeID
AND [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID = @CycleID
Group By [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID , CycleDesc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web INNER JOIN
                  Cycles ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.EmployeeID = View_Employees.EmployeeID
WHERE     (View_Employees.DirectManagerID = @EmployeeIDFromDM) AND (BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = @CycleIDFromDM)
GROUP BY BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web INNER JOIN
                  Cycles ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.EmployeeID = View_Employees.EmployeeID
WHERE     (View_Employees.TopManagerID = @EmployeeIDFromSM) AND (BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = @CycleIDFromSM)
GROUP BY BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary3.Total_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary3.Total_CovFreqCallsDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.Total_CovFreqCallsDataTable dataTable = new ExecSummary3.Total_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDM(ExecSummary3.Total_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.Total_CovFreqCallsDataTable GetDataByDM(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.Total_CovFreqCallsDataTable dataTable = new ExecSummary3.Total_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySM(ExecSummary3.Total_CovFreqCallsDataTable dataTable, int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.Total_CovFreqCallsDataTable GetDataBySM(int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.Total_CovFreqCallsDataTable dataTable = new ExecSummary3.Total_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BySpec_CovFreqCallsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BySpec_CovFreqCallsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BySpec_CovFreqCalls";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            tableMapping.ColumnMappings.Add("SpecialityID", "SpecialityID");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, a.SpecialityID, Specialities.SpecialityCode, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  Specialities ON a.SpecialityID = Specialities.SpecialityID
WHERE     (a.EmployeeID = @EmployeeID) AND (a.CycleID = @CycleID)
GROUP BY a.CycleID, Cycles.CycleDesc, a.SpecialityID, Specialities.SpecialityCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, a.SpecialityID, Specialities.SpecialityCode, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON a.EmployeeID = View_Employees.EmployeeID INNER JOIN
                  Specialities ON a.SpecialityID = Specialities.SpecialityID
WHERE     (View_Employees.DirectManagerID = @EmployeeIDFromDM) AND (a.CycleID = @CycleIDFromDM)
GROUP BY a.CycleID, Cycles.CycleDesc, Specialities.SpecialityCode, a.SpecialityID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, a.SpecialityID, Specialities.SpecialityCode, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON a.EmployeeID = View_Employees.EmployeeID INNER JOIN
                  Specialities ON a.SpecialityID = Specialities.SpecialityID
WHERE     (View_Employees.TopManagerID = @EmployeeIDFromSM) AND (a.CycleID = @CycleIDFromSM)
GROUP BY a.CycleID, Cycles.CycleDesc, Specialities.SpecialityCode, a.SpecialityID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary3.BySpec_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary3.BySpec_CovFreqCallsDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.BySpec_CovFreqCallsDataTable dataTable = new ExecSummary3.BySpec_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDM(ExecSummary3.BySpec_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.BySpec_CovFreqCallsDataTable GetDataByDM(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.BySpec_CovFreqCallsDataTable dataTable = new ExecSummary3.BySpec_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySM(ExecSummary3.BySpec_CovFreqCallsDataTable dataTable, int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.BySpec_CovFreqCallsDataTable GetDataBySM(int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.BySpec_CovFreqCallsDataTable dataTable = new ExecSummary3.BySpec_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ByBrick_CovFreqCallsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ByBrick_CovFreqCallsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ByBrick_CovFreqCalls";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            tableMapping.ColumnMappings.Add("BrickID", "BrickID");
            tableMapping.ColumnMappings.Add("AmounBrickName", "AmounBrickName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL 
                  THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetCalls', 
                  CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls', a.BrickID, View_EmployeesBricks.AmounBrickName
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_EmployeesBricks ON a.BrickID = View_EmployeesBricks.AmounBrickID
WHERE     (a.CycleID = @CycleID) AND (View_EmployeesBricks.EmployeeID = @EmployeeID)
GROUP BY a.CycleID, Cycles.CycleDesc, a.BrickID, View_EmployeesBricks.AmounBrickName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL 
                  THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetCalls', 
                  CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls', a.BrickID, View_EmployeesBricks.AmounBrickName
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_EmployeesBricks ON a.BrickID = View_EmployeesBricks.AmounBrickID
WHERE     (a.CycleID = @CycleIDFromDM) AND (View_EmployeesBricks.DirectManagerID = @EmployeeIDFromDM)
GROUP BY a.CycleID, Cycles.CycleDesc, a.BrickID, View_EmployeesBricks.AmounBrickName";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL 
                  THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetCalls', 
                  CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls', a.BrickID, View_EmployeesBricks.AmounBrickName
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_EmployeesBricks ON a.BrickID = View_EmployeesBricks.AmounBrickID
WHERE     (a.CycleID = @CycleIDFromSM) AND (View_EmployeesBricks.TopManagerID = @EmployeeIDFromSM)
GROUP BY a.CycleID, Cycles.CycleDesc, a.BrickID, View_EmployeesBricks.AmounBrickName";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable, global::System.Nullable<int> CycleID, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary3.ByBrick_CovFreqCallsDataTable GetDataCovFreq(global::System.Nullable<int> CycleID, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrick_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDM(ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable, global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByBrick_CovFreqCallsDataTable GetDataByDM(global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrick_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySM(ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable, global::System.Nullable<int> CycleIDFromSM, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByBrick_CovFreqCallsDataTable GetDataBySM(global::System.Nullable<int> CycleIDFromSM, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSM));
            ExecSummary3.ByBrick_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrick_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ByClass_CovFreqCallsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ByClass_CovFreqCallsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ByClass_CovFreqCalls";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc, BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.PhysicianClass, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL 
                  END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL 
                  THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), 
                  COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web INNER JOIN
                  Cycles ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = Cycles.CycleID
WHERE     (BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.EmployeeID = @EmployeeID) AND (BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = @CycleID)
GROUP BY BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDesc, BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.PhysicianClass
ORDER BY BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.PhysicianClass";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDes" +
                "c, BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.PhysicianClass, CONVERT(decimal" +
                "(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID EL" +
                "SE NULL \r\n                  END))) AS \'TargetDoctors\', CONVERT(decimal(10, 2), C" +
                "OUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL EN" +
                "D))) AS \'TargetVisits\', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsC" +
                "ount IS NOT NULL \r\n                  THEN AffiliationID ELSE NULL END))) AS \'Vis" +
                "itedDoctors\', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NO" +
                "T NULL THEN AppointmentID ELSE NULL END))) AS \'ActualVisits\', CONVERT(decimal(10" +
                ", 2), \r\n                  COUNT((CASE WHEN TargetCalls IS NOT NULL THEN Appointm" +
                "entID ELSE NULL END))) AS \'TargetCalls\', CONVERT(decimal(10, 2), COUNT((CASE WHE" +
                "N CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS \'ActualCalls\'\r\nF" +
                "ROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web INNER JOIN\r\n           " +
                "       Cycles ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = Cycles." +
                "CycleID INNER JOIN\r\n                  View_Employees ON BW_rep_fn_Union_View_Act" +
                "ualVsTargetCalls5_Web.EmployeeID = View_Employees.EmployeeID\r\nWHERE     (View_Em" +
                "ployees.DirectManagerID = @EmployeeIDFromDM) AND (BW_rep_fn_Union_View_ActualVsT" +
                "argetCalls5_Web.CycleID = @CycleIDFromDM)\r\nGROUP BY BW_rep_fn_Union_View_ActualV" +
                "sTargetCalls5_Web.CycleID, Cycles.CycleDesc, BW_rep_fn_Union_View_ActualVsTarget" +
                "Calls5_Web.PhysicianClass\r\nORDER BY BW_rep_fn_Union_View_ActualVsTargetCalls5_We" +
                "b.PhysicianClass";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID, Cycles.CycleDes" +
                "c, BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.PhysicianClass, CONVERT(decimal" +
                "(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID EL" +
                "SE NULL \r\n                  END))) AS \'TargetDoctors\', CONVERT(decimal(10, 2), C" +
                "OUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL EN" +
                "D))) AS \'TargetVisits\', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsC" +
                "ount IS NOT NULL \r\n                  THEN AffiliationID ELSE NULL END))) AS \'Vis" +
                "itedDoctors\', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NO" +
                "T NULL THEN AppointmentID ELSE NULL END))) AS \'ActualVisits\', CONVERT(decimal(10" +
                ", 2), \r\n                  COUNT((CASE WHEN TargetCalls IS NOT NULL THEN Appointm" +
                "entID ELSE NULL END))) AS \'TargetCalls\', CONVERT(decimal(10, 2), COUNT((CASE WHE" +
                "N CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS \'ActualCalls\'\r\nF" +
                "ROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web INNER JOIN\r\n           " +
                "       Cycles ON BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.CycleID = Cycles." +
                "CycleID INNER JOIN\r\n                  View_Employees ON BW_rep_fn_Union_View_Act" +
                "ualVsTargetCalls5_Web.EmployeeID = View_Employees.EmployeeID\r\nWHERE     (View_Em" +
                "ployees.TopManagerID = @EmployeeIDFromSM) AND (BW_rep_fn_Union_View_ActualVsTarg" +
                "etCalls5_Web.CycleID = @CycleIDFromSM)\r\nGROUP BY BW_rep_fn_Union_View_ActualVsTa" +
                "rgetCalls5_Web.CycleID, Cycles.CycleDesc, BW_rep_fn_Union_View_ActualVsTargetCal" +
                "ls5_Web.PhysicianClass\r\nORDER BY BW_rep_fn_Union_View_ActualVsTargetCalls5_Web.P" +
                "hysicianClass";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary3.ByClass_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary3.ByClass_CovFreqCallsDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByClass_CovFreqCallsDataTable dataTable = new ExecSummary3.ByClass_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDM(ExecSummary3.ByClass_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByClass_CovFreqCallsDataTable GetDataByDM(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByClass_CovFreqCallsDataTable dataTable = new ExecSummary3.ByClass_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySM(ExecSummary3.ByClass_CovFreqCallsDataTable dataTable, int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByClass_CovFreqCallsDataTable GetDataBySM(int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByClass_CovFreqCallsDataTable dataTable = new ExecSummary3.ByClass_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ByBrand_CovFreqCallsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ByBrand_CovFreqCallsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ByBrand_CovFreqCalls";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("BrandID", "BrandID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_Brands ON a.BrandID = View_Brands.BrandID
WHERE     (a.EmployeeID = @EmployeeID) AND (a.CycleID = @CycleID)
GROUP BY a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON a.EmployeeID = View_Employees.EmployeeID INNER JOIN
                  View_Brands ON a.BrandID = View_Brands.BrandID
WHERE     (View_Employees.DirectManagerID = @EmployeeIDFromDM) AND (a.CycleID = @CycleIDFromDM)
GROUP BY a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName, CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors', CONVERT(decimal(10, 2), 
                  COUNT(DISTINCT (CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'TargetVisits', CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors', 
                  CONVERT(decimal(10, 2), COUNT(DISTINCT (CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualVisits', CONVERT(decimal(10, 2), COUNT((CASE WHEN TargetCalls IS NOT NULL THEN AppointmentID ELSE NULL END))) 
                  AS 'TargetCalls', CONVERT(decimal(10, 2), COUNT((CASE WHEN CallsCount IS NOT NULL THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
FROM        BW_rep_fn_Union_View_ActualVsTargetCalls5_Web AS a INNER JOIN
                  Cycles ON a.CycleID = Cycles.CycleID INNER JOIN
                  View_Employees ON a.EmployeeID = View_Employees.EmployeeID INNER JOIN
                  View_Brands ON a.BrandID = View_Brands.BrandID
WHERE     (View_Employees.TopManagerID = @EmployeeIDFromSM) AND (a.CycleID = @CycleIDFromSM)
GROUP BY a.CycleID, Cycles.CycleDesc, View_Brands.BrandID, View_Brands.BrandName";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary3.ByBrand_CovFreqCallsDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrand_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDM(ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByBrand_CovFreqCallsDataTable GetDataByDM(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrand_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySM(ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable, int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary3.ByBrand_CovFreqCallsDataTable GetDataBySM(int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary3.ByBrand_CovFreqCallsDataTable dataTable = new ExecSummary3.ByBrand_CovFreqCallsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ExecSummary3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ExecSummary3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ExecSummary3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ExecSummary3 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591