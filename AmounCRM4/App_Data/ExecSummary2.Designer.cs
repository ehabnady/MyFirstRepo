//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AmounCRM4.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExecSummary2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExecSummary2 : global::System.Data.DataSet {
        
        private View3_FullViewDataTable tableView3_FullView;
        
        private View_PlannedVsActualDataTable tableView_PlannedVsActual;
        
        private View_PlannedVsActualAffsDataTable tableView_PlannedVsActualAffs;
        
        private View_SummaryDataTable tableView_Summary;
        
        private View_ListOfCalls_AdminDataTable tableView_ListOfCalls_Admin;
        
        private AffiliationsByAreaGroupBySpecDataTable tableAffiliationsByAreaGroupBySpec;
        
        private View_AppointmentsDataTable tableView_Appointments;
        
        private View_VisitsFullView2DataTable tableView_VisitsFullView2;
        
        private View_StatisticsDataTable tableView_Statistics;
        
        private View_PlannedVsActual_SavedDataTable tableView_PlannedVsActual_Saved;
        
        private View_PlannedVsActualAffs_SavedDataTable tableView_PlannedVsActualAffs_Saved;
        
        private ActualVsTargetCalls_ECMSDataTable tableActualVsTargetCalls_ECMS;
        
        private View_StatisticesWebViewDataTable tableView_StatisticesWebView;
        
        private View_StatisticesWebView_CovFreqDataTable tableView_StatisticesWebView_CovFreq;
        
        private View_StatisticesWebView_CovFreq2DataTable tableView_StatisticesWebView_CovFreq2;
        
        private View_StatisticesWebView_CovFreq2_RepDataTable tableView_StatisticesWebView_CovFreq2_Rep;
        
        private View_StatisticesWebView_CovFreq2_DMDataTable tableView_StatisticesWebView_CovFreq2_DM;
        
        private View_StatisticesWebView_CovFreq2_SMDataTable tableView_StatisticesWebView_CovFreq2_SM;
        
        private View_StatisticesWebView_CovFreq2_DirDataTable tableView_StatisticesWebView_CovFreq2_Dir;
        
        private View_StatisticesWebView_CovFreq2_ComDirDataTable tableView_StatisticesWebView_CovFreq2_ComDir;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ExecSummary2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ExecSummary2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View3_FullView"] != null)) {
                    base.Tables.Add(new View3_FullViewDataTable(ds.Tables["View3_FullView"]));
                }
                if ((ds.Tables["View_PlannedVsActual"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualDataTable(ds.Tables["View_PlannedVsActual"]));
                }
                if ((ds.Tables["View_PlannedVsActualAffs"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualAffsDataTable(ds.Tables["View_PlannedVsActualAffs"]));
                }
                if ((ds.Tables["View_Summary"] != null)) {
                    base.Tables.Add(new View_SummaryDataTable(ds.Tables["View_Summary"]));
                }
                if ((ds.Tables["View_ListOfCalls_Admin"] != null)) {
                    base.Tables.Add(new View_ListOfCalls_AdminDataTable(ds.Tables["View_ListOfCalls_Admin"]));
                }
                if ((ds.Tables["AffiliationsByAreaGroupBySpec"] != null)) {
                    base.Tables.Add(new AffiliationsByAreaGroupBySpecDataTable(ds.Tables["AffiliationsByAreaGroupBySpec"]));
                }
                if ((ds.Tables["View_Appointments"] != null)) {
                    base.Tables.Add(new View_AppointmentsDataTable(ds.Tables["View_Appointments"]));
                }
                if ((ds.Tables["View_VisitsFullView2"] != null)) {
                    base.Tables.Add(new View_VisitsFullView2DataTable(ds.Tables["View_VisitsFullView2"]));
                }
                if ((ds.Tables["View_Statistics"] != null)) {
                    base.Tables.Add(new View_StatisticsDataTable(ds.Tables["View_Statistics"]));
                }
                if ((ds.Tables["View_PlannedVsActual_Saved"] != null)) {
                    base.Tables.Add(new View_PlannedVsActual_SavedDataTable(ds.Tables["View_PlannedVsActual_Saved"]));
                }
                if ((ds.Tables["View_PlannedVsActualAffs_Saved"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualAffs_SavedDataTable(ds.Tables["View_PlannedVsActualAffs_Saved"]));
                }
                if ((ds.Tables["ActualVsTargetCalls_ECMS"] != null)) {
                    base.Tables.Add(new ActualVsTargetCalls_ECMSDataTable(ds.Tables["ActualVsTargetCalls_ECMS"]));
                }
                if ((ds.Tables["View_StatisticesWebView"] != null)) {
                    base.Tables.Add(new View_StatisticesWebViewDataTable(ds.Tables["View_StatisticesWebView"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreqDataTable(ds.Tables["View_StatisticesWebView_CovFreq"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2DataTable(ds.Tables["View_StatisticesWebView_CovFreq2"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_Rep"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_RepDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_Rep"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_DM"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_DMDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_DM"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_SM"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_SMDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_SM"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_Dir"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_DirDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_Dir"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_ComDir"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_ComDirDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_ComDir"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View3_FullViewDataTable View3_FullView {
            get {
                return this.tableView3_FullView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_PlannedVsActualDataTable View_PlannedVsActual {
            get {
                return this.tableView_PlannedVsActual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_PlannedVsActualAffsDataTable View_PlannedVsActualAffs {
            get {
                return this.tableView_PlannedVsActualAffs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_SummaryDataTable View_Summary {
            get {
                return this.tableView_Summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_ListOfCalls_AdminDataTable View_ListOfCalls_Admin {
            get {
                return this.tableView_ListOfCalls_Admin;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AffiliationsByAreaGroupBySpecDataTable AffiliationsByAreaGroupBySpec {
            get {
                return this.tableAffiliationsByAreaGroupBySpec;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_AppointmentsDataTable View_Appointments {
            get {
                return this.tableView_Appointments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_VisitsFullView2DataTable View_VisitsFullView2 {
            get {
                return this.tableView_VisitsFullView2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticsDataTable View_Statistics {
            get {
                return this.tableView_Statistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_PlannedVsActual_SavedDataTable View_PlannedVsActual_Saved {
            get {
                return this.tableView_PlannedVsActual_Saved;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_PlannedVsActualAffs_SavedDataTable View_PlannedVsActualAffs_Saved {
            get {
                return this.tableView_PlannedVsActualAffs_Saved;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ActualVsTargetCalls_ECMSDataTable ActualVsTargetCalls_ECMS {
            get {
                return this.tableActualVsTargetCalls_ECMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebViewDataTable View_StatisticesWebView {
            get {
                return this.tableView_StatisticesWebView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreqDataTable View_StatisticesWebView_CovFreq {
            get {
                return this.tableView_StatisticesWebView_CovFreq;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2DataTable View_StatisticesWebView_CovFreq2 {
            get {
                return this.tableView_StatisticesWebView_CovFreq2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2_RepDataTable View_StatisticesWebView_CovFreq2_Rep {
            get {
                return this.tableView_StatisticesWebView_CovFreq2_Rep;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2_DMDataTable View_StatisticesWebView_CovFreq2_DM {
            get {
                return this.tableView_StatisticesWebView_CovFreq2_DM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2_SMDataTable View_StatisticesWebView_CovFreq2_SM {
            get {
                return this.tableView_StatisticesWebView_CovFreq2_SM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2_DirDataTable View_StatisticesWebView_CovFreq2_Dir {
            get {
                return this.tableView_StatisticesWebView_CovFreq2_Dir;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_StatisticesWebView_CovFreq2_ComDirDataTable View_StatisticesWebView_CovFreq2_ComDir {
            get {
                return this.tableView_StatisticesWebView_CovFreq2_ComDir;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ExecSummary2 cln = ((ExecSummary2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View3_FullView"] != null)) {
                    base.Tables.Add(new View3_FullViewDataTable(ds.Tables["View3_FullView"]));
                }
                if ((ds.Tables["View_PlannedVsActual"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualDataTable(ds.Tables["View_PlannedVsActual"]));
                }
                if ((ds.Tables["View_PlannedVsActualAffs"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualAffsDataTable(ds.Tables["View_PlannedVsActualAffs"]));
                }
                if ((ds.Tables["View_Summary"] != null)) {
                    base.Tables.Add(new View_SummaryDataTable(ds.Tables["View_Summary"]));
                }
                if ((ds.Tables["View_ListOfCalls_Admin"] != null)) {
                    base.Tables.Add(new View_ListOfCalls_AdminDataTable(ds.Tables["View_ListOfCalls_Admin"]));
                }
                if ((ds.Tables["AffiliationsByAreaGroupBySpec"] != null)) {
                    base.Tables.Add(new AffiliationsByAreaGroupBySpecDataTable(ds.Tables["AffiliationsByAreaGroupBySpec"]));
                }
                if ((ds.Tables["View_Appointments"] != null)) {
                    base.Tables.Add(new View_AppointmentsDataTable(ds.Tables["View_Appointments"]));
                }
                if ((ds.Tables["View_VisitsFullView2"] != null)) {
                    base.Tables.Add(new View_VisitsFullView2DataTable(ds.Tables["View_VisitsFullView2"]));
                }
                if ((ds.Tables["View_Statistics"] != null)) {
                    base.Tables.Add(new View_StatisticsDataTable(ds.Tables["View_Statistics"]));
                }
                if ((ds.Tables["View_PlannedVsActual_Saved"] != null)) {
                    base.Tables.Add(new View_PlannedVsActual_SavedDataTable(ds.Tables["View_PlannedVsActual_Saved"]));
                }
                if ((ds.Tables["View_PlannedVsActualAffs_Saved"] != null)) {
                    base.Tables.Add(new View_PlannedVsActualAffs_SavedDataTable(ds.Tables["View_PlannedVsActualAffs_Saved"]));
                }
                if ((ds.Tables["ActualVsTargetCalls_ECMS"] != null)) {
                    base.Tables.Add(new ActualVsTargetCalls_ECMSDataTable(ds.Tables["ActualVsTargetCalls_ECMS"]));
                }
                if ((ds.Tables["View_StatisticesWebView"] != null)) {
                    base.Tables.Add(new View_StatisticesWebViewDataTable(ds.Tables["View_StatisticesWebView"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreqDataTable(ds.Tables["View_StatisticesWebView_CovFreq"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2DataTable(ds.Tables["View_StatisticesWebView_CovFreq2"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_Rep"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_RepDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_Rep"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_DM"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_DMDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_DM"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_SM"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_SMDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_SM"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_Dir"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_DirDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_Dir"]));
                }
                if ((ds.Tables["View_StatisticesWebView_CovFreq2_ComDir"] != null)) {
                    base.Tables.Add(new View_StatisticesWebView_CovFreq2_ComDirDataTable(ds.Tables["View_StatisticesWebView_CovFreq2_ComDir"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableView3_FullView = ((View3_FullViewDataTable)(base.Tables["View3_FullView"]));
            if ((initTable == true)) {
                if ((this.tableView3_FullView != null)) {
                    this.tableView3_FullView.InitVars();
                }
            }
            this.tableView_PlannedVsActual = ((View_PlannedVsActualDataTable)(base.Tables["View_PlannedVsActual"]));
            if ((initTable == true)) {
                if ((this.tableView_PlannedVsActual != null)) {
                    this.tableView_PlannedVsActual.InitVars();
                }
            }
            this.tableView_PlannedVsActualAffs = ((View_PlannedVsActualAffsDataTable)(base.Tables["View_PlannedVsActualAffs"]));
            if ((initTable == true)) {
                if ((this.tableView_PlannedVsActualAffs != null)) {
                    this.tableView_PlannedVsActualAffs.InitVars();
                }
            }
            this.tableView_Summary = ((View_SummaryDataTable)(base.Tables["View_Summary"]));
            if ((initTable == true)) {
                if ((this.tableView_Summary != null)) {
                    this.tableView_Summary.InitVars();
                }
            }
            this.tableView_ListOfCalls_Admin = ((View_ListOfCalls_AdminDataTable)(base.Tables["View_ListOfCalls_Admin"]));
            if ((initTable == true)) {
                if ((this.tableView_ListOfCalls_Admin != null)) {
                    this.tableView_ListOfCalls_Admin.InitVars();
                }
            }
            this.tableAffiliationsByAreaGroupBySpec = ((AffiliationsByAreaGroupBySpecDataTable)(base.Tables["AffiliationsByAreaGroupBySpec"]));
            if ((initTable == true)) {
                if ((this.tableAffiliationsByAreaGroupBySpec != null)) {
                    this.tableAffiliationsByAreaGroupBySpec.InitVars();
                }
            }
            this.tableView_Appointments = ((View_AppointmentsDataTable)(base.Tables["View_Appointments"]));
            if ((initTable == true)) {
                if ((this.tableView_Appointments != null)) {
                    this.tableView_Appointments.InitVars();
                }
            }
            this.tableView_VisitsFullView2 = ((View_VisitsFullView2DataTable)(base.Tables["View_VisitsFullView2"]));
            if ((initTable == true)) {
                if ((this.tableView_VisitsFullView2 != null)) {
                    this.tableView_VisitsFullView2.InitVars();
                }
            }
            this.tableView_Statistics = ((View_StatisticsDataTable)(base.Tables["View_Statistics"]));
            if ((initTable == true)) {
                if ((this.tableView_Statistics != null)) {
                    this.tableView_Statistics.InitVars();
                }
            }
            this.tableView_PlannedVsActual_Saved = ((View_PlannedVsActual_SavedDataTable)(base.Tables["View_PlannedVsActual_Saved"]));
            if ((initTable == true)) {
                if ((this.tableView_PlannedVsActual_Saved != null)) {
                    this.tableView_PlannedVsActual_Saved.InitVars();
                }
            }
            this.tableView_PlannedVsActualAffs_Saved = ((View_PlannedVsActualAffs_SavedDataTable)(base.Tables["View_PlannedVsActualAffs_Saved"]));
            if ((initTable == true)) {
                if ((this.tableView_PlannedVsActualAffs_Saved != null)) {
                    this.tableView_PlannedVsActualAffs_Saved.InitVars();
                }
            }
            this.tableActualVsTargetCalls_ECMS = ((ActualVsTargetCalls_ECMSDataTable)(base.Tables["ActualVsTargetCalls_ECMS"]));
            if ((initTable == true)) {
                if ((this.tableActualVsTargetCalls_ECMS != null)) {
                    this.tableActualVsTargetCalls_ECMS.InitVars();
                }
            }
            this.tableView_StatisticesWebView = ((View_StatisticesWebViewDataTable)(base.Tables["View_StatisticesWebView"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView != null)) {
                    this.tableView_StatisticesWebView.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq = ((View_StatisticesWebView_CovFreqDataTable)(base.Tables["View_StatisticesWebView_CovFreq"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq != null)) {
                    this.tableView_StatisticesWebView_CovFreq.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2 = ((View_StatisticesWebView_CovFreq2DataTable)(base.Tables["View_StatisticesWebView_CovFreq2"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2 != null)) {
                    this.tableView_StatisticesWebView_CovFreq2.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2_Rep = ((View_StatisticesWebView_CovFreq2_RepDataTable)(base.Tables["View_StatisticesWebView_CovFreq2_Rep"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2_Rep != null)) {
                    this.tableView_StatisticesWebView_CovFreq2_Rep.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2_DM = ((View_StatisticesWebView_CovFreq2_DMDataTable)(base.Tables["View_StatisticesWebView_CovFreq2_DM"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2_DM != null)) {
                    this.tableView_StatisticesWebView_CovFreq2_DM.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2_SM = ((View_StatisticesWebView_CovFreq2_SMDataTable)(base.Tables["View_StatisticesWebView_CovFreq2_SM"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2_SM != null)) {
                    this.tableView_StatisticesWebView_CovFreq2_SM.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2_Dir = ((View_StatisticesWebView_CovFreq2_DirDataTable)(base.Tables["View_StatisticesWebView_CovFreq2_Dir"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2_Dir != null)) {
                    this.tableView_StatisticesWebView_CovFreq2_Dir.InitVars();
                }
            }
            this.tableView_StatisticesWebView_CovFreq2_ComDir = ((View_StatisticesWebView_CovFreq2_ComDirDataTable)(base.Tables["View_StatisticesWebView_CovFreq2_ComDir"]));
            if ((initTable == true)) {
                if ((this.tableView_StatisticesWebView_CovFreq2_ComDir != null)) {
                    this.tableView_StatisticesWebView_CovFreq2_ComDir.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ExecSummary2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExecSummary2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView3_FullView = new View3_FullViewDataTable();
            base.Tables.Add(this.tableView3_FullView);
            this.tableView_PlannedVsActual = new View_PlannedVsActualDataTable();
            base.Tables.Add(this.tableView_PlannedVsActual);
            this.tableView_PlannedVsActualAffs = new View_PlannedVsActualAffsDataTable();
            base.Tables.Add(this.tableView_PlannedVsActualAffs);
            this.tableView_Summary = new View_SummaryDataTable();
            base.Tables.Add(this.tableView_Summary);
            this.tableView_ListOfCalls_Admin = new View_ListOfCalls_AdminDataTable();
            base.Tables.Add(this.tableView_ListOfCalls_Admin);
            this.tableAffiliationsByAreaGroupBySpec = new AffiliationsByAreaGroupBySpecDataTable();
            base.Tables.Add(this.tableAffiliationsByAreaGroupBySpec);
            this.tableView_Appointments = new View_AppointmentsDataTable();
            base.Tables.Add(this.tableView_Appointments);
            this.tableView_VisitsFullView2 = new View_VisitsFullView2DataTable();
            base.Tables.Add(this.tableView_VisitsFullView2);
            this.tableView_Statistics = new View_StatisticsDataTable();
            base.Tables.Add(this.tableView_Statistics);
            this.tableView_PlannedVsActual_Saved = new View_PlannedVsActual_SavedDataTable();
            base.Tables.Add(this.tableView_PlannedVsActual_Saved);
            this.tableView_PlannedVsActualAffs_Saved = new View_PlannedVsActualAffs_SavedDataTable();
            base.Tables.Add(this.tableView_PlannedVsActualAffs_Saved);
            this.tableActualVsTargetCalls_ECMS = new ActualVsTargetCalls_ECMSDataTable();
            base.Tables.Add(this.tableActualVsTargetCalls_ECMS);
            this.tableView_StatisticesWebView = new View_StatisticesWebViewDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView);
            this.tableView_StatisticesWebView_CovFreq = new View_StatisticesWebView_CovFreqDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq);
            this.tableView_StatisticesWebView_CovFreq2 = new View_StatisticesWebView_CovFreq2DataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2);
            this.tableView_StatisticesWebView_CovFreq2_Rep = new View_StatisticesWebView_CovFreq2_RepDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2_Rep);
            this.tableView_StatisticesWebView_CovFreq2_DM = new View_StatisticesWebView_CovFreq2_DMDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2_DM);
            this.tableView_StatisticesWebView_CovFreq2_SM = new View_StatisticesWebView_CovFreq2_SMDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2_SM);
            this.tableView_StatisticesWebView_CovFreq2_Dir = new View_StatisticesWebView_CovFreq2_DirDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2_Dir);
            this.tableView_StatisticesWebView_CovFreq2_ComDir = new View_StatisticesWebView_CovFreq2_ComDirDataTable();
            base.Tables.Add(this.tableView_StatisticesWebView_CovFreq2_ComDir);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView3_FullView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_PlannedVsActual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_PlannedVsActualAffs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_Summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_ListOfCalls_Admin() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAffiliationsByAreaGroupBySpec() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_Appointments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_VisitsFullView2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_Statistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_PlannedVsActual_Saved() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_PlannedVsActualAffs_Saved() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeActualVsTargetCalls_ECMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2_Rep() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2_DM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2_SM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2_Dir() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeView_StatisticesWebView_CovFreq2_ComDir() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExecSummary2 ds = new ExecSummary2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View3_FullViewRowChangeEventHandler(object sender, View3_FullViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_PlannedVsActualRowChangeEventHandler(object sender, View_PlannedVsActualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_PlannedVsActualAffsRowChangeEventHandler(object sender, View_PlannedVsActualAffsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_SummaryRowChangeEventHandler(object sender, View_SummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_ListOfCalls_AdminRowChangeEventHandler(object sender, View_ListOfCalls_AdminRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AffiliationsByAreaGroupBySpecRowChangeEventHandler(object sender, AffiliationsByAreaGroupBySpecRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_AppointmentsRowChangeEventHandler(object sender, View_AppointmentsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_VisitsFullView2RowChangeEventHandler(object sender, View_VisitsFullView2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticsRowChangeEventHandler(object sender, View_StatisticsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_PlannedVsActual_SavedRowChangeEventHandler(object sender, View_PlannedVsActual_SavedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_PlannedVsActualAffs_SavedRowChangeEventHandler(object sender, View_PlannedVsActualAffs_SavedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ActualVsTargetCalls_ECMSRowChangeEventHandler(object sender, ActualVsTargetCalls_ECMSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebViewRowChangeEventHandler(object sender, View_StatisticesWebViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreqRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreqRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2RowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2_RepRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2_RepRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2_DMRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2_DMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2_SMRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2_SMRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2_DirRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2_DirRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void View_StatisticesWebView_CovFreq2_ComDirRowChangeEventHandler(object sender, View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View3_FullViewDataTable : global::System.Data.TypedTableBase<View3_FullViewRow> {
            
            private global::System.Data.DataColumn columnYearID;
            
            private global::System.Data.DataColumn columnQuarterID;
            
            private global::System.Data.DataColumn columnMonthID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnPlannedVisits;
            
            private global::System.Data.DataColumn columnVisitedPhysicians;
            
            private global::System.Data.DataColumn columnPlannedPhysicians;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnLineID;
            
            private global::System.Data.DataColumn columnIsTargeted2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewDataTable() {
                this.TableName = "View3_FullView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View3_FullViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View3_FullViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearIDColumn {
                get {
                    return this.columnYearID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuarterIDColumn {
                get {
                    return this.columnQuarterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthIDColumn {
                get {
                    return this.columnMonthID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannedVisitsColumn {
                get {
                    return this.columnPlannedVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedPhysiciansColumn {
                get {
                    return this.columnVisitedPhysicians;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannedPhysiciansColumn {
                get {
                    return this.columnPlannedPhysicians;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTargeted2Column {
                get {
                    return this.columnIsTargeted2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewRow this[int index] {
                get {
                    return ((View3_FullViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View3_FullViewRowChangeEventHandler View3_FullViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View3_FullViewRowChangeEventHandler View3_FullViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View3_FullViewRowChangeEventHandler View3_FullViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View3_FullViewRowChangeEventHandler View3_FullViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView3_FullViewRow(View3_FullViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewRow AddView3_FullViewRow(int YearID, int QuarterID, int MonthID, string CycleDesc, string PhysicianClass, string SpecialityCode, string Area, int ActualVisits, int PlannedVisits, int VisitedPhysicians, int PlannedPhysicians, string EmployeeName, int LineID, string IsTargeted2) {
                View3_FullViewRow rowView3_FullViewRow = ((View3_FullViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YearID,
                        QuarterID,
                        MonthID,
                        CycleDesc,
                        PhysicianClass,
                        SpecialityCode,
                        Area,
                        ActualVisits,
                        PlannedVisits,
                        VisitedPhysicians,
                        PlannedPhysicians,
                        EmployeeName,
                        LineID,
                        IsTargeted2};
                rowView3_FullViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView3_FullViewRow);
                return rowView3_FullViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View3_FullViewDataTable cln = ((View3_FullViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View3_FullViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYearID = base.Columns["YearID"];
                this.columnQuarterID = base.Columns["QuarterID"];
                this.columnMonthID = base.Columns["MonthID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnArea = base.Columns["Area"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnPlannedVisits = base.Columns["PlannedVisits"];
                this.columnVisitedPhysicians = base.Columns["VisitedPhysicians"];
                this.columnPlannedPhysicians = base.Columns["PlannedPhysicians"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnLineID = base.Columns["LineID"];
                this.columnIsTargeted2 = base.Columns["IsTargeted2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYearID = new global::System.Data.DataColumn("YearID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearID);
                this.columnQuarterID = new global::System.Data.DataColumn("QuarterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuarterID);
                this.columnMonthID = new global::System.Data.DataColumn("MonthID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnPlannedVisits = new global::System.Data.DataColumn("PlannedVisits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannedVisits);
                this.columnVisitedPhysicians = new global::System.Data.DataColumn("VisitedPhysicians", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedPhysicians);
                this.columnPlannedPhysicians = new global::System.Data.DataColumn("PlannedPhysicians", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannedPhysicians);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
                this.columnIsTargeted2 = new global::System.Data.DataColumn("IsTargeted2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTargeted2);
                this.columnCycleDesc.MaxLength = 50;
                this.columnPhysicianClass.MaxLength = 2;
                this.columnSpecialityCode.MaxLength = 50;
                this.columnArea.MaxLength = 60;
                this.columnActualVisits.ReadOnly = true;
                this.columnPlannedVisits.ReadOnly = true;
                this.columnVisitedPhysicians.ReadOnly = true;
                this.columnPlannedPhysicians.ReadOnly = true;
                this.columnEmployeeName.MaxLength = 100;
                this.columnIsTargeted2.AllowDBNull = false;
                this.columnIsTargeted2.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewRow NewView3_FullViewRow() {
                return ((View3_FullViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View3_FullViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View3_FullViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View3_FullViewRowChanged != null)) {
                    this.View3_FullViewRowChanged(this, new View3_FullViewRowChangeEvent(((View3_FullViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View3_FullViewRowChanging != null)) {
                    this.View3_FullViewRowChanging(this, new View3_FullViewRowChangeEvent(((View3_FullViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View3_FullViewRowDeleted != null)) {
                    this.View3_FullViewRowDeleted(this, new View3_FullViewRowChangeEvent(((View3_FullViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View3_FullViewRowDeleting != null)) {
                    this.View3_FullViewRowDeleting(this, new View3_FullViewRowChangeEvent(((View3_FullViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView3_FullViewRow(View3_FullViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View3_FullViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_PlannedVsActualDataTable : global::System.Data.TypedTableBase<View_PlannedVsActualRow> {
            
            private global::System.Data.DataColumn columnActualCount;
            
            private global::System.Data.DataColumn columnAppointmentsCount;
            
            private global::System.Data.DataColumn columnAchievmentRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualDataTable() {
                this.TableName = "View_PlannedVsActual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_PlannedVsActualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCountColumn {
                get {
                    return this.columnActualCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppointmentsCountColumn {
                get {
                    return this.columnAppointmentsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AchievmentRatioColumn {
                get {
                    return this.columnAchievmentRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualRow this[int index] {
                get {
                    return ((View_PlannedVsActualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualRowChangeEventHandler View_PlannedVsActualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualRowChangeEventHandler View_PlannedVsActualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualRowChangeEventHandler View_PlannedVsActualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualRowChangeEventHandler View_PlannedVsActualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_PlannedVsActualRow(View_PlannedVsActualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualRow AddView_PlannedVsActualRow(int ActualCount, int AppointmentsCount, decimal AchievmentRatio) {
                View_PlannedVsActualRow rowView_PlannedVsActualRow = ((View_PlannedVsActualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ActualCount,
                        AppointmentsCount,
                        AchievmentRatio};
                rowView_PlannedVsActualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_PlannedVsActualRow);
                return rowView_PlannedVsActualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_PlannedVsActualDataTable cln = ((View_PlannedVsActualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_PlannedVsActualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnActualCount = base.Columns["ActualCount"];
                this.columnAppointmentsCount = base.Columns["AppointmentsCount"];
                this.columnAchievmentRatio = base.Columns["AchievmentRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnActualCount = new global::System.Data.DataColumn("ActualCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCount);
                this.columnAppointmentsCount = new global::System.Data.DataColumn("AppointmentsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentsCount);
                this.columnAchievmentRatio = new global::System.Data.DataColumn("AchievmentRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievmentRatio);
                this.columnActualCount.ReadOnly = true;
                this.columnAppointmentsCount.ReadOnly = true;
                this.columnAchievmentRatio.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualRow NewView_PlannedVsActualRow() {
                return ((View_PlannedVsActualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_PlannedVsActualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_PlannedVsActualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_PlannedVsActualRowChanged != null)) {
                    this.View_PlannedVsActualRowChanged(this, new View_PlannedVsActualRowChangeEvent(((View_PlannedVsActualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_PlannedVsActualRowChanging != null)) {
                    this.View_PlannedVsActualRowChanging(this, new View_PlannedVsActualRowChangeEvent(((View_PlannedVsActualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_PlannedVsActualRowDeleted != null)) {
                    this.View_PlannedVsActualRowDeleted(this, new View_PlannedVsActualRowChangeEvent(((View_PlannedVsActualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_PlannedVsActualRowDeleting != null)) {
                    this.View_PlannedVsActualRowDeleting(this, new View_PlannedVsActualRowChangeEvent(((View_PlannedVsActualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_PlannedVsActualRow(View_PlannedVsActualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_PlannedVsActualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_PlannedVsActualAffsDataTable : global::System.Data.TypedTableBase<View_PlannedVsActualAffsRow> {
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnPlannedAffsCount;
            
            private global::System.Data.DataColumn columnActualAffsCount;
            
            private global::System.Data.DataColumn columnCoverage_Ratio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsDataTable() {
                this.TableName = "View_PlannedVsActualAffs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualAffsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_PlannedVsActualAffsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannedAffsCountColumn {
                get {
                    return this.columnPlannedAffsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualAffsCountColumn {
                get {
                    return this.columnActualAffsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Coverage_RatioColumn {
                get {
                    return this.columnCoverage_Ratio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsRow this[int index] {
                get {
                    return ((View_PlannedVsActualAffsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffsRowChangeEventHandler View_PlannedVsActualAffsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffsRowChangeEventHandler View_PlannedVsActualAffsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffsRowChangeEventHandler View_PlannedVsActualAffsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffsRowChangeEventHandler View_PlannedVsActualAffsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_PlannedVsActualAffsRow(View_PlannedVsActualAffsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsRow AddView_PlannedVsActualAffsRow(string PhysicianClass, int PlannedAffsCount, int ActualAffsCount, decimal Coverage_Ratio) {
                View_PlannedVsActualAffsRow rowView_PlannedVsActualAffsRow = ((View_PlannedVsActualAffsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PhysicianClass,
                        PlannedAffsCount,
                        ActualAffsCount,
                        Coverage_Ratio};
                rowView_PlannedVsActualAffsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_PlannedVsActualAffsRow);
                return rowView_PlannedVsActualAffsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_PlannedVsActualAffsDataTable cln = ((View_PlannedVsActualAffsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_PlannedVsActualAffsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnPlannedAffsCount = base.Columns["PlannedAffsCount"];
                this.columnActualAffsCount = base.Columns["ActualAffsCount"];
                this.columnCoverage_Ratio = base.Columns["Coverage_Ratio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnPlannedAffsCount = new global::System.Data.DataColumn("PlannedAffsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannedAffsCount);
                this.columnActualAffsCount = new global::System.Data.DataColumn("ActualAffsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualAffsCount);
                this.columnCoverage_Ratio = new global::System.Data.DataColumn("Coverage_Ratio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoverage_Ratio);
                this.columnPhysicianClass.MaxLength = 2;
                this.columnPlannedAffsCount.ReadOnly = true;
                this.columnActualAffsCount.ReadOnly = true;
                this.columnCoverage_Ratio.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsRow NewView_PlannedVsActualAffsRow() {
                return ((View_PlannedVsActualAffsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_PlannedVsActualAffsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_PlannedVsActualAffsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_PlannedVsActualAffsRowChanged != null)) {
                    this.View_PlannedVsActualAffsRowChanged(this, new View_PlannedVsActualAffsRowChangeEvent(((View_PlannedVsActualAffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_PlannedVsActualAffsRowChanging != null)) {
                    this.View_PlannedVsActualAffsRowChanging(this, new View_PlannedVsActualAffsRowChangeEvent(((View_PlannedVsActualAffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_PlannedVsActualAffsRowDeleted != null)) {
                    this.View_PlannedVsActualAffsRowDeleted(this, new View_PlannedVsActualAffsRowChangeEvent(((View_PlannedVsActualAffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_PlannedVsActualAffsRowDeleting != null)) {
                    this.View_PlannedVsActualAffsRowDeleting(this, new View_PlannedVsActualAffsRowChangeEvent(((View_PlannedVsActualAffsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_PlannedVsActualAffsRow(View_PlannedVsActualAffsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_PlannedVsActualAffsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_SummaryDataTable : global::System.Data.TypedTableBase<View_SummaryRow> {
            
            private global::System.Data.DataColumn columnVisits;
            
            private global::System.Data.DataColumn columnVisited_Affs;
            
            private global::System.Data.DataColumn columnAppointments;
            
            private global::System.Data.DataColumn columnPlanned_Affs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryDataTable() {
                this.TableName = "View_Summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_SummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_SummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitsColumn {
                get {
                    return this.columnVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Visited_AffsColumn {
                get {
                    return this.columnVisited_Affs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppointmentsColumn {
                get {
                    return this.columnAppointments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Planned_AffsColumn {
                get {
                    return this.columnPlanned_Affs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryRow this[int index] {
                get {
                    return ((View_SummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_SummaryRowChangeEventHandler View_SummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_SummaryRowChangeEventHandler View_SummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_SummaryRowChangeEventHandler View_SummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_SummaryRowChangeEventHandler View_SummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_SummaryRow(View_SummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryRow AddView_SummaryRow(int Visits, int Visited_Affs, int Appointments, int Planned_Affs) {
                View_SummaryRow rowView_SummaryRow = ((View_SummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Visits,
                        Visited_Affs,
                        Appointments,
                        Planned_Affs};
                rowView_SummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_SummaryRow);
                return rowView_SummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_SummaryDataTable cln = ((View_SummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_SummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVisits = base.Columns["Visits"];
                this.columnVisited_Affs = base.Columns["Visited Affs"];
                this.columnAppointments = base.Columns["Appointments"];
                this.columnPlanned_Affs = base.Columns["Planned Affs"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVisits = new global::System.Data.DataColumn("Visits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisits);
                this.columnVisited_Affs = new global::System.Data.DataColumn("Visited Affs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisited_Affs);
                this.columnAppointments = new global::System.Data.DataColumn("Appointments", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointments);
                this.columnPlanned_Affs = new global::System.Data.DataColumn("Planned Affs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanned_Affs);
                this.columnVisits.ReadOnly = true;
                this.columnVisited_Affs.ReadOnly = true;
                this.columnAppointments.ReadOnly = true;
                this.columnPlanned_Affs.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryRow NewView_SummaryRow() {
                return ((View_SummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_SummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_SummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_SummaryRowChanged != null)) {
                    this.View_SummaryRowChanged(this, new View_SummaryRowChangeEvent(((View_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_SummaryRowChanging != null)) {
                    this.View_SummaryRowChanging(this, new View_SummaryRowChangeEvent(((View_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_SummaryRowDeleted != null)) {
                    this.View_SummaryRowDeleted(this, new View_SummaryRowChangeEvent(((View_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_SummaryRowDeleting != null)) {
                    this.View_SummaryRowDeleting(this, new View_SummaryRowChangeEvent(((View_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_SummaryRow(View_SummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_SummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_ListOfCalls_AdminDataTable : global::System.Data.TypedTableBase<View_ListOfCalls_AdminRow> {
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnNo_of_Visits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminDataTable() {
                this.TableName = "View_ListOfCalls_Admin";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_ListOfCalls_AdminDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_ListOfCalls_AdminDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_VisitsColumn {
                get {
                    return this.columnNo_of_Visits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminRow this[int index] {
                get {
                    return ((View_ListOfCalls_AdminRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_ListOfCalls_AdminRowChangeEventHandler View_ListOfCalls_AdminRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_ListOfCalls_AdminRowChangeEventHandler View_ListOfCalls_AdminRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_ListOfCalls_AdminRowChangeEventHandler View_ListOfCalls_AdminRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_ListOfCalls_AdminRowChangeEventHandler View_ListOfCalls_AdminRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_ListOfCalls_AdminRow(View_ListOfCalls_AdminRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminRow AddView_ListOfCalls_AdminRow(string SpecialityCode, int No_of_Visits) {
                View_ListOfCalls_AdminRow rowView_ListOfCalls_AdminRow = ((View_ListOfCalls_AdminRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SpecialityCode,
                        No_of_Visits};
                rowView_ListOfCalls_AdminRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_ListOfCalls_AdminRow);
                return rowView_ListOfCalls_AdminRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_ListOfCalls_AdminDataTable cln = ((View_ListOfCalls_AdminDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_ListOfCalls_AdminDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnNo_of_Visits = base.Columns["No_of_Visits"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnNo_of_Visits = new global::System.Data.DataColumn("No_of_Visits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_Visits);
                this.columnSpecialityCode.MaxLength = 50;
                this.columnNo_of_Visits.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminRow NewView_ListOfCalls_AdminRow() {
                return ((View_ListOfCalls_AdminRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_ListOfCalls_AdminRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_ListOfCalls_AdminRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_ListOfCalls_AdminRowChanged != null)) {
                    this.View_ListOfCalls_AdminRowChanged(this, new View_ListOfCalls_AdminRowChangeEvent(((View_ListOfCalls_AdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_ListOfCalls_AdminRowChanging != null)) {
                    this.View_ListOfCalls_AdminRowChanging(this, new View_ListOfCalls_AdminRowChangeEvent(((View_ListOfCalls_AdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_ListOfCalls_AdminRowDeleted != null)) {
                    this.View_ListOfCalls_AdminRowDeleted(this, new View_ListOfCalls_AdminRowChangeEvent(((View_ListOfCalls_AdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_ListOfCalls_AdminRowDeleting != null)) {
                    this.View_ListOfCalls_AdminRowDeleting(this, new View_ListOfCalls_AdminRowChangeEvent(((View_ListOfCalls_AdminRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_ListOfCalls_AdminRow(View_ListOfCalls_AdminRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_ListOfCalls_AdminDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AffiliationsByAreaGroupBySpecDataTable : global::System.Data.TypedTableBase<AffiliationsByAreaGroupBySpecRow> {
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnNo_Of_Physician;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecDataTable() {
                this.TableName = "AffiliationsByAreaGroupBySpec";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AffiliationsByAreaGroupBySpecDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AffiliationsByAreaGroupBySpecDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_Of_PhysicianColumn {
                get {
                    return this.columnNo_Of_Physician;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecRow this[int index] {
                get {
                    return ((AffiliationsByAreaGroupBySpecRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AffiliationsByAreaGroupBySpecRowChangeEventHandler AffiliationsByAreaGroupBySpecRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AffiliationsByAreaGroupBySpecRowChangeEventHandler AffiliationsByAreaGroupBySpecRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AffiliationsByAreaGroupBySpecRowChangeEventHandler AffiliationsByAreaGroupBySpecRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AffiliationsByAreaGroupBySpecRowChangeEventHandler AffiliationsByAreaGroupBySpecRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAffiliationsByAreaGroupBySpecRow(AffiliationsByAreaGroupBySpecRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecRow AddAffiliationsByAreaGroupBySpecRow(string SpecialityCode, int No_Of_Physician) {
                AffiliationsByAreaGroupBySpecRow rowAffiliationsByAreaGroupBySpecRow = ((AffiliationsByAreaGroupBySpecRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SpecialityCode,
                        No_Of_Physician};
                rowAffiliationsByAreaGroupBySpecRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAffiliationsByAreaGroupBySpecRow);
                return rowAffiliationsByAreaGroupBySpecRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AffiliationsByAreaGroupBySpecDataTable cln = ((AffiliationsByAreaGroupBySpecDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AffiliationsByAreaGroupBySpecDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnNo_Of_Physician = base.Columns["No_Of_Physician"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnNo_Of_Physician = new global::System.Data.DataColumn("No_Of_Physician", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Of_Physician);
                this.columnSpecialityCode.MaxLength = 50;
                this.columnNo_Of_Physician.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecRow NewAffiliationsByAreaGroupBySpecRow() {
                return ((AffiliationsByAreaGroupBySpecRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AffiliationsByAreaGroupBySpecRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AffiliationsByAreaGroupBySpecRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AffiliationsByAreaGroupBySpecRowChanged != null)) {
                    this.AffiliationsByAreaGroupBySpecRowChanged(this, new AffiliationsByAreaGroupBySpecRowChangeEvent(((AffiliationsByAreaGroupBySpecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AffiliationsByAreaGroupBySpecRowChanging != null)) {
                    this.AffiliationsByAreaGroupBySpecRowChanging(this, new AffiliationsByAreaGroupBySpecRowChangeEvent(((AffiliationsByAreaGroupBySpecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AffiliationsByAreaGroupBySpecRowDeleted != null)) {
                    this.AffiliationsByAreaGroupBySpecRowDeleted(this, new AffiliationsByAreaGroupBySpecRowChangeEvent(((AffiliationsByAreaGroupBySpecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AffiliationsByAreaGroupBySpecRowDeleting != null)) {
                    this.AffiliationsByAreaGroupBySpecRowDeleting(this, new AffiliationsByAreaGroupBySpecRowChangeEvent(((AffiliationsByAreaGroupBySpecRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAffiliationsByAreaGroupBySpecRow(AffiliationsByAreaGroupBySpecRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AffiliationsByAreaGroupBySpecDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_AppointmentsDataTable : global::System.Data.TypedTableBase<View_AppointmentsRow> {
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnNo_of_Appointments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsDataTable() {
                this.TableName = "View_Appointments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_AppointmentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_AppointmentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_AppointmentsColumn {
                get {
                    return this.columnNo_of_Appointments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsRow this[int index] {
                get {
                    return ((View_AppointmentsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_AppointmentsRowChangeEventHandler View_AppointmentsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_AppointmentsRowChangeEventHandler View_AppointmentsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_AppointmentsRowChangeEventHandler View_AppointmentsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_AppointmentsRowChangeEventHandler View_AppointmentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_AppointmentsRow(View_AppointmentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsRow AddView_AppointmentsRow(string SpecialityCode, int No_of_Appointments) {
                View_AppointmentsRow rowView_AppointmentsRow = ((View_AppointmentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SpecialityCode,
                        No_of_Appointments};
                rowView_AppointmentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_AppointmentsRow);
                return rowView_AppointmentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_AppointmentsDataTable cln = ((View_AppointmentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_AppointmentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnNo_of_Appointments = base.Columns["No_of_Appointments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnNo_of_Appointments = new global::System.Data.DataColumn("No_of_Appointments", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_Appointments);
                this.columnSpecialityCode.MaxLength = 50;
                this.columnNo_of_Appointments.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsRow NewView_AppointmentsRow() {
                return ((View_AppointmentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_AppointmentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_AppointmentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_AppointmentsRowChanged != null)) {
                    this.View_AppointmentsRowChanged(this, new View_AppointmentsRowChangeEvent(((View_AppointmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_AppointmentsRowChanging != null)) {
                    this.View_AppointmentsRowChanging(this, new View_AppointmentsRowChangeEvent(((View_AppointmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_AppointmentsRowDeleted != null)) {
                    this.View_AppointmentsRowDeleted(this, new View_AppointmentsRowChangeEvent(((View_AppointmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_AppointmentsRowDeleting != null)) {
                    this.View_AppointmentsRowDeleting(this, new View_AppointmentsRowChangeEvent(((View_AppointmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_AppointmentsRow(View_AppointmentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_AppointmentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_VisitsFullView2DataTable : global::System.Data.TypedTableBase<View_VisitsFullView2Row> {
            
            private global::System.Data.DataColumn columnYearID;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnQuarterID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnNo_of_Visits;
            
            private global::System.Data.DataColumn columnNo_of_Physicians;
            
            private global::System.Data.DataColumn columnNo_of_PlannedVisits;
            
            private global::System.Data.DataColumn columnNo_of_PlannedPhysicians;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2DataTable() {
                this.TableName = "View_VisitsFullView2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_VisitsFullView2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_VisitsFullView2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearIDColumn {
                get {
                    return this.columnYearID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuarterIDColumn {
                get {
                    return this.columnQuarterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_VisitsColumn {
                get {
                    return this.columnNo_of_Visits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_PhysiciansColumn {
                get {
                    return this.columnNo_of_Physicians;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_PlannedVisitsColumn {
                get {
                    return this.columnNo_of_PlannedVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn No_of_PlannedPhysiciansColumn {
                get {
                    return this.columnNo_of_PlannedPhysicians;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2Row this[int index] {
                get {
                    return ((View_VisitsFullView2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_VisitsFullView2RowChangeEventHandler View_VisitsFullView2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_VisitsFullView2RowChangeEventHandler View_VisitsFullView2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_VisitsFullView2RowChangeEventHandler View_VisitsFullView2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_VisitsFullView2RowChangeEventHandler View_VisitsFullView2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_VisitsFullView2Row(View_VisitsFullView2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2Row AddView_VisitsFullView2Row(int YearID, string BrandName, string SpecialityCode, string PhysicianClass, int QuarterID, string CycleDesc, int No_of_Visits, int No_of_Physicians, int No_of_PlannedVisits, int No_of_PlannedPhysicians) {
                View_VisitsFullView2Row rowView_VisitsFullView2Row = ((View_VisitsFullView2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YearID,
                        BrandName,
                        SpecialityCode,
                        PhysicianClass,
                        QuarterID,
                        CycleDesc,
                        No_of_Visits,
                        No_of_Physicians,
                        No_of_PlannedVisits,
                        No_of_PlannedPhysicians};
                rowView_VisitsFullView2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_VisitsFullView2Row);
                return rowView_VisitsFullView2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_VisitsFullView2DataTable cln = ((View_VisitsFullView2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_VisitsFullView2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYearID = base.Columns["YearID"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnQuarterID = base.Columns["QuarterID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnNo_of_Visits = base.Columns["No_of_Visits"];
                this.columnNo_of_Physicians = base.Columns["No_of_Physicians"];
                this.columnNo_of_PlannedVisits = base.Columns["No_of_PlannedVisits"];
                this.columnNo_of_PlannedPhysicians = base.Columns["No_of_PlannedPhysicians"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYearID = new global::System.Data.DataColumn("YearID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearID);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnQuarterID = new global::System.Data.DataColumn("QuarterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuarterID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnNo_of_Visits = new global::System.Data.DataColumn("No_of_Visits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_Visits);
                this.columnNo_of_Physicians = new global::System.Data.DataColumn("No_of_Physicians", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_Physicians);
                this.columnNo_of_PlannedVisits = new global::System.Data.DataColumn("No_of_PlannedVisits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_PlannedVisits);
                this.columnNo_of_PlannedPhysicians = new global::System.Data.DataColumn("No_of_PlannedPhysicians", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_of_PlannedPhysicians);
                this.columnBrandName.MaxLength = 50;
                this.columnSpecialityCode.MaxLength = 50;
                this.columnPhysicianClass.MaxLength = 2;
                this.columnCycleDesc.MaxLength = 50;
                this.columnNo_of_Visits.ReadOnly = true;
                this.columnNo_of_Physicians.ReadOnly = true;
                this.columnNo_of_PlannedVisits.ReadOnly = true;
                this.columnNo_of_PlannedPhysicians.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2Row NewView_VisitsFullView2Row() {
                return ((View_VisitsFullView2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_VisitsFullView2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_VisitsFullView2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_VisitsFullView2RowChanged != null)) {
                    this.View_VisitsFullView2RowChanged(this, new View_VisitsFullView2RowChangeEvent(((View_VisitsFullView2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_VisitsFullView2RowChanging != null)) {
                    this.View_VisitsFullView2RowChanging(this, new View_VisitsFullView2RowChangeEvent(((View_VisitsFullView2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_VisitsFullView2RowDeleted != null)) {
                    this.View_VisitsFullView2RowDeleted(this, new View_VisitsFullView2RowChangeEvent(((View_VisitsFullView2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_VisitsFullView2RowDeleting != null)) {
                    this.View_VisitsFullView2RowDeleting(this, new View_VisitsFullView2RowChangeEvent(((View_VisitsFullView2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_VisitsFullView2Row(View_VisitsFullView2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_VisitsFullView2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticsDataTable : global::System.Data.TypedTableBase<View_StatisticsRow> {
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnEmployeeHRCode;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnSupervisorName;
            
            private global::System.Data.DataColumn columnSupervisorID;
            
            private global::System.Data.DataColumn columnTargeted_Appointments;
            
            private global::System.Data.DataColumn columnVisited_Targeted_Appointments;
            
            private global::System.Data.DataColumn columnFrequency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsDataTable() {
                this.TableName = "View_Statistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeHRCodeColumn {
                get {
                    return this.columnEmployeeHRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupervisorNameColumn {
                get {
                    return this.columnSupervisorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupervisorIDColumn {
                get {
                    return this.columnSupervisorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Targeted_AppointmentsColumn {
                get {
                    return this.columnTargeted_Appointments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Visited_Targeted_AppointmentsColumn {
                get {
                    return this.columnVisited_Targeted_Appointments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrequencyColumn {
                get {
                    return this.columnFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsRow this[int index] {
                get {
                    return ((View_StatisticsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticsRowChangeEventHandler View_StatisticsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticsRowChangeEventHandler View_StatisticsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticsRowChangeEventHandler View_StatisticsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticsRowChangeEventHandler View_StatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticsRow(View_StatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsRow AddView_StatisticsRow(string PhysicianClass, string SpecialityCode, int CycleID, string CycleDesc, int EmployeeID, int EmployeeHRCode, string EmployeeName, string SupervisorName, int SupervisorID, int Targeted_Appointments, int Visited_Targeted_Appointments, decimal Frequency) {
                View_StatisticsRow rowView_StatisticsRow = ((View_StatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PhysicianClass,
                        SpecialityCode,
                        CycleID,
                        CycleDesc,
                        EmployeeID,
                        EmployeeHRCode,
                        EmployeeName,
                        SupervisorName,
                        SupervisorID,
                        Targeted_Appointments,
                        Visited_Targeted_Appointments,
                        Frequency};
                rowView_StatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticsRow);
                return rowView_StatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticsDataTable cln = ((View_StatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnEmployeeHRCode = base.Columns["EmployeeHRCode"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnSupervisorName = base.Columns["SupervisorName"];
                this.columnSupervisorID = base.Columns["SupervisorID"];
                this.columnTargeted_Appointments = base.Columns["Targeted Appointments"];
                this.columnVisited_Targeted_Appointments = base.Columns["Visited Targeted Appointments"];
                this.columnFrequency = base.Columns["Frequency"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnEmployeeHRCode = new global::System.Data.DataColumn("EmployeeHRCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeHRCode);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnSupervisorName = new global::System.Data.DataColumn("SupervisorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisorName);
                this.columnSupervisorID = new global::System.Data.DataColumn("SupervisorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisorID);
                this.columnTargeted_Appointments = new global::System.Data.DataColumn("Targeted Appointments", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargeted_Appointments);
                this.columnVisited_Targeted_Appointments = new global::System.Data.DataColumn("Visited Targeted Appointments", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisited_Targeted_Appointments);
                this.columnFrequency = new global::System.Data.DataColumn("Frequency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency);
                this.columnPhysicianClass.MaxLength = 2;
                this.columnSpecialityCode.MaxLength = 50;
                this.columnCycleDesc.MaxLength = 50;
                this.columnEmployeeName.MaxLength = 100;
                this.columnSupervisorName.MaxLength = 100;
                this.columnFrequency.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsRow NewView_StatisticsRow() {
                return ((View_StatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticsRowChanged != null)) {
                    this.View_StatisticsRowChanged(this, new View_StatisticsRowChangeEvent(((View_StatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticsRowChanging != null)) {
                    this.View_StatisticsRowChanging(this, new View_StatisticsRowChangeEvent(((View_StatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticsRowDeleted != null)) {
                    this.View_StatisticsRowDeleted(this, new View_StatisticsRowChangeEvent(((View_StatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticsRowDeleting != null)) {
                    this.View_StatisticsRowDeleting(this, new View_StatisticsRowChangeEvent(((View_StatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticsRow(View_StatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_PlannedVsActual_SavedDataTable : global::System.Data.TypedTableBase<View_PlannedVsActual_SavedRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnAppointmentsCount;
            
            private global::System.Data.DataColumn columnActualCount;
            
            private global::System.Data.DataColumn columnAchievmentRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedDataTable() {
                this.TableName = "View_PlannedVsActual_Saved";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActual_SavedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_PlannedVsActual_SavedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppointmentsCountColumn {
                get {
                    return this.columnAppointmentsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCountColumn {
                get {
                    return this.columnActualCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AchievmentRatioColumn {
                get {
                    return this.columnAchievmentRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedRow this[int index] {
                get {
                    return ((View_PlannedVsActual_SavedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActual_SavedRowChangeEventHandler View_PlannedVsActual_SavedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActual_SavedRowChangeEventHandler View_PlannedVsActual_SavedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActual_SavedRowChangeEventHandler View_PlannedVsActual_SavedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActual_SavedRowChangeEventHandler View_PlannedVsActual_SavedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_PlannedVsActual_SavedRow(View_PlannedVsActual_SavedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedRow AddView_PlannedVsActual_SavedRow(int CycleID, double AppointmentsCount, double ActualCount, double AchievmentRatio) {
                View_PlannedVsActual_SavedRow rowView_PlannedVsActual_SavedRow = ((View_PlannedVsActual_SavedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        AppointmentsCount,
                        ActualCount,
                        AchievmentRatio};
                rowView_PlannedVsActual_SavedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_PlannedVsActual_SavedRow);
                return rowView_PlannedVsActual_SavedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_PlannedVsActual_SavedDataTable cln = ((View_PlannedVsActual_SavedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_PlannedVsActual_SavedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnAppointmentsCount = base.Columns["AppointmentsCount"];
                this.columnActualCount = base.Columns["ActualCount"];
                this.columnAchievmentRatio = base.Columns["AchievmentRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnAppointmentsCount = new global::System.Data.DataColumn("AppointmentsCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentsCount);
                this.columnActualCount = new global::System.Data.DataColumn("ActualCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCount);
                this.columnAchievmentRatio = new global::System.Data.DataColumn("AchievmentRatio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievmentRatio);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedRow NewView_PlannedVsActual_SavedRow() {
                return ((View_PlannedVsActual_SavedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_PlannedVsActual_SavedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_PlannedVsActual_SavedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_PlannedVsActual_SavedRowChanged != null)) {
                    this.View_PlannedVsActual_SavedRowChanged(this, new View_PlannedVsActual_SavedRowChangeEvent(((View_PlannedVsActual_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_PlannedVsActual_SavedRowChanging != null)) {
                    this.View_PlannedVsActual_SavedRowChanging(this, new View_PlannedVsActual_SavedRowChangeEvent(((View_PlannedVsActual_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_PlannedVsActual_SavedRowDeleted != null)) {
                    this.View_PlannedVsActual_SavedRowDeleted(this, new View_PlannedVsActual_SavedRowChangeEvent(((View_PlannedVsActual_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_PlannedVsActual_SavedRowDeleting != null)) {
                    this.View_PlannedVsActual_SavedRowDeleting(this, new View_PlannedVsActual_SavedRowChangeEvent(((View_PlannedVsActual_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_PlannedVsActual_SavedRow(View_PlannedVsActual_SavedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_PlannedVsActual_SavedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_PlannedVsActualAffs_SavedDataTable : global::System.Data.TypedTableBase<View_PlannedVsActualAffs_SavedRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnPlannedAffsCount;
            
            private global::System.Data.DataColumn columnActualAffsCount;
            
            private global::System.Data.DataColumn columnCoverage_Ratio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedDataTable() {
                this.TableName = "View_PlannedVsActualAffs_Saved";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualAffs_SavedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_PlannedVsActualAffs_SavedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannedAffsCountColumn {
                get {
                    return this.columnPlannedAffsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualAffsCountColumn {
                get {
                    return this.columnActualAffsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Coverage_RatioColumn {
                get {
                    return this.columnCoverage_Ratio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedRow this[int index] {
                get {
                    return ((View_PlannedVsActualAffs_SavedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffs_SavedRowChangeEventHandler View_PlannedVsActualAffs_SavedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffs_SavedRowChangeEventHandler View_PlannedVsActualAffs_SavedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffs_SavedRowChangeEventHandler View_PlannedVsActualAffs_SavedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_PlannedVsActualAffs_SavedRowChangeEventHandler View_PlannedVsActualAffs_SavedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_PlannedVsActualAffs_SavedRow(View_PlannedVsActualAffs_SavedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedRow AddView_PlannedVsActualAffs_SavedRow(int CycleID, string PhysicianClass, double PlannedAffsCount, double ActualAffsCount, double Coverage_Ratio) {
                View_PlannedVsActualAffs_SavedRow rowView_PlannedVsActualAffs_SavedRow = ((View_PlannedVsActualAffs_SavedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        PhysicianClass,
                        PlannedAffsCount,
                        ActualAffsCount,
                        Coverage_Ratio};
                rowView_PlannedVsActualAffs_SavedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_PlannedVsActualAffs_SavedRow);
                return rowView_PlannedVsActualAffs_SavedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_PlannedVsActualAffs_SavedDataTable cln = ((View_PlannedVsActualAffs_SavedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_PlannedVsActualAffs_SavedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnPlannedAffsCount = base.Columns["PlannedAffsCount"];
                this.columnActualAffsCount = base.Columns["ActualAffsCount"];
                this.columnCoverage_Ratio = base.Columns["Coverage_Ratio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnPlannedAffsCount = new global::System.Data.DataColumn("PlannedAffsCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannedAffsCount);
                this.columnActualAffsCount = new global::System.Data.DataColumn("ActualAffsCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualAffsCount);
                this.columnCoverage_Ratio = new global::System.Data.DataColumn("Coverage_Ratio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoverage_Ratio);
                this.columnPhysicianClass.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedRow NewView_PlannedVsActualAffs_SavedRow() {
                return ((View_PlannedVsActualAffs_SavedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_PlannedVsActualAffs_SavedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_PlannedVsActualAffs_SavedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_PlannedVsActualAffs_SavedRowChanged != null)) {
                    this.View_PlannedVsActualAffs_SavedRowChanged(this, new View_PlannedVsActualAffs_SavedRowChangeEvent(((View_PlannedVsActualAffs_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_PlannedVsActualAffs_SavedRowChanging != null)) {
                    this.View_PlannedVsActualAffs_SavedRowChanging(this, new View_PlannedVsActualAffs_SavedRowChangeEvent(((View_PlannedVsActualAffs_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_PlannedVsActualAffs_SavedRowDeleted != null)) {
                    this.View_PlannedVsActualAffs_SavedRowDeleted(this, new View_PlannedVsActualAffs_SavedRowChangeEvent(((View_PlannedVsActualAffs_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_PlannedVsActualAffs_SavedRowDeleting != null)) {
                    this.View_PlannedVsActualAffs_SavedRowDeleting(this, new View_PlannedVsActualAffs_SavedRowChangeEvent(((View_PlannedVsActualAffs_SavedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_PlannedVsActualAffs_SavedRow(View_PlannedVsActualAffs_SavedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_PlannedVsActualAffs_SavedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ActualVsTargetCalls_ECMSDataTable : global::System.Data.TypedTableBase<ActualVsTargetCalls_ECMSRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnAmounTerritoryName;
            
            private global::System.Data.DataColumn columnSupervisionAreaName;
            
            private global::System.Data.DataColumn columnManagementAreaName;
            
            private global::System.Data.DataColumn columnManagerName;
            
            private global::System.Data.DataColumn columnSupervisorName;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnBrandRankInCall;
            
            private global::System.Data.DataColumn columnCallsCount;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSDataTable() {
                this.TableName = "ActualVsTargetCalls_ECMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ActualVsTargetCalls_ECMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ActualVsTargetCalls_ECMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmounTerritoryNameColumn {
                get {
                    return this.columnAmounTerritoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupervisionAreaNameColumn {
                get {
                    return this.columnSupervisionAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagementAreaNameColumn {
                get {
                    return this.columnManagementAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManagerNameColumn {
                get {
                    return this.columnManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupervisorNameColumn {
                get {
                    return this.columnSupervisorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandRankInCallColumn {
                get {
                    return this.columnBrandRankInCall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallsCountColumn {
                get {
                    return this.columnCallsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSRow this[int index] {
                get {
                    return ((ActualVsTargetCalls_ECMSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActualVsTargetCalls_ECMSRowChangeEventHandler ActualVsTargetCalls_ECMSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActualVsTargetCalls_ECMSRowChangeEventHandler ActualVsTargetCalls_ECMSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActualVsTargetCalls_ECMSRowChangeEventHandler ActualVsTargetCalls_ECMSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActualVsTargetCalls_ECMSRowChangeEventHandler ActualVsTargetCalls_ECMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddActualVsTargetCalls_ECMSRow(ActualVsTargetCalls_ECMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSRow AddActualVsTargetCalls_ECMSRow(int CycleID, string CycleDesc, string LineName, string AmounTerritoryName, string SupervisionAreaName, string ManagementAreaName, string ManagerName, string SupervisorName, string EmployeeName, string PhysicianClass, string SpecialityCode, string BrandName, int BrandRankInCall, int CallsCount, int TargetCalls) {
                ActualVsTargetCalls_ECMSRow rowActualVsTargetCalls_ECMSRow = ((ActualVsTargetCalls_ECMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        LineName,
                        AmounTerritoryName,
                        SupervisionAreaName,
                        ManagementAreaName,
                        ManagerName,
                        SupervisorName,
                        EmployeeName,
                        PhysicianClass,
                        SpecialityCode,
                        BrandName,
                        BrandRankInCall,
                        CallsCount,
                        TargetCalls};
                rowActualVsTargetCalls_ECMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowActualVsTargetCalls_ECMSRow);
                return rowActualVsTargetCalls_ECMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ActualVsTargetCalls_ECMSDataTable cln = ((ActualVsTargetCalls_ECMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ActualVsTargetCalls_ECMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnLineName = base.Columns["LineName"];
                this.columnAmounTerritoryName = base.Columns["AmounTerritoryName"];
                this.columnSupervisionAreaName = base.Columns["SupervisionAreaName"];
                this.columnManagementAreaName = base.Columns["ManagementAreaName"];
                this.columnManagerName = base.Columns["ManagerName"];
                this.columnSupervisorName = base.Columns["SupervisorName"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnBrandRankInCall = base.Columns["BrandRankInCall"];
                this.columnCallsCount = base.Columns["CallsCount"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnAmounTerritoryName = new global::System.Data.DataColumn("AmounTerritoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmounTerritoryName);
                this.columnSupervisionAreaName = new global::System.Data.DataColumn("SupervisionAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionAreaName);
                this.columnManagementAreaName = new global::System.Data.DataColumn("ManagementAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagementAreaName);
                this.columnManagerName = new global::System.Data.DataColumn("ManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManagerName);
                this.columnSupervisorName = new global::System.Data.DataColumn("SupervisorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisorName);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnBrandRankInCall = new global::System.Data.DataColumn("BrandRankInCall", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandRankInCall);
                this.columnCallsCount = new global::System.Data.DataColumn("CallsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallsCount);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnLineName.MaxLength = 50;
                this.columnAmounTerritoryName.MaxLength = 50;
                this.columnSupervisionAreaName.MaxLength = 50;
                this.columnManagementAreaName.MaxLength = 50;
                this.columnManagerName.MaxLength = 50;
                this.columnSupervisorName.MaxLength = 50;
                this.columnEmployeeName.MaxLength = 50;
                this.columnPhysicianClass.MaxLength = 2;
                this.columnSpecialityCode.MaxLength = 50;
                this.columnBrandName.MaxLength = 50;
                this.columnCallsCount.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSRow NewActualVsTargetCalls_ECMSRow() {
                return ((ActualVsTargetCalls_ECMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ActualVsTargetCalls_ECMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ActualVsTargetCalls_ECMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ActualVsTargetCalls_ECMSRowChanged != null)) {
                    this.ActualVsTargetCalls_ECMSRowChanged(this, new ActualVsTargetCalls_ECMSRowChangeEvent(((ActualVsTargetCalls_ECMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ActualVsTargetCalls_ECMSRowChanging != null)) {
                    this.ActualVsTargetCalls_ECMSRowChanging(this, new ActualVsTargetCalls_ECMSRowChangeEvent(((ActualVsTargetCalls_ECMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ActualVsTargetCalls_ECMSRowDeleted != null)) {
                    this.ActualVsTargetCalls_ECMSRowDeleted(this, new ActualVsTargetCalls_ECMSRowChangeEvent(((ActualVsTargetCalls_ECMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ActualVsTargetCalls_ECMSRowDeleting != null)) {
                    this.ActualVsTargetCalls_ECMSRowDeleting(this, new ActualVsTargetCalls_ECMSRowChangeEvent(((ActualVsTargetCalls_ECMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveActualVsTargetCalls_ECMSRow(ActualVsTargetCalls_ECMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ActualVsTargetCalls_ECMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebViewDataTable : global::System.Data.TypedTableBase<View_StatisticesWebViewRow> {
            
            private global::System.Data.DataColumn columnQuarterID;
            
            private global::System.Data.DataColumn columnMonthID;
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnLineID;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnBrickID;
            
            private global::System.Data.DataColumn columnAmounBrickName;
            
            private global::System.Data.DataColumn columnRepAreaName;
            
            private global::System.Data.DataColumn columnSupervisionAreaName;
            
            private global::System.Data.DataColumn columnRegionName;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnDirectManagerID;
            
            private global::System.Data.DataColumn columnDirectManagerName;
            
            private global::System.Data.DataColumn columnTopManagerID;
            
            private global::System.Data.DataColumn columnTopManagerName;
            
            private global::System.Data.DataColumn columnDirectorID;
            
            private global::System.Data.DataColumn columnDirectorName;
            
            private global::System.Data.DataColumn columnBrandID;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnSpecialityID;
            
            private global::System.Data.DataColumn columnSpecialityCode;
            
            private global::System.Data.DataColumn columnPhysicianClass;
            
            private global::System.Data.DataColumn columnBrandRankInCall;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnCallsCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewDataTable() {
                this.TableName = "View_StatisticesWebView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuarterIDColumn {
                get {
                    return this.columnQuarterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthIDColumn {
                get {
                    return this.columnMonthID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrickIDColumn {
                get {
                    return this.columnBrickID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmounBrickNameColumn {
                get {
                    return this.columnAmounBrickName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepAreaNameColumn {
                get {
                    return this.columnRepAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupervisionAreaNameColumn {
                get {
                    return this.columnSupervisionAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegionNameColumn {
                get {
                    return this.columnRegionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerIDColumn {
                get {
                    return this.columnDirectManagerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerNameColumn {
                get {
                    return this.columnDirectManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerIDColumn {
                get {
                    return this.columnTopManagerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerNameColumn {
                get {
                    return this.columnTopManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectorIDColumn {
                get {
                    return this.columnDirectorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectorNameColumn {
                get {
                    return this.columnDirectorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandIDColumn {
                get {
                    return this.columnBrandID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityIDColumn {
                get {
                    return this.columnSpecialityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialityCodeColumn {
                get {
                    return this.columnSpecialityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhysicianClassColumn {
                get {
                    return this.columnPhysicianClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandRankInCallColumn {
                get {
                    return this.columnBrandRankInCall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CallsCountColumn {
                get {
                    return this.columnCallsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewRow this[int index] {
                get {
                    return ((View_StatisticesWebViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebViewRowChangeEventHandler View_StatisticesWebViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebViewRowChangeEventHandler View_StatisticesWebViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebViewRowChangeEventHandler View_StatisticesWebViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebViewRowChangeEventHandler View_StatisticesWebViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebViewRow(View_StatisticesWebViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewRow AddView_StatisticesWebViewRow(
                        int QuarterID, 
                        int MonthID, 
                        int CycleID, 
                        string CycleDesc, 
                        int LineID, 
                        string LineName, 
                        int BrickID, 
                        string AmounBrickName, 
                        string RepAreaName, 
                        string SupervisionAreaName, 
                        string RegionName, 
                        int EmployeeID, 
                        string EmployeeFullName, 
                        int DirectManagerID, 
                        string DirectManagerName, 
                        int TopManagerID, 
                        string TopManagerName, 
                        int DirectorID, 
                        string DirectorName, 
                        int BrandID, 
                        string BrandName, 
                        int SpecialityID, 
                        string SpecialityCode, 
                        string PhysicianClass, 
                        long BrandRankInCall, 
                        int TargetCalls, 
                        int CallsCount) {
                View_StatisticesWebViewRow rowView_StatisticesWebViewRow = ((View_StatisticesWebViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QuarterID,
                        MonthID,
                        CycleID,
                        CycleDesc,
                        LineID,
                        LineName,
                        BrickID,
                        AmounBrickName,
                        RepAreaName,
                        SupervisionAreaName,
                        RegionName,
                        EmployeeID,
                        EmployeeFullName,
                        DirectManagerID,
                        DirectManagerName,
                        TopManagerID,
                        TopManagerName,
                        DirectorID,
                        DirectorName,
                        BrandID,
                        BrandName,
                        SpecialityID,
                        SpecialityCode,
                        PhysicianClass,
                        BrandRankInCall,
                        TargetCalls,
                        CallsCount};
                rowView_StatisticesWebViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebViewRow);
                return rowView_StatisticesWebViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebViewDataTable cln = ((View_StatisticesWebViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnQuarterID = base.Columns["QuarterID"];
                this.columnMonthID = base.Columns["MonthID"];
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnLineID = base.Columns["LineID"];
                this.columnLineName = base.Columns["LineName"];
                this.columnBrickID = base.Columns["BrickID"];
                this.columnAmounBrickName = base.Columns["AmounBrickName"];
                this.columnRepAreaName = base.Columns["RepAreaName"];
                this.columnSupervisionAreaName = base.Columns["SupervisionAreaName"];
                this.columnRegionName = base.Columns["RegionName"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnDirectManagerID = base.Columns["DirectManagerID"];
                this.columnDirectManagerName = base.Columns["DirectManagerName"];
                this.columnTopManagerID = base.Columns["TopManagerID"];
                this.columnTopManagerName = base.Columns["TopManagerName"];
                this.columnDirectorID = base.Columns["DirectorID"];
                this.columnDirectorName = base.Columns["DirectorName"];
                this.columnBrandID = base.Columns["BrandID"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnSpecialityID = base.Columns["SpecialityID"];
                this.columnSpecialityCode = base.Columns["SpecialityCode"];
                this.columnPhysicianClass = base.Columns["PhysicianClass"];
                this.columnBrandRankInCall = base.Columns["BrandRankInCall"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnCallsCount = base.Columns["CallsCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnQuarterID = new global::System.Data.DataColumn("QuarterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuarterID);
                this.columnMonthID = new global::System.Data.DataColumn("MonthID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthID);
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnBrickID = new global::System.Data.DataColumn("BrickID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrickID);
                this.columnAmounBrickName = new global::System.Data.DataColumn("AmounBrickName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmounBrickName);
                this.columnRepAreaName = new global::System.Data.DataColumn("RepAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepAreaName);
                this.columnSupervisionAreaName = new global::System.Data.DataColumn("SupervisionAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionAreaName);
                this.columnRegionName = new global::System.Data.DataColumn("RegionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionName);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnDirectManagerID = new global::System.Data.DataColumn("DirectManagerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerID);
                this.columnDirectManagerName = new global::System.Data.DataColumn("DirectManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerName);
                this.columnTopManagerID = new global::System.Data.DataColumn("TopManagerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerID);
                this.columnTopManagerName = new global::System.Data.DataColumn("TopManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerName);
                this.columnDirectorID = new global::System.Data.DataColumn("DirectorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorID);
                this.columnDirectorName = new global::System.Data.DataColumn("DirectorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorName);
                this.columnBrandID = new global::System.Data.DataColumn("BrandID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandID);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnSpecialityID = new global::System.Data.DataColumn("SpecialityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityID);
                this.columnSpecialityCode = new global::System.Data.DataColumn("SpecialityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialityCode);
                this.columnPhysicianClass = new global::System.Data.DataColumn("PhysicianClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicianClass);
                this.columnBrandRankInCall = new global::System.Data.DataColumn("BrandRankInCall", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandRankInCall);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnCallsCount = new global::System.Data.DataColumn("CallsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallsCount);
                this.columnCycleDesc.MaxLength = 50;
                this.columnLineName.MaxLength = 50;
                this.columnAmounBrickName.MaxLength = 40;
                this.columnRepAreaName.MaxLength = 60;
                this.columnSupervisionAreaName.MaxLength = 5;
                this.columnRegionName.MaxLength = 25;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnDirectManagerName.MaxLength = 100;
                this.columnTopManagerID.AllowDBNull = false;
                this.columnTopManagerName.MaxLength = 100;
                this.columnDirectorID.AllowDBNull = false;
                this.columnDirectorName.MaxLength = 100;
                this.columnBrandName.MaxLength = 50;
                this.columnSpecialityCode.MaxLength = 50;
                this.columnPhysicianClass.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewRow NewView_StatisticesWebViewRow() {
                return ((View_StatisticesWebViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebViewRowChanged != null)) {
                    this.View_StatisticesWebViewRowChanged(this, new View_StatisticesWebViewRowChangeEvent(((View_StatisticesWebViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebViewRowChanging != null)) {
                    this.View_StatisticesWebViewRowChanging(this, new View_StatisticesWebViewRowChangeEvent(((View_StatisticesWebViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebViewRowDeleted != null)) {
                    this.View_StatisticesWebViewRowDeleted(this, new View_StatisticesWebViewRowChangeEvent(((View_StatisticesWebViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebViewRowDeleting != null)) {
                    this.View_StatisticesWebViewRowDeleting(this, new View_StatisticesWebViewRowChangeEvent(((View_StatisticesWebViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebViewRow(View_StatisticesWebViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreqDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreqRow> {
            
            private global::System.Data.DataColumn columnQuarterID;
            
            private global::System.Data.DataColumn columnMonthID;
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnLineID;
            
            private global::System.Data.DataColumn columnLineName;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnDirectManagerID;
            
            private global::System.Data.DataColumn columnDirectManagerName;
            
            private global::System.Data.DataColumn columnTopManagerID;
            
            private global::System.Data.DataColumn columnTopManagerName;
            
            private global::System.Data.DataColumn columnDirectorID;
            
            private global::System.Data.DataColumn columnDirectorName;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnFrequency;
            
            private global::System.Data.DataColumn columnCoverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreqDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreqDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuarterIDColumn {
                get {
                    return this.columnQuarterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthIDColumn {
                get {
                    return this.columnMonthID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineIDColumn {
                get {
                    return this.columnLineID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LineNameColumn {
                get {
                    return this.columnLineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerIDColumn {
                get {
                    return this.columnDirectManagerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerNameColumn {
                get {
                    return this.columnDirectManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerIDColumn {
                get {
                    return this.columnTopManagerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerNameColumn {
                get {
                    return this.columnTopManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectorIDColumn {
                get {
                    return this.columnDirectorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectorNameColumn {
                get {
                    return this.columnDirectorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrequencyColumn {
                get {
                    return this.columnFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoverageColumn {
                get {
                    return this.columnCoverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreqRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreqRowChangeEventHandler View_StatisticesWebView_CovFreqRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreqRowChangeEventHandler View_StatisticesWebView_CovFreqRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreqRowChangeEventHandler View_StatisticesWebView_CovFreqRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreqRowChangeEventHandler View_StatisticesWebView_CovFreqRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreqRow(View_StatisticesWebView_CovFreqRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqRow AddView_StatisticesWebView_CovFreqRow(
                        int QuarterID, 
                        int MonthID, 
                        int CycleID, 
                        string CycleDesc, 
                        int LineID, 
                        string LineName, 
                        int EmployeeID, 
                        string EmployeeFullName, 
                        int DirectManagerID, 
                        string DirectManagerName, 
                        int TopManagerID, 
                        string TopManagerName, 
                        int DirectorID, 
                        string DirectorName, 
                        int ActualVisits, 
                        int TargetVisits, 
                        int VisitedDoctors, 
                        int TargetDoctors, 
                        decimal Frequency, 
                        decimal Coverage) {
                View_StatisticesWebView_CovFreqRow rowView_StatisticesWebView_CovFreqRow = ((View_StatisticesWebView_CovFreqRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QuarterID,
                        MonthID,
                        CycleID,
                        CycleDesc,
                        LineID,
                        LineName,
                        EmployeeID,
                        EmployeeFullName,
                        DirectManagerID,
                        DirectManagerName,
                        TopManagerID,
                        TopManagerName,
                        DirectorID,
                        DirectorName,
                        ActualVisits,
                        TargetVisits,
                        VisitedDoctors,
                        TargetDoctors,
                        Frequency,
                        Coverage};
                rowView_StatisticesWebView_CovFreqRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreqRow);
                return rowView_StatisticesWebView_CovFreqRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreqDataTable cln = ((View_StatisticesWebView_CovFreqDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreqDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnQuarterID = base.Columns["QuarterID"];
                this.columnMonthID = base.Columns["MonthID"];
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnLineID = base.Columns["LineID"];
                this.columnLineName = base.Columns["LineName"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnDirectManagerID = base.Columns["DirectManagerID"];
                this.columnDirectManagerName = base.Columns["DirectManagerName"];
                this.columnTopManagerID = base.Columns["TopManagerID"];
                this.columnTopManagerName = base.Columns["TopManagerName"];
                this.columnDirectorID = base.Columns["DirectorID"];
                this.columnDirectorName = base.Columns["DirectorName"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnFrequency = base.Columns["Frequency"];
                this.columnCoverage = base.Columns["Coverage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnQuarterID = new global::System.Data.DataColumn("QuarterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuarterID);
                this.columnMonthID = new global::System.Data.DataColumn("MonthID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthID);
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnLineID = new global::System.Data.DataColumn("LineID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineID);
                this.columnLineName = new global::System.Data.DataColumn("LineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineName);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnDirectManagerID = new global::System.Data.DataColumn("DirectManagerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerID);
                this.columnDirectManagerName = new global::System.Data.DataColumn("DirectManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerName);
                this.columnTopManagerID = new global::System.Data.DataColumn("TopManagerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerID);
                this.columnTopManagerName = new global::System.Data.DataColumn("TopManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerName);
                this.columnDirectorID = new global::System.Data.DataColumn("DirectorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorID);
                this.columnDirectorName = new global::System.Data.DataColumn("DirectorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorName);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnFrequency = new global::System.Data.DataColumn("Frequency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency);
                this.columnCoverage = new global::System.Data.DataColumn("Coverage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoverage);
                this.columnCycleDesc.MaxLength = 50;
                this.columnLineName.MaxLength = 50;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnDirectManagerName.MaxLength = 100;
                this.columnTopManagerID.AllowDBNull = false;
                this.columnTopManagerName.MaxLength = 100;
                this.columnDirectorID.AllowDBNull = false;
                this.columnDirectorName.MaxLength = 100;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnFrequency.ReadOnly = true;
                this.columnCoverage.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqRow NewView_StatisticesWebView_CovFreqRow() {
                return ((View_StatisticesWebView_CovFreqRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreqRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreqRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreqRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreqRowChanged(this, new View_StatisticesWebView_CovFreqRowChangeEvent(((View_StatisticesWebView_CovFreqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreqRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreqRowChanging(this, new View_StatisticesWebView_CovFreqRowChangeEvent(((View_StatisticesWebView_CovFreqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreqRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreqRowDeleted(this, new View_StatisticesWebView_CovFreqRowChangeEvent(((View_StatisticesWebView_CovFreqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreqRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreqRowDeleting(this, new View_StatisticesWebView_CovFreqRowChangeEvent(((View_StatisticesWebView_CovFreqRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreqRow(View_StatisticesWebView_CovFreqRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreqDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2DataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2Row> {
            
            private global::System.Data.DataColumn columnTarget_Doctors;
            
            private global::System.Data.DataColumn columnTarget_Visits;
            
            private global::System.Data.DataColumn columnVisited_Doctors;
            
            private global::System.Data.DataColumn columnActual_Visits;
            
            private global::System.Data.DataColumn columnTarget_Calls;
            
            private global::System.Data.DataColumn columnActual_Calls;
            
            private global::System.Data.DataColumn columnCycleID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2DataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Target_DoctorsColumn {
                get {
                    return this.columnTarget_Doctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Target_VisitsColumn {
                get {
                    return this.columnTarget_Visits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Visited_DoctorsColumn {
                get {
                    return this.columnVisited_Doctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Actual_VisitsColumn {
                get {
                    return this.columnActual_Visits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Target_CallsColumn {
                get {
                    return this.columnTarget_Calls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Actual_CallsColumn {
                get {
                    return this.columnActual_Calls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2Row this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2RowChangeEventHandler View_StatisticesWebView_CovFreq2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2RowChangeEventHandler View_StatisticesWebView_CovFreq2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2RowChangeEventHandler View_StatisticesWebView_CovFreq2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2RowChangeEventHandler View_StatisticesWebView_CovFreq2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2Row(View_StatisticesWebView_CovFreq2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2Row AddView_StatisticesWebView_CovFreq2Row(int Target_Doctors, int Target_Visits, int Visited_Doctors, int Actual_Visits, int Target_Calls, int Actual_Calls, int CycleID) {
                View_StatisticesWebView_CovFreq2Row rowView_StatisticesWebView_CovFreq2Row = ((View_StatisticesWebView_CovFreq2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Target_Doctors,
                        Target_Visits,
                        Visited_Doctors,
                        Actual_Visits,
                        Target_Calls,
                        Actual_Calls,
                        CycleID};
                rowView_StatisticesWebView_CovFreq2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2Row);
                return rowView_StatisticesWebView_CovFreq2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2DataTable cln = ((View_StatisticesWebView_CovFreq2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTarget_Doctors = base.Columns["Target Doctors"];
                this.columnTarget_Visits = base.Columns["Target Visits"];
                this.columnVisited_Doctors = base.Columns["Visited Doctors"];
                this.columnActual_Visits = base.Columns["Actual Visits"];
                this.columnTarget_Calls = base.Columns["Target Calls"];
                this.columnActual_Calls = base.Columns["Actual Calls"];
                this.columnCycleID = base.Columns["CycleID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTarget_Doctors = new global::System.Data.DataColumn("Target Doctors", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Doctors);
                this.columnTarget_Visits = new global::System.Data.DataColumn("Target Visits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Visits);
                this.columnVisited_Doctors = new global::System.Data.DataColumn("Visited Doctors", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisited_Doctors);
                this.columnActual_Visits = new global::System.Data.DataColumn("Actual Visits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Visits);
                this.columnTarget_Calls = new global::System.Data.DataColumn("Target Calls", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget_Calls);
                this.columnActual_Calls = new global::System.Data.DataColumn("Actual Calls", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Calls);
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnTarget_Doctors.ReadOnly = true;
                this.columnTarget_Visits.ReadOnly = true;
                this.columnVisited_Doctors.ReadOnly = true;
                this.columnActual_Visits.ReadOnly = true;
                this.columnTarget_Calls.ReadOnly = true;
                this.columnActual_Calls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2Row NewView_StatisticesWebView_CovFreq2Row() {
                return ((View_StatisticesWebView_CovFreq2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2RowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2RowChanged(this, new View_StatisticesWebView_CovFreq2RowChangeEvent(((View_StatisticesWebView_CovFreq2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2RowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2RowChanging(this, new View_StatisticesWebView_CovFreq2RowChangeEvent(((View_StatisticesWebView_CovFreq2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2RowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2RowDeleted(this, new View_StatisticesWebView_CovFreq2RowChangeEvent(((View_StatisticesWebView_CovFreq2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2RowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2RowDeleting(this, new View_StatisticesWebView_CovFreq2RowChangeEvent(((View_StatisticesWebView_CovFreq2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2Row(View_StatisticesWebView_CovFreq2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2_RepDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2_RepRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2_Rep";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_RepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2_RepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2_RepRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_RepRowChangeEventHandler View_StatisticesWebView_CovFreq2_RepRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_RepRowChangeEventHandler View_StatisticesWebView_CovFreq2_RepRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_RepRowChangeEventHandler View_StatisticesWebView_CovFreq2_RepRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_RepRowChangeEventHandler View_StatisticesWebView_CovFreq2_RepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2_RepRow(View_StatisticesWebView_CovFreq2_RepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepRow AddView_StatisticesWebView_CovFreq2_RepRow(int CycleID, string CycleDesc, decimal TargetDoctors, decimal VisitedDoctors, decimal TargetVisits, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                View_StatisticesWebView_CovFreq2_RepRow rowView_StatisticesWebView_CovFreq2_RepRow = ((View_StatisticesWebView_CovFreq2_RepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        TargetDoctors,
                        VisitedDoctors,
                        TargetVisits,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowView_StatisticesWebView_CovFreq2_RepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2_RepRow);
                return rowView_StatisticesWebView_CovFreq2_RepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2_RepDataTable cln = ((View_StatisticesWebView_CovFreq2_RepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2_RepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepRow NewView_StatisticesWebView_CovFreq2_RepRow() {
                return ((View_StatisticesWebView_CovFreq2_RepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2_RepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2_RepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2_RepRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2_RepRowChanged(this, new View_StatisticesWebView_CovFreq2_RepRowChangeEvent(((View_StatisticesWebView_CovFreq2_RepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2_RepRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2_RepRowChanging(this, new View_StatisticesWebView_CovFreq2_RepRowChangeEvent(((View_StatisticesWebView_CovFreq2_RepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2_RepRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2_RepRowDeleted(this, new View_StatisticesWebView_CovFreq2_RepRowChangeEvent(((View_StatisticesWebView_CovFreq2_RepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2_RepRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2_RepRowDeleting(this, new View_StatisticesWebView_CovFreq2_RepRowChangeEvent(((View_StatisticesWebView_CovFreq2_RepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2_RepRow(View_StatisticesWebView_CovFreq2_RepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2_RepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2_DMDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2_DMRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnEmployeeHRCode;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2_DM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_DMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2_DMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeHRCodeColumn {
                get {
                    return this.columnEmployeeHRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2_DMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DMRowChangeEventHandler View_StatisticesWebView_CovFreq2_DMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DMRowChangeEventHandler View_StatisticesWebView_CovFreq2_DMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DMRowChangeEventHandler View_StatisticesWebView_CovFreq2_DMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DMRowChangeEventHandler View_StatisticesWebView_CovFreq2_DMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2_DMRow(View_StatisticesWebView_CovFreq2_DMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMRow AddView_StatisticesWebView_CovFreq2_DMRow(int CycleID, string CycleDesc, int EmployeeHRCode, string EmployeeFullName, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                View_StatisticesWebView_CovFreq2_DMRow rowView_StatisticesWebView_CovFreq2_DMRow = ((View_StatisticesWebView_CovFreq2_DMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        EmployeeHRCode,
                        EmployeeFullName,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowView_StatisticesWebView_CovFreq2_DMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2_DMRow);
                return rowView_StatisticesWebView_CovFreq2_DMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2_DMDataTable cln = ((View_StatisticesWebView_CovFreq2_DMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2_DMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnEmployeeHRCode = base.Columns["EmployeeHRCode"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnEmployeeHRCode = new global::System.Data.DataColumn("EmployeeHRCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeHRCode);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnEmployeeHRCode.AllowDBNull = false;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMRow NewView_StatisticesWebView_CovFreq2_DMRow() {
                return ((View_StatisticesWebView_CovFreq2_DMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2_DMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2_DMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2_DMRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2_DMRowChanged(this, new View_StatisticesWebView_CovFreq2_DMRowChangeEvent(((View_StatisticesWebView_CovFreq2_DMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2_DMRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2_DMRowChanging(this, new View_StatisticesWebView_CovFreq2_DMRowChangeEvent(((View_StatisticesWebView_CovFreq2_DMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2_DMRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2_DMRowDeleted(this, new View_StatisticesWebView_CovFreq2_DMRowChangeEvent(((View_StatisticesWebView_CovFreq2_DMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2_DMRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2_DMRowDeleting(this, new View_StatisticesWebView_CovFreq2_DMRowChangeEvent(((View_StatisticesWebView_CovFreq2_DMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2_DMRow(View_StatisticesWebView_CovFreq2_DMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2_DMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2_SMDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2_SMRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnEmployeeHRCode;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnDirectManagerName;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2_SM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_SMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2_SMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeHRCodeColumn {
                get {
                    return this.columnEmployeeHRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerNameColumn {
                get {
                    return this.columnDirectManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2_SMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_SMRowChangeEventHandler View_StatisticesWebView_CovFreq2_SMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_SMRowChangeEventHandler View_StatisticesWebView_CovFreq2_SMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_SMRowChangeEventHandler View_StatisticesWebView_CovFreq2_SMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_SMRowChangeEventHandler View_StatisticesWebView_CovFreq2_SMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2_SMRow(View_StatisticesWebView_CovFreq2_SMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMRow AddView_StatisticesWebView_CovFreq2_SMRow(int CycleID, string CycleDesc, int EmployeeHRCode, string EmployeeFullName, string DirectManagerName, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                View_StatisticesWebView_CovFreq2_SMRow rowView_StatisticesWebView_CovFreq2_SMRow = ((View_StatisticesWebView_CovFreq2_SMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        EmployeeHRCode,
                        EmployeeFullName,
                        DirectManagerName,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowView_StatisticesWebView_CovFreq2_SMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2_SMRow);
                return rowView_StatisticesWebView_CovFreq2_SMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2_SMDataTable cln = ((View_StatisticesWebView_CovFreq2_SMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2_SMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnEmployeeHRCode = base.Columns["EmployeeHRCode"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnDirectManagerName = base.Columns["DirectManagerName"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnEmployeeHRCode = new global::System.Data.DataColumn("EmployeeHRCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeHRCode);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnDirectManagerName = new global::System.Data.DataColumn("DirectManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerName);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnEmployeeHRCode.AllowDBNull = false;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnDirectManagerName.MaxLength = 100;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMRow NewView_StatisticesWebView_CovFreq2_SMRow() {
                return ((View_StatisticesWebView_CovFreq2_SMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2_SMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2_SMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2_SMRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2_SMRowChanged(this, new View_StatisticesWebView_CovFreq2_SMRowChangeEvent(((View_StatisticesWebView_CovFreq2_SMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2_SMRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2_SMRowChanging(this, new View_StatisticesWebView_CovFreq2_SMRowChangeEvent(((View_StatisticesWebView_CovFreq2_SMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2_SMRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2_SMRowDeleted(this, new View_StatisticesWebView_CovFreq2_SMRowChangeEvent(((View_StatisticesWebView_CovFreq2_SMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2_SMRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2_SMRowDeleting(this, new View_StatisticesWebView_CovFreq2_SMRowChangeEvent(((View_StatisticesWebView_CovFreq2_SMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2_SMRow(View_StatisticesWebView_CovFreq2_SMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2_SMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2_DirDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2_DirRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnEmployeeHRCode;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnDirectManagerName;
            
            private global::System.Data.DataColumn columnTopManagerName;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2_Dir";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_DirDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2_DirDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeHRCodeColumn {
                get {
                    return this.columnEmployeeHRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerNameColumn {
                get {
                    return this.columnDirectManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerNameColumn {
                get {
                    return this.columnTopManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2_DirRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DirRowChangeEventHandler View_StatisticesWebView_CovFreq2_DirRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DirRowChangeEventHandler View_StatisticesWebView_CovFreq2_DirRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DirRowChangeEventHandler View_StatisticesWebView_CovFreq2_DirRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_DirRowChangeEventHandler View_StatisticesWebView_CovFreq2_DirRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2_DirRow(View_StatisticesWebView_CovFreq2_DirRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirRow AddView_StatisticesWebView_CovFreq2_DirRow(int CycleID, string CycleDesc, int EmployeeHRCode, string EmployeeFullName, string DirectManagerName, string TopManagerName, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                View_StatisticesWebView_CovFreq2_DirRow rowView_StatisticesWebView_CovFreq2_DirRow = ((View_StatisticesWebView_CovFreq2_DirRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        EmployeeHRCode,
                        EmployeeFullName,
                        DirectManagerName,
                        TopManagerName,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowView_StatisticesWebView_CovFreq2_DirRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2_DirRow);
                return rowView_StatisticesWebView_CovFreq2_DirRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2_DirDataTable cln = ((View_StatisticesWebView_CovFreq2_DirDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2_DirDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnEmployeeHRCode = base.Columns["EmployeeHRCode"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnDirectManagerName = base.Columns["DirectManagerName"];
                this.columnTopManagerName = base.Columns["TopManagerName"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnEmployeeHRCode = new global::System.Data.DataColumn("EmployeeHRCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeHRCode);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnDirectManagerName = new global::System.Data.DataColumn("DirectManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerName);
                this.columnTopManagerName = new global::System.Data.DataColumn("TopManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerName);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnEmployeeHRCode.AllowDBNull = false;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnDirectManagerName.MaxLength = 100;
                this.columnTopManagerName.MaxLength = 100;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirRow NewView_StatisticesWebView_CovFreq2_DirRow() {
                return ((View_StatisticesWebView_CovFreq2_DirRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2_DirRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2_DirRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2_DirRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2_DirRowChanged(this, new View_StatisticesWebView_CovFreq2_DirRowChangeEvent(((View_StatisticesWebView_CovFreq2_DirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2_DirRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2_DirRowChanging(this, new View_StatisticesWebView_CovFreq2_DirRowChangeEvent(((View_StatisticesWebView_CovFreq2_DirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2_DirRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2_DirRowDeleted(this, new View_StatisticesWebView_CovFreq2_DirRowChangeEvent(((View_StatisticesWebView_CovFreq2_DirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2_DirRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2_DirRowDeleting(this, new View_StatisticesWebView_CovFreq2_DirRowChangeEvent(((View_StatisticesWebView_CovFreq2_DirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2_DirRow(View_StatisticesWebView_CovFreq2_DirRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2_DirDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_StatisticesWebView_CovFreq2_ComDirDataTable : global::System.Data.TypedTableBase<View_StatisticesWebView_CovFreq2_ComDirRow> {
            
            private global::System.Data.DataColumn columnCycleID;
            
            private global::System.Data.DataColumn columnCycleDesc;
            
            private global::System.Data.DataColumn columnEmployeeHRCode;
            
            private global::System.Data.DataColumn columnEmployeeFullName;
            
            private global::System.Data.DataColumn columnDirectManagerName;
            
            private global::System.Data.DataColumn columnTopManagerName;
            
            private global::System.Data.DataColumn columnDirectorName;
            
            private global::System.Data.DataColumn columnTargetDoctors;
            
            private global::System.Data.DataColumn columnTargetVisits;
            
            private global::System.Data.DataColumn columnVisitedDoctors;
            
            private global::System.Data.DataColumn columnActualVisits;
            
            private global::System.Data.DataColumn columnTargetCalls;
            
            private global::System.Data.DataColumn columnActualCalls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirDataTable() {
                this.TableName = "View_StatisticesWebView_CovFreq2_ComDir";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_ComDirDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected View_StatisticesWebView_CovFreq2_ComDirDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleIDColumn {
                get {
                    return this.columnCycleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDescColumn {
                get {
                    return this.columnCycleDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeHRCodeColumn {
                get {
                    return this.columnEmployeeHRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeFullNameColumn {
                get {
                    return this.columnEmployeeFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectManagerNameColumn {
                get {
                    return this.columnDirectManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopManagerNameColumn {
                get {
                    return this.columnTopManagerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DirectorNameColumn {
                get {
                    return this.columnDirectorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetDoctorsColumn {
                get {
                    return this.columnTargetDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetVisitsColumn {
                get {
                    return this.columnTargetVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisitedDoctorsColumn {
                get {
                    return this.columnVisitedDoctors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualVisitsColumn {
                get {
                    return this.columnActualVisits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TargetCallsColumn {
                get {
                    return this.columnTargetCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualCallsColumn {
                get {
                    return this.columnActualCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirRow this[int index] {
                get {
                    return ((View_StatisticesWebView_CovFreq2_ComDirRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_ComDirRowChangeEventHandler View_StatisticesWebView_CovFreq2_ComDirRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_ComDirRowChangeEventHandler View_StatisticesWebView_CovFreq2_ComDirRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_ComDirRowChangeEventHandler View_StatisticesWebView_CovFreq2_ComDirRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event View_StatisticesWebView_CovFreq2_ComDirRowChangeEventHandler View_StatisticesWebView_CovFreq2_ComDirRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddView_StatisticesWebView_CovFreq2_ComDirRow(View_StatisticesWebView_CovFreq2_ComDirRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirRow AddView_StatisticesWebView_CovFreq2_ComDirRow(int CycleID, string CycleDesc, int EmployeeHRCode, string EmployeeFullName, string DirectManagerName, string TopManagerName, string DirectorName, decimal TargetDoctors, decimal TargetVisits, decimal VisitedDoctors, decimal ActualVisits, decimal TargetCalls, decimal ActualCalls) {
                View_StatisticesWebView_CovFreq2_ComDirRow rowView_StatisticesWebView_CovFreq2_ComDirRow = ((View_StatisticesWebView_CovFreq2_ComDirRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CycleID,
                        CycleDesc,
                        EmployeeHRCode,
                        EmployeeFullName,
                        DirectManagerName,
                        TopManagerName,
                        DirectorName,
                        TargetDoctors,
                        TargetVisits,
                        VisitedDoctors,
                        ActualVisits,
                        TargetCalls,
                        ActualCalls};
                rowView_StatisticesWebView_CovFreq2_ComDirRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_StatisticesWebView_CovFreq2_ComDirRow);
                return rowView_StatisticesWebView_CovFreq2_ComDirRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_StatisticesWebView_CovFreq2_ComDirDataTable cln = ((View_StatisticesWebView_CovFreq2_ComDirDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_StatisticesWebView_CovFreq2_ComDirDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCycleID = base.Columns["CycleID"];
                this.columnCycleDesc = base.Columns["CycleDesc"];
                this.columnEmployeeHRCode = base.Columns["EmployeeHRCode"];
                this.columnEmployeeFullName = base.Columns["EmployeeFullName"];
                this.columnDirectManagerName = base.Columns["DirectManagerName"];
                this.columnTopManagerName = base.Columns["TopManagerName"];
                this.columnDirectorName = base.Columns["DirectorName"];
                this.columnTargetDoctors = base.Columns["TargetDoctors"];
                this.columnTargetVisits = base.Columns["TargetVisits"];
                this.columnVisitedDoctors = base.Columns["VisitedDoctors"];
                this.columnActualVisits = base.Columns["ActualVisits"];
                this.columnTargetCalls = base.Columns["TargetCalls"];
                this.columnActualCalls = base.Columns["ActualCalls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCycleID = new global::System.Data.DataColumn("CycleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleID);
                this.columnCycleDesc = new global::System.Data.DataColumn("CycleDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDesc);
                this.columnEmployeeHRCode = new global::System.Data.DataColumn("EmployeeHRCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeHRCode);
                this.columnEmployeeFullName = new global::System.Data.DataColumn("EmployeeFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeFullName);
                this.columnDirectManagerName = new global::System.Data.DataColumn("DirectManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectManagerName);
                this.columnTopManagerName = new global::System.Data.DataColumn("TopManagerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopManagerName);
                this.columnDirectorName = new global::System.Data.DataColumn("DirectorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectorName);
                this.columnTargetDoctors = new global::System.Data.DataColumn("TargetDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetDoctors);
                this.columnTargetVisits = new global::System.Data.DataColumn("TargetVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetVisits);
                this.columnVisitedDoctors = new global::System.Data.DataColumn("VisitedDoctors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisitedDoctors);
                this.columnActualVisits = new global::System.Data.DataColumn("ActualVisits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualVisits);
                this.columnTargetCalls = new global::System.Data.DataColumn("TargetCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTargetCalls);
                this.columnActualCalls = new global::System.Data.DataColumn("ActualCalls", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualCalls);
                this.columnCycleDesc.MaxLength = 50;
                this.columnEmployeeHRCode.AllowDBNull = false;
                this.columnEmployeeFullName.MaxLength = 100;
                this.columnDirectManagerName.MaxLength = 100;
                this.columnTopManagerName.MaxLength = 100;
                this.columnDirectorName.MaxLength = 100;
                this.columnTargetDoctors.ReadOnly = true;
                this.columnTargetVisits.ReadOnly = true;
                this.columnVisitedDoctors.ReadOnly = true;
                this.columnActualVisits.ReadOnly = true;
                this.columnTargetCalls.ReadOnly = true;
                this.columnActualCalls.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirRow NewView_StatisticesWebView_CovFreq2_ComDirRow() {
                return ((View_StatisticesWebView_CovFreq2_ComDirRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_StatisticesWebView_CovFreq2_ComDirRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_StatisticesWebView_CovFreq2_ComDirRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_StatisticesWebView_CovFreq2_ComDirRowChanged != null)) {
                    this.View_StatisticesWebView_CovFreq2_ComDirRowChanged(this, new View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent(((View_StatisticesWebView_CovFreq2_ComDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_StatisticesWebView_CovFreq2_ComDirRowChanging != null)) {
                    this.View_StatisticesWebView_CovFreq2_ComDirRowChanging(this, new View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent(((View_StatisticesWebView_CovFreq2_ComDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_StatisticesWebView_CovFreq2_ComDirRowDeleted != null)) {
                    this.View_StatisticesWebView_CovFreq2_ComDirRowDeleted(this, new View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent(((View_StatisticesWebView_CovFreq2_ComDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_StatisticesWebView_CovFreq2_ComDirRowDeleting != null)) {
                    this.View_StatisticesWebView_CovFreq2_ComDirRowDeleting(this, new View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent(((View_StatisticesWebView_CovFreq2_ComDirRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveView_StatisticesWebView_CovFreq2_ComDirRow(View_StatisticesWebView_CovFreq2_ComDirRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExecSummary2 ds = new ExecSummary2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_StatisticesWebView_CovFreq2_ComDirDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View3_FullViewRow : global::System.Data.DataRow {
            
            private View3_FullViewDataTable tableView3_FullView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View3_FullViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView3_FullView = ((View3_FullViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YearID {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.YearIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearID\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.YearIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuarterID {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.QuarterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuarterID\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.QuarterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MonthID {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.MonthIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthID\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.MonthIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView3_FullView.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView3_FullView.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView3_FullView.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableView3_FullView.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActualVisits {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PlannedVisits {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.PlannedVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannedVisits\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.PlannedVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VisitedPhysicians {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.VisitedPhysiciansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedPhysicians\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.VisitedPhysiciansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PlannedPhysicians {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.PlannedPhysiciansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannedPhysicians\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.PlannedPhysiciansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableView3_FullView.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LineID {
                get {
                    try {
                        return ((int)(this[this.tableView3_FullView.LineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineID\' in table \'View3_FullView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView3_FullView.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsTargeted2 {
                get {
                    return ((string)(this[this.tableView3_FullView.IsTargeted2Column]));
                }
                set {
                    this[this.tableView3_FullView.IsTargeted2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearIDNull() {
                return this.IsNull(this.tableView3_FullView.YearIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearIDNull() {
                this[this.tableView3_FullView.YearIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuarterIDNull() {
                return this.IsNull(this.tableView3_FullView.QuarterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuarterIDNull() {
                this[this.tableView3_FullView.QuarterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthIDNull() {
                return this.IsNull(this.tableView3_FullView.MonthIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthIDNull() {
                this[this.tableView3_FullView.MonthIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView3_FullView.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView3_FullView.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView3_FullView.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView3_FullView.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView3_FullView.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView3_FullView.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaNull() {
                return this.IsNull(this.tableView3_FullView.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaNull() {
                this[this.tableView3_FullView.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView3_FullView.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView3_FullView.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannedVisitsNull() {
                return this.IsNull(this.tableView3_FullView.PlannedVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannedVisitsNull() {
                this[this.tableView3_FullView.PlannedVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedPhysiciansNull() {
                return this.IsNull(this.tableView3_FullView.VisitedPhysiciansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedPhysiciansNull() {
                this[this.tableView3_FullView.VisitedPhysiciansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannedPhysiciansNull() {
                return this.IsNull(this.tableView3_FullView.PlannedPhysiciansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannedPhysiciansNull() {
                this[this.tableView3_FullView.PlannedPhysiciansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableView3_FullView.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableView3_FullView.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineIDNull() {
                return this.IsNull(this.tableView3_FullView.LineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineIDNull() {
                this[this.tableView3_FullView.LineIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_PlannedVsActualRow : global::System.Data.DataRow {
            
            private View_PlannedVsActualDataTable tableView_PlannedVsActual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_PlannedVsActual = ((View_PlannedVsActualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActualCount {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActual.ActualCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCount\' in table \'View_PlannedVsActual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual.ActualCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AppointmentsCount {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActual.AppointmentsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentsCount\' in table \'View_PlannedVsActual\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual.AppointmentsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AchievmentRatio {
                get {
                    try {
                        return ((decimal)(this[this.tableView_PlannedVsActual.AchievmentRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AchievmentRatio\' in table \'View_PlannedVsActual\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual.AchievmentRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCountNull() {
                return this.IsNull(this.tableView_PlannedVsActual.ActualCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCountNull() {
                this[this.tableView_PlannedVsActual.ActualCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppointmentsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActual.AppointmentsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppointmentsCountNull() {
                this[this.tableView_PlannedVsActual.AppointmentsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAchievmentRatioNull() {
                return this.IsNull(this.tableView_PlannedVsActual.AchievmentRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAchievmentRatioNull() {
                this[this.tableView_PlannedVsActual.AchievmentRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_PlannedVsActualAffsRow : global::System.Data.DataRow {
            
            private View_PlannedVsActualAffsDataTable tableView_PlannedVsActualAffs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualAffsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_PlannedVsActualAffs = ((View_PlannedVsActualAffsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView_PlannedVsActualAffs.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View_PlannedVsActualAffs\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PlannedAffsCount {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActualAffs.PlannedAffsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannedAffsCount\' in table \'View_PlannedVsActualAffs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs.PlannedAffsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActualAffsCount {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActualAffs.ActualAffsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualAffsCount\' in table \'View_PlannedVsActualAffs\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs.ActualAffsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Coverage_Ratio {
                get {
                    try {
                        return ((decimal)(this[this.tableView_PlannedVsActualAffs.Coverage_RatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coverage_Ratio\' in table \'View_PlannedVsActualAffs\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs.Coverage_RatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView_PlannedVsActualAffs.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannedAffsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs.PlannedAffsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannedAffsCountNull() {
                this[this.tableView_PlannedVsActualAffs.PlannedAffsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualAffsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs.ActualAffsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualAffsCountNull() {
                this[this.tableView_PlannedVsActualAffs.ActualAffsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoverage_RatioNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs.Coverage_RatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoverage_RatioNull() {
                this[this.tableView_PlannedVsActualAffs.Coverage_RatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_SummaryRow : global::System.Data.DataRow {
            
            private View_SummaryDataTable tableView_Summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_SummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Summary = ((View_SummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Visits {
                get {
                    try {
                        return ((int)(this[this.tableView_Summary.VisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visits\' in table \'View_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Summary.VisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Visited_Affs {
                get {
                    try {
                        return ((int)(this[this.tableView_Summary.Visited_AffsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visited Affs\' in table \'View_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Summary.Visited_AffsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Appointments {
                get {
                    try {
                        return ((int)(this[this.tableView_Summary.AppointmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Appointments\' in table \'View_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Summary.AppointmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Planned_Affs {
                get {
                    try {
                        return ((int)(this[this.tableView_Summary.Planned_AffsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Planned Affs\' in table \'View_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Summary.Planned_AffsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitsNull() {
                return this.IsNull(this.tableView_Summary.VisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitsNull() {
                this[this.tableView_Summary.VisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisited_AffsNull() {
                return this.IsNull(this.tableView_Summary.Visited_AffsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisited_AffsNull() {
                this[this.tableView_Summary.Visited_AffsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppointmentsNull() {
                return this.IsNull(this.tableView_Summary.AppointmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppointmentsNull() {
                this[this.tableView_Summary.AppointmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlanned_AffsNull() {
                return this.IsNull(this.tableView_Summary.Planned_AffsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlanned_AffsNull() {
                this[this.tableView_Summary.Planned_AffsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_ListOfCalls_AdminRow : global::System.Data.DataRow {
            
            private View_ListOfCalls_AdminDataTable tableView_ListOfCalls_Admin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_ListOfCalls_AdminRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_ListOfCalls_Admin = ((View_ListOfCalls_AdminDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView_ListOfCalls_Admin.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View_ListOfCalls_Admin\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableView_ListOfCalls_Admin.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_Visits {
                get {
                    try {
                        return ((int)(this[this.tableView_ListOfCalls_Admin.No_of_VisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_Visits\' in table \'View_ListOfCalls_Admin\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_ListOfCalls_Admin.No_of_VisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView_ListOfCalls_Admin.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView_ListOfCalls_Admin.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_VisitsNull() {
                return this.IsNull(this.tableView_ListOfCalls_Admin.No_of_VisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_VisitsNull() {
                this[this.tableView_ListOfCalls_Admin.No_of_VisitsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AffiliationsByAreaGroupBySpecRow : global::System.Data.DataRow {
            
            private AffiliationsByAreaGroupBySpecDataTable tableAffiliationsByAreaGroupBySpec;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AffiliationsByAreaGroupBySpecRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAffiliationsByAreaGroupBySpec = ((AffiliationsByAreaGroupBySpecDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableAffiliationsByAreaGroupBySpec.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'AffiliationsByAreaGroupBySpec\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableAffiliationsByAreaGroupBySpec.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_Of_Physician {
                get {
                    try {
                        return ((int)(this[this.tableAffiliationsByAreaGroupBySpec.No_Of_PhysicianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Of_Physician\' in table \'AffiliationsByAreaGroupBySpec\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAffiliationsByAreaGroupBySpec.No_Of_PhysicianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableAffiliationsByAreaGroupBySpec.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableAffiliationsByAreaGroupBySpec.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_Of_PhysicianNull() {
                return this.IsNull(this.tableAffiliationsByAreaGroupBySpec.No_Of_PhysicianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_Of_PhysicianNull() {
                this[this.tableAffiliationsByAreaGroupBySpec.No_Of_PhysicianColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_AppointmentsRow : global::System.Data.DataRow {
            
            private View_AppointmentsDataTable tableView_Appointments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_AppointmentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Appointments = ((View_AppointmentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView_Appointments.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View_Appointments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Appointments.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_Appointments {
                get {
                    try {
                        return ((int)(this[this.tableView_Appointments.No_of_AppointmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_Appointments\' in table \'View_Appointments\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_Appointments.No_of_AppointmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView_Appointments.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView_Appointments.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_AppointmentsNull() {
                return this.IsNull(this.tableView_Appointments.No_of_AppointmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_AppointmentsNull() {
                this[this.tableView_Appointments.No_of_AppointmentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_VisitsFullView2Row : global::System.Data.DataRow {
            
            private View_VisitsFullView2DataTable tableView_VisitsFullView2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_VisitsFullView2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_VisitsFullView2 = ((View_VisitsFullView2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YearID {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.YearIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearID\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.YearIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tableView_VisitsFullView2.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView_VisitsFullView2.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView_VisitsFullView2.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuarterID {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.QuarterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuarterID\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.QuarterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_VisitsFullView2.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_Visits {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.No_of_VisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_Visits\' in table \'View_VisitsFullView2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.No_of_VisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_Physicians {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.No_of_PhysiciansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_Physicians\' in table \'View_VisitsFullView2\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.No_of_PhysiciansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_PlannedVisits {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.No_of_PlannedVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_PlannedVisits\' in table \'View_VisitsFullView2\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.No_of_PlannedVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int No_of_PlannedPhysicians {
                get {
                    try {
                        return ((int)(this[this.tableView_VisitsFullView2.No_of_PlannedPhysiciansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_of_PlannedPhysicians\' in table \'View_VisitsFullView2\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_VisitsFullView2.No_of_PlannedPhysiciansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearIDNull() {
                return this.IsNull(this.tableView_VisitsFullView2.YearIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearIDNull() {
                this[this.tableView_VisitsFullView2.YearIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tableView_VisitsFullView2.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tableView_VisitsFullView2.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView_VisitsFullView2.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView_VisitsFullView2.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView_VisitsFullView2.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView_VisitsFullView2.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuarterIDNull() {
                return this.IsNull(this.tableView_VisitsFullView2.QuarterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuarterIDNull() {
                this[this.tableView_VisitsFullView2.QuarterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_VisitsFullView2.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_VisitsFullView2.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_VisitsNull() {
                return this.IsNull(this.tableView_VisitsFullView2.No_of_VisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_VisitsNull() {
                this[this.tableView_VisitsFullView2.No_of_VisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_PhysiciansNull() {
                return this.IsNull(this.tableView_VisitsFullView2.No_of_PhysiciansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_PhysiciansNull() {
                this[this.tableView_VisitsFullView2.No_of_PhysiciansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_PlannedVisitsNull() {
                return this.IsNull(this.tableView_VisitsFullView2.No_of_PlannedVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_PlannedVisitsNull() {
                this[this.tableView_VisitsFullView2.No_of_PlannedVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNo_of_PlannedPhysiciansNull() {
                return this.IsNull(this.tableView_VisitsFullView2.No_of_PlannedPhysiciansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNo_of_PlannedPhysiciansNull() {
                this[this.tableView_VisitsFullView2.No_of_PlannedPhysiciansColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticsRow : global::System.Data.DataRow {
            
            private View_StatisticsDataTable tableView_Statistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Statistics = ((View_StatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView_Statistics.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView_Statistics.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_Statistics.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.EmployeeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeHRCode {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.EmployeeHRCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeHRCode\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.EmployeeHRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableView_Statistics.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupervisorName {
                get {
                    try {
                        return ((string)(this[this.tableView_Statistics.SupervisorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisorName\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.SupervisorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SupervisorID {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.SupervisorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisorID\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.SupervisorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Targeted_Appointments {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.Targeted_AppointmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Targeted Appointments\' in table \'View_Statistics\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.Targeted_AppointmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Visited_Targeted_Appointments {
                get {
                    try {
                        return ((int)(this[this.tableView_Statistics.Visited_Targeted_AppointmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visited Targeted Appointments\' in table \'View_Statistics\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.Visited_Targeted_AppointmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Frequency {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Statistics.FrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency\' in table \'View_Statistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Statistics.FrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView_Statistics.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView_Statistics.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView_Statistics.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView_Statistics.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_Statistics.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_Statistics.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_Statistics.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_Statistics.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableView_Statistics.EmployeeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeIDNull() {
                this[this.tableView_Statistics.EmployeeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeHRCodeNull() {
                return this.IsNull(this.tableView_Statistics.EmployeeHRCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeHRCodeNull() {
                this[this.tableView_Statistics.EmployeeHRCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableView_Statistics.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableView_Statistics.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisorNameNull() {
                return this.IsNull(this.tableView_Statistics.SupervisorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisorNameNull() {
                this[this.tableView_Statistics.SupervisorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisorIDNull() {
                return this.IsNull(this.tableView_Statistics.SupervisorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisorIDNull() {
                this[this.tableView_Statistics.SupervisorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargeted_AppointmentsNull() {
                return this.IsNull(this.tableView_Statistics.Targeted_AppointmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargeted_AppointmentsNull() {
                this[this.tableView_Statistics.Targeted_AppointmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisited_Targeted_AppointmentsNull() {
                return this.IsNull(this.tableView_Statistics.Visited_Targeted_AppointmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisited_Targeted_AppointmentsNull() {
                this[this.tableView_Statistics.Visited_Targeted_AppointmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrequencyNull() {
                return this.IsNull(this.tableView_Statistics.FrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrequencyNull() {
                this[this.tableView_Statistics.FrequencyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_PlannedVsActual_SavedRow : global::System.Data.DataRow {
            
            private View_PlannedVsActual_SavedDataTable tableView_PlannedVsActual_Saved;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActual_SavedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_PlannedVsActual_Saved = ((View_PlannedVsActual_SavedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActual_Saved.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_PlannedVsActual_Saved\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual_Saved.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AppointmentsCount {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActual_Saved.AppointmentsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentsCount\' in table \'View_PlannedVsActual_Saved\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual_Saved.AppointmentsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ActualCount {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActual_Saved.ActualCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCount\' in table \'View_PlannedVsActual_Saved\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual_Saved.ActualCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AchievmentRatio {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActual_Saved.AchievmentRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AchievmentRatio\' in table \'View_PlannedVsActual_Saved\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActual_Saved.AchievmentRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_PlannedVsActual_Saved.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_PlannedVsActual_Saved.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppointmentsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActual_Saved.AppointmentsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppointmentsCountNull() {
                this[this.tableView_PlannedVsActual_Saved.AppointmentsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCountNull() {
                return this.IsNull(this.tableView_PlannedVsActual_Saved.ActualCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCountNull() {
                this[this.tableView_PlannedVsActual_Saved.ActualCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAchievmentRatioNull() {
                return this.IsNull(this.tableView_PlannedVsActual_Saved.AchievmentRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAchievmentRatioNull() {
                this[this.tableView_PlannedVsActual_Saved.AchievmentRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_PlannedVsActualAffs_SavedRow : global::System.Data.DataRow {
            
            private View_PlannedVsActualAffs_SavedDataTable tableView_PlannedVsActualAffs_Saved;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_PlannedVsActualAffs_SavedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_PlannedVsActualAffs_Saved = ((View_PlannedVsActualAffs_SavedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_PlannedVsActualAffs_Saved.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_PlannedVsActualAffs_Saved\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs_Saved.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView_PlannedVsActualAffs_Saved.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View_PlannedVsActualAffs_Saved\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs_Saved.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PlannedAffsCount {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActualAffs_Saved.PlannedAffsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannedAffsCount\' in table \'View_PlannedVsActualAffs_Saved\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs_Saved.PlannedAffsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ActualAffsCount {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActualAffs_Saved.ActualAffsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualAffsCount\' in table \'View_PlannedVsActualAffs_Saved\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs_Saved.ActualAffsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Coverage_Ratio {
                get {
                    try {
                        return ((double)(this[this.tableView_PlannedVsActualAffs_Saved.Coverage_RatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coverage_Ratio\' in table \'View_PlannedVsActualAffs_Saved\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_PlannedVsActualAffs_Saved.Coverage_RatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs_Saved.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_PlannedVsActualAffs_Saved.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs_Saved.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView_PlannedVsActualAffs_Saved.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannedAffsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs_Saved.PlannedAffsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannedAffsCountNull() {
                this[this.tableView_PlannedVsActualAffs_Saved.PlannedAffsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualAffsCountNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs_Saved.ActualAffsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualAffsCountNull() {
                this[this.tableView_PlannedVsActualAffs_Saved.ActualAffsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoverage_RatioNull() {
                return this.IsNull(this.tableView_PlannedVsActualAffs_Saved.Coverage_RatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoverage_RatioNull() {
                this[this.tableView_PlannedVsActualAffs_Saved.Coverage_RatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ActualVsTargetCalls_ECMSRow : global::System.Data.DataRow {
            
            private ActualVsTargetCalls_ECMSDataTable tableActualVsTargetCalls_ECMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ActualVsTargetCalls_ECMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableActualVsTargetCalls_ECMS = ((ActualVsTargetCalls_ECMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableActualVsTargetCalls_ECMS.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'ActualVsTargetCalls_ECMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'ActualVsTargetCalls_ECMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LineName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.LineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineName\' in table \'ActualVsTargetCalls_ECMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmounTerritoryName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.AmounTerritoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmounTerritoryName\' in table \'ActualVsTargetCalls_ECMS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.AmounTerritoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupervisionAreaName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.SupervisionAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionAreaName\' in table \'ActualVsTargetCalls_ECMS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.SupervisionAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManagementAreaName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.ManagementAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagementAreaName\' in table \'ActualVsTargetCalls_ECMS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.ManagementAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManagerName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.ManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManagerName\' in table \'ActualVsTargetCalls_ECMS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.ManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupervisorName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.SupervisorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisorName\' in table \'ActualVsTargetCalls_ECMS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.SupervisorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'ActualVsTargetCalls_ECMS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'ActualVsTargetCalls_ECMS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'ActualVsTargetCalls_ECMS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tableActualVsTargetCalls_ECMS.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'ActualVsTargetCalls_ECMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BrandRankInCall {
                get {
                    try {
                        return ((int)(this[this.tableActualVsTargetCalls_ECMS.BrandRankInCallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandRankInCall\' in table \'ActualVsTargetCalls_ECMS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.BrandRankInCallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallsCount {
                get {
                    try {
                        return ((int)(this[this.tableActualVsTargetCalls_ECMS.CallsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallsCount\' in table \'ActualVsTargetCalls_ECMS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.CallsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TargetCalls {
                get {
                    try {
                        return ((int)(this[this.tableActualVsTargetCalls_ECMS.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'ActualVsTargetCalls_ECMS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableActualVsTargetCalls_ECMS.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableActualVsTargetCalls_ECMS.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableActualVsTargetCalls_ECMS.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.LineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.LineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmounTerritoryNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.AmounTerritoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmounTerritoryNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.AmounTerritoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisionAreaNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.SupervisionAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisionAreaNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.SupervisionAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagementAreaNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.ManagementAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagementAreaNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.ManagementAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManagerNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.ManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManagerNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.ManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisorNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.SupervisorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisorNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.SupervisorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableActualVsTargetCalls_ECMS.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableActualVsTargetCalls_ECMS.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tableActualVsTargetCalls_ECMS.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandRankInCallNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.BrandRankInCallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandRankInCallNull() {
                this[this.tableActualVsTargetCalls_ECMS.BrandRankInCallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallsCountNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.CallsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallsCountNull() {
                this[this.tableActualVsTargetCalls_ECMS.CallsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableActualVsTargetCalls_ECMS.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableActualVsTargetCalls_ECMS.TargetCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebViewRow : global::System.Data.DataRow {
            
            private View_StatisticesWebViewDataTable tableView_StatisticesWebView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView = ((View_StatisticesWebViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuarterID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.QuarterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuarterID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.QuarterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MonthID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.MonthIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.MonthIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LineID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.LineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LineName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.LineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineName\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BrickID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.BrickIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrickID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.BrickIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmounBrickName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.AmounBrickNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmounBrickName\' in table \'View_StatisticesWebView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.AmounBrickNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RepAreaName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.RepAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepAreaName\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.RepAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupervisionAreaName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.SupervisionAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionAreaName\' in table \'View_StatisticesWebView\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.SupervisionAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegionName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.RegionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionName\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.RegionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.EmployeeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DirectManagerID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.DirectManagerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerID\' in table \'View_StatisticesWebView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.DirectManagerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.DirectManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerName\' in table \'View_StatisticesWebView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.DirectManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TopManagerID {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView.TopManagerIDColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView.TopManagerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TopManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.TopManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopManagerName\' in table \'View_StatisticesWebView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.TopManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DirectorID {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView.DirectorIDColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView.DirectorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectorName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.DirectorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectorName\' in table \'View_StatisticesWebView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.DirectorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BrandID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.BrandIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandID\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.BrandIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'View_StatisticesWebView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SpecialityID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView.SpecialityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityID\' in table \'View_StatisticesWebView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.SpecialityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialityCode {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.SpecialityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialityCode\' in table \'View_StatisticesWebView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.SpecialityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhysicianClass {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView.PhysicianClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicianClass\' in table \'View_StatisticesWebView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.PhysicianClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BrandRankInCall {
                get {
                    try {
                        return ((long)(this[this.tableView_StatisticesWebView.BrandRankInCallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandRankInCall\' in table \'View_StatisticesWebView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.BrandRankInCallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TargetCalls {
                get {
                    if (this.IsTargetCallsNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableView_StatisticesWebView.TargetCallsColumn]));
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CallsCount {
                get {
                    if (this.IsCallsCountNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tableView_StatisticesWebView.CallsCountColumn]));
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView.CallsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuarterIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.QuarterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuarterIDNull() {
                this[this.tableView_StatisticesWebView.QuarterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.MonthIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthIDNull() {
                this[this.tableView_StatisticesWebView.MonthIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.LineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineIDNull() {
                this[this.tableView_StatisticesWebView.LineIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.LineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineNameNull() {
                this[this.tableView_StatisticesWebView.LineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrickIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.BrickIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrickIDNull() {
                this[this.tableView_StatisticesWebView.BrickIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmounBrickNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.AmounBrickNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmounBrickNameNull() {
                this[this.tableView_StatisticesWebView.AmounBrickNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepAreaNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.RepAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepAreaNameNull() {
                this[this.tableView_StatisticesWebView.RepAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisionAreaNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.SupervisionAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisionAreaNameNull() {
                this[this.tableView_StatisticesWebView.SupervisionAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegionNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.RegionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegionNameNull() {
                this[this.tableView_StatisticesWebView.RegionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.EmployeeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeIDNull() {
                this[this.tableView_StatisticesWebView.EmployeeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.DirectManagerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerIDNull() {
                this[this.tableView_StatisticesWebView.DirectManagerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.DirectManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerNameNull() {
                this[this.tableView_StatisticesWebView.DirectManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTopManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.TopManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTopManagerNameNull() {
                this[this.tableView_StatisticesWebView.TopManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectorNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.DirectorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectorNameNull() {
                this[this.tableView_StatisticesWebView.DirectorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.BrandIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandIDNull() {
                this[this.tableView_StatisticesWebView.BrandIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tableView_StatisticesWebView.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView.SpecialityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityIDNull() {
                this[this.tableView_StatisticesWebView.SpecialityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialityCodeNull() {
                return this.IsNull(this.tableView_StatisticesWebView.SpecialityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialityCodeNull() {
                this[this.tableView_StatisticesWebView.SpecialityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhysicianClassNull() {
                return this.IsNull(this.tableView_StatisticesWebView.PhysicianClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhysicianClassNull() {
                this[this.tableView_StatisticesWebView.PhysicianClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandRankInCallNull() {
                return this.IsNull(this.tableView_StatisticesWebView.BrandRankInCallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandRankInCallNull() {
                this[this.tableView_StatisticesWebView.BrandRankInCallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCallsCountNull() {
                return this.IsNull(this.tableView_StatisticesWebView.CallsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCallsCountNull() {
                this[this.tableView_StatisticesWebView.CallsCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreqRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreqDataTable tableView_StatisticesWebView_CovFreq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreqRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq = ((View_StatisticesWebView_CovFreqDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuarterID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.QuarterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuarterID\' in table \'View_StatisticesWebView_CovFreq\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.QuarterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MonthID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.MonthIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthID\' in table \'View_StatisticesWebView_CovFreq\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.MonthIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LineID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.LineIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineID\' in table \'View_StatisticesWebView_CovFreq\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.LineIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LineName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.LineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineName\' in table \'View_StatisticesWebView_CovFreq\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.LineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.EmployeeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'View_StatisticesWebView_CovFreq\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView_CovFreq" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DirectManagerID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.DirectManagerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerID\' in table \'View_StatisticesWebView_CovFreq\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.DirectManagerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.DirectManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerName\' in table \'View_StatisticesWebView_CovFre" +
                                "q\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.DirectManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TopManagerID {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq.TopManagerIDColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.TopManagerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TopManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.TopManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopManagerName\' in table \'View_StatisticesWebView_CovFreq\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.TopManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DirectorID {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq.DirectorIDColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.DirectorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectorName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq.DirectorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectorName\' in table \'View_StatisticesWebView_CovFreq\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.DirectorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActualVisits {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TargetVisits {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VisitedDoctors {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TargetDoctors {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Frequency {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq.FrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency\' in table \'View_StatisticesWebView_CovFreq\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.FrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Coverage {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq.CoverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coverage\' in table \'View_StatisticesWebView_CovFreq\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq.CoverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuarterIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.QuarterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuarterIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.QuarterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.MonthIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.MonthIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.LineIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.LineIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLineNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.LineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLineNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq.LineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.EmployeeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.EmployeeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.DirectManagerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq.DirectManagerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.DirectManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq.DirectManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTopManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.TopManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTopManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq.TopManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectorNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.DirectorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectorNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq.DirectorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrequencyNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.FrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrequencyNull() {
                this[this.tableView_StatisticesWebView_CovFreq.FrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoverageNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq.CoverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoverageNull() {
                this[this.tableView_StatisticesWebView_CovFreq.CoverageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2Row : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2DataTable tableView_StatisticesWebView_CovFreq2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2 = ((View_StatisticesWebView_CovFreq2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Target_Doctors {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Target_DoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Doctors\' in table \'View_StatisticesWebView_CovFreq2\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Target_DoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Target_Visits {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Target_VisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Visits\' in table \'View_StatisticesWebView_CovFreq2\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Target_VisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Visited_Doctors {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Visited_DoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visited Doctors\' in table \'View_StatisticesWebView_CovFreq2" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Visited_DoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Actual_Visits {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Actual_VisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual Visits\' in table \'View_StatisticesWebView_CovFreq2\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Actual_VisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Target_Calls {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Target_CallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target Calls\' in table \'View_StatisticesWebView_CovFreq2\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Target_CallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Actual_Calls {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.Actual_CallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual Calls\' in table \'View_StatisticesWebView_CovFreq2\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.Actual_CallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTarget_DoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Target_DoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTarget_DoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Target_DoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTarget_VisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Target_VisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTarget_VisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Target_VisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisited_DoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Visited_DoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisited_DoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Visited_DoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActual_VisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Actual_VisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActual_VisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Actual_VisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTarget_CallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Target_CallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTarget_CallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Target_CallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActual_CallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.Actual_CallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActual_CallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.Actual_CallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2.CycleIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2_RepRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2_RepDataTable tableView_StatisticesWebView_CovFreq2_Rep;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_RepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2_Rep = ((View_StatisticesWebView_CovFreq2_RepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2_Rep\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq2_Rep\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq2_R" +
                                "ep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "Rep\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq2_Re" +
                                "p\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq2_Re" +
                                "p\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'View_StatisticesWebView_CovFreq2_Rep" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'View_StatisticesWebView_CovFreq2_Rep" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Rep.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Rep.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2_DMRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2_DMDataTable tableView_StatisticesWebView_CovFreq2_DM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_DMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2_DM = ((View_StatisticesWebView_CovFreq2_DMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2_DM\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq2_DM\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeHRCode {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeHRCodeColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeHRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView_CovFreq" +
                                "2_DM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq2_D" +
                                "M\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq2_DM" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "DM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq2_DM" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'View_StatisticesWebView_CovFreq2_DM\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'View_StatisticesWebView_CovFreq2_DM\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_DM.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_DM.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2_SMRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2_SMDataTable tableView_StatisticesWebView_CovFreq2_SM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_SMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2_SM = ((View_StatisticesWebView_CovFreq2_SMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2_SM\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq2_SM\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeHRCode {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeHRCodeColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeHRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView_CovFreq" +
                                "2_SM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_SM.DirectManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerName\' in table \'View_StatisticesWebView_CovFre" +
                                "q2_SM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.DirectManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq2_S" +
                                "M\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq2_SM" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "SM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq2_SM" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'View_StatisticesWebView_CovFreq2_SM\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'View_StatisticesWebView_CovFreq2_SM\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.DirectManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.DirectManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_SM.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_SM.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2_DirRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2_DirDataTable tableView_StatisticesWebView_CovFreq2_Dir;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_DirRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2_Dir = ((View_StatisticesWebView_CovFreq2_DirDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2_Dir\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq2_Dir\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeHRCode {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeHRCodeColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeHRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView_CovFreq" +
                                "2_Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.DirectManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerName\' in table \'View_StatisticesWebView_CovFre" +
                                "q2_Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.DirectManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TopManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.TopManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopManagerName\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.TopManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq2_D" +
                                "ir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq2_Di" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq2_Di" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'View_StatisticesWebView_CovFreq2_Dir" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'View_StatisticesWebView_CovFreq2_Dir" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.DirectManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.DirectManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTopManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.TopManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTopManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.TopManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_Dir.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_Dir.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_StatisticesWebView_CovFreq2_ComDirRow : global::System.Data.DataRow {
            
            private View_StatisticesWebView_CovFreq2_ComDirDataTable tableView_StatisticesWebView_CovFreq2_ComDir;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal View_StatisticesWebView_CovFreq2_ComDirRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_StatisticesWebView_CovFreq2_ComDir = ((View_StatisticesWebView_CovFreq2_ComDirDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CycleID {
                get {
                    try {
                        return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleID\' in table \'View_StatisticesWebView_CovFreq2_ComDir\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CycleDesc {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDesc\' in table \'View_StatisticesWebView_CovFreq2_ComDi" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeHRCode {
                get {
                    return ((int)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeHRCodeColumn]));
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeHRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeFullName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeFullName\' in table \'View_StatisticesWebView_CovFreq" +
                                "2_ComDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectManagerName\' in table \'View_StatisticesWebView_CovFre" +
                                "q2_ComDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TopManagerName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TopManagerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopManagerName\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "ComDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TopManagerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DirectorName {
                get {
                    try {
                        return ((string)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectorName\' in table \'View_StatisticesWebView_CovFreq2_Co" +
                                "mDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetDoctors\' in table \'View_StatisticesWebView_CovFreq2_C" +
                                "omDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetVisits\' in table \'View_StatisticesWebView_CovFreq2_Co" +
                                "mDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VisitedDoctors {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.VisitedDoctorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisitedDoctors\' in table \'View_StatisticesWebView_CovFreq2_" +
                                "ComDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.VisitedDoctorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualVisits {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualVisitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualVisits\' in table \'View_StatisticesWebView_CovFreq2_Co" +
                                "mDir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualVisitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TargetCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TargetCalls\' in table \'View_StatisticesWebView_CovFreq2_Com" +
                                "Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ActualCalls {
                get {
                    try {
                        return ((decimal)(this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualCallsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualCalls\' in table \'View_StatisticesWebView_CovFreq2_Com" +
                                "Dir\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleIDNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleIDNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDescNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDescNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.CycleDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeFullNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeFullNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.EmployeeFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTopManagerNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.TopManagerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTopManagerNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TopManagerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectorNameNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectorNameNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.DirectorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisitedDoctorsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.VisitedDoctorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisitedDoctorsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.VisitedDoctorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualVisitsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualVisitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualVisitsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualVisitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTargetCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTargetCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.TargetCallsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualCallsNull() {
                return this.IsNull(this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualCallsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualCallsNull() {
                this[this.tableView_StatisticesWebView_CovFreq2_ComDir.ActualCallsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View3_FullViewRowChangeEvent : global::System.EventArgs {
            
            private View3_FullViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewRowChangeEvent(View3_FullViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View3_FullViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_PlannedVsActualRowChangeEvent : global::System.EventArgs {
            
            private View_PlannedVsActualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualRowChangeEvent(View_PlannedVsActualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_PlannedVsActualAffsRowChangeEvent : global::System.EventArgs {
            
            private View_PlannedVsActualAffsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsRowChangeEvent(View_PlannedVsActualAffsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_SummaryRowChangeEvent : global::System.EventArgs {
            
            private View_SummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryRowChangeEvent(View_SummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_SummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_ListOfCalls_AdminRowChangeEvent : global::System.EventArgs {
            
            private View_ListOfCalls_AdminRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminRowChangeEvent(View_ListOfCalls_AdminRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_ListOfCalls_AdminRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AffiliationsByAreaGroupBySpecRowChangeEvent : global::System.EventArgs {
            
            private AffiliationsByAreaGroupBySpecRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecRowChangeEvent(AffiliationsByAreaGroupBySpecRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AffiliationsByAreaGroupBySpecRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_AppointmentsRowChangeEvent : global::System.EventArgs {
            
            private View_AppointmentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsRowChangeEvent(View_AppointmentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_AppointmentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_VisitsFullView2RowChangeEvent : global::System.EventArgs {
            
            private View_VisitsFullView2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2RowChangeEvent(View_VisitsFullView2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_VisitsFullView2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticsRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsRowChangeEvent(View_StatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_PlannedVsActual_SavedRowChangeEvent : global::System.EventArgs {
            
            private View_PlannedVsActual_SavedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedRowChangeEvent(View_PlannedVsActual_SavedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActual_SavedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_PlannedVsActualAffs_SavedRowChangeEvent : global::System.EventArgs {
            
            private View_PlannedVsActualAffs_SavedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedRowChangeEvent(View_PlannedVsActualAffs_SavedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_PlannedVsActualAffs_SavedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ActualVsTargetCalls_ECMSRowChangeEvent : global::System.EventArgs {
            
            private ActualVsTargetCalls_ECMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSRowChangeEvent(ActualVsTargetCalls_ECMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActualVsTargetCalls_ECMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebViewRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewRowChangeEvent(View_StatisticesWebViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreqRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreqRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqRowChangeEvent(View_StatisticesWebView_CovFreqRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreqRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2RowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2RowChangeEvent(View_StatisticesWebView_CovFreq2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2_RepRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2_RepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepRowChangeEvent(View_StatisticesWebView_CovFreq2_RepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_RepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2_DMRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2_DMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMRowChangeEvent(View_StatisticesWebView_CovFreq2_DMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2_SMRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2_SMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMRowChangeEvent(View_StatisticesWebView_CovFreq2_SMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_SMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2_DirRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2_DirRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirRowChangeEvent(View_StatisticesWebView_CovFreq2_DirRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_DirRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent : global::System.EventArgs {
            
            private View_StatisticesWebView_CovFreq2_ComDirRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirRowChangeEvent(View_StatisticesWebView_CovFreq2_ComDirRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public View_StatisticesWebView_CovFreq2_ComDirRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AmounCRM4.App_Data.ExecSummary2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View3_FullViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View3_FullViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View3_FullView";
            tableMapping.ColumnMappings.Add("YearID", "YearID");
            tableMapping.ColumnMappings.Add("QuarterID", "QuarterID");
            tableMapping.ColumnMappings.Add("MonthID", "MonthID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("PlannedVisits", "PlannedVisits");
            tableMapping.ColumnMappings.Add("VisitedPhysicians", "VisitedPhysicians");
            tableMapping.ColumnMappings.Add("PlannedPhysicians", "PlannedPhysicians");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("LineID", "LineID");
            tableMapping.ColumnMappings.Add("IsTargeted2", "IsTargeted2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName AS 'Area', EmployeeName, LineID, IsTargeted2, COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE NULL END)) AS 'ActualVisits', 
                  COUNT(DISTINCT AppointmentID) AS 'PlannedVisits', COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE NULL END)) AS 'VisitedPhysicians', COUNT(DISTINCT AffiliationID) AS 'PlannedPhysicians'
FROM        View3_FullView
WHERE     (Deleted IS NULL OR
                  Deleted = 0) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL) AND (EmployeeID = @EmployeeID) AND (CycleID = @CycleID)
GROUP BY YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName, EmployeeName, LineID, IsTargeted2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName AS 'Area'
, EmployeeName, LineID, IsTargeted2, COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE NULL END)) AS 'ActualVisits', COUNT(DISTINCT AppointmentID) 
                  AS 'PlannedVisits', COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE NULL END)) AS 'VisitedPhysicians', COUNT(DISTINCT AffiliationID) AS 'PlannedPhysicians'
FROM        View3_FullView
WHERE     (Deleted IS NULL OR
                  Deleted = 0) AND (PhysicianClass IN ('A', 'A+')) AND (SpecialityCode IS NOT NULL) AND (CycleID = @CycleIDFromComDir)
GROUP BY YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName, EmployeeName, LineID, IsTargeted2";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromComDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     
YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName AS 'Area', EmployeeName, LineID, IsTargeted2, 
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE null END)) AS 'ActualVisits', 
COUNT(DISTINCT AppointmentID) AS 'PlannedVisits', 
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE null END)) AS 'VisitedPhysicians', 
COUNT(DISTINCT AffiliationID) AS 'PlannedPhysicians'
FROM        View3_FullView
WHERE     (ManagerID = @EmployeeIDFromSM) AND (Deleted IS NULL OR
                  Deleted = 0) AND (PhysicianClass IN ('A', 'B', 'A+')) AND (SpecialityCode IS NOT NULL) AND (CycleID = @CycleIDFromSM)
GROUP BY YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName, EmployeeName, LineID, IsTargeted2";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName AS 'Area', EmployeeName, LineID, IsTargeted2, COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE NULL END)) AS 'ActualVisits', 
                  COUNT(DISTINCT AppointmentID) AS 'PlannedVisits', COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE NULL END)) AS 'VisitedPhysicians', COUNT(DISTINCT AffiliationID) AS 'PlannedPhysicians'
FROM        View3_FullView
WHERE     (DirectorID = @EmployeeIDFromSD) AND (Deleted IS NULL OR
                  Deleted = 0) AND (PhysicianClass IN ('A', 'A+')) AND (SpecialityCode IS NOT NULL) AND (CycleID = @CycleIDFromSD)
GROUP BY YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName, EmployeeName, LineID, IsTargeted2";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName AS 'Area', EmployeeName, LineID, IsTargeted2,
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE NULL END)) AS 'ActualVisits', COUNT(DISTINCT AppointmentID) 
                  AS 'PlannedVisits', COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE NULL END)) AS 'VisitedPhysicians', COUNT(DISTINCT AffiliationID) AS 'PlannedPhysicians'
FROM        View3_FullView
WHERE     (SupervisorID = @EmployeeIDFromDM) AND (Deleted IS NULL OR
                  Deleted = 0) AND (PhysicianClass IN ('A', 'A+')) AND (SpecialityCode IS NOT NULL) AND (CycleID = @CycleIDFromDM)
GROUP BY YearID, QuarterID, MonthID, CycleDesc, PhysicianClass, SpecialityCode, AmounTerritoryName, EmployeeName, LineID, IsTargeted2";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillStatistics2(ExecSummary2.View3_FullViewDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View3_FullViewDataTable GetDataStatistics2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View3_FullViewDataTable dataTable = new ExecSummary2.View3_FullViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View3_FullViewDataTable dataTable, global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View3_FullViewDataTable GetDataByComDir(global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View3_FullViewDataTable dataTable = new ExecSummary2.View3_FullViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByManagerID(ExecSummary2.View3_FullViewDataTable dataTable, int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View3_FullViewDataTable GetDataByManagerID(int EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View3_FullViewDataTable dataTable = new ExecSummary2.View3_FullViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySD(ExecSummary2.View3_FullViewDataTable dataTable, int EmployeeIDFromSD, global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSD));
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View3_FullViewDataTable GetDataBySD(int EmployeeIDFromSD, global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSD));
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View3_FullViewDataTable dataTable = new ExecSummary2.View3_FullViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.View3_FullViewDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View3_FullViewDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View3_FullViewDataTable dataTable = new ExecSummary2.View3_FullViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_PlannedVsActualTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_PlannedVsActualTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_PlannedVsActual";
            tableMapping.ColumnMappings.Add("ActualCount", "ActualCount");
            tableMapping.ColumnMappings.Add("AppointmentsCount", "AppointmentsCount");
            tableMapping.ColumnMappings.Add("AchievmentRatio", "AchievmentRatio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     SUM(TargetedVisits) AS 'AppointmentsCount', SUM(ActualTargetedVisits) AS 'ActualCount', (CASE WHEN SUM([TargetedVisits]) IS NULL OR SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) 
                  END) AS 'AchievmentRatio'
FROM        View_ActualVsTargeted
WHERE     (EmployeeID = @EmployeeID) AND (CycleID = @CycleID) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY EmployeeID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     
SUM(TargetedVisits) AS 'AppointmentsCount', 
SUM(ActualTargetedVisits) AS 'ActualCount', 
(CASE WHEN SUM([TargetedVisits]) IS NULL OR SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) 
                  END) AS 'AchievmentRatio'
FROM        View_ActualVsTargeted
WHERE     (CycleID = @CycleIDFromComDir) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromComDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     
SUM(TargetedVisits) AS 'AppointmentsCount', 
SUM(ActualTargetedVisits) AS 'ActualCount', 
(CASE WHEN SUM([TargetedVisits]) IS NULL OR SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) 
                  END) AS 'AchievmentRatio'
FROM        View_ActualVsTargeted
WHERE     (CycleID = @CycleIDFromSM) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL) AND (ManagerID = @EmployeeIDFromSM)
GROUP BY ManagerID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     
SUM(TargetedVisits) AS 'AppointmentsCount', 
SUM(ActualTargetedVisits) AS 'ActualCount', 
(CASE WHEN SUM([TargetedVisits]) IS NULL OR SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) 
                  END) AS 'AchievmentRatio'
FROM        View_ActualVsTargeted
WHERE     (CycleID = @CycleIDFromSD) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL) AND (DirectorID = @EmployeeIDFromSD)
GROUP BY DirectorID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     SUM(TargetedVisits) AS 'AppointmentsCount', SUM(ActualTargetedVisits) AS 'ActualCount', (CASE WHEN SUM([TargetedVisits]) IS NULL OR SUM([TargetedVisits]) = 0
THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) 
                  END) AS 'AchievmentRatio'
FROM        View_ActualVsTargeted
WHERE     (CycleID = @CycleIDFromDM) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL) AND (SupervisorID = @EmployeeIDFromDM)
GROUP BY SupervisorID";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillPlannedVsActual2(ExecSummary2.View_PlannedVsActualDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_PlannedVsActualDataTable GetDataPlannedVsActual2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualDataTable dataTable = new ExecSummary2.View_PlannedVsActualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_PlannedVsActualDataTable dataTable, global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualDataTable GetDataByComDir(global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualDataTable dataTable = new ExecSummary2.View_PlannedVsActualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByManagerID(ExecSummary2.View_PlannedVsActualDataTable dataTable, global::System.Nullable<int> CycleIDFromSM, global::System.Nullable<int> EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualDataTable GetDataByManagerID(global::System.Nullable<int> CycleIDFromSM, global::System.Nullable<int> EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualDataTable dataTable = new ExecSummary2.View_PlannedVsActualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySD(ExecSummary2.View_PlannedVsActualDataTable dataTable, global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualDataTable GetDataBySD(global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualDataTable dataTable = new ExecSummary2.View_PlannedVsActualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.View_PlannedVsActualDataTable dataTable, global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualDataTable dataTable = new ExecSummary2.View_PlannedVsActualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_PlannedVsActualAffsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_PlannedVsActualAffsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_PlannedVsActualAffs";
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("PlannedAffsCount", "PlannedAffsCount");
            tableMapping.ColumnMappings.Add("ActualAffsCount", "ActualAffsCount");
            tableMapping.ColumnMappings.Add("Coverage_Ratio", "Coverage_Ratio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     PhysicianClass, SUM(TargetedDoctors) AS 'PlannedAffsCount', SUM(ActualTargetedDoctors) AS 'ActualAffsCount', 
(CASE WHEN SUM([TargetedDoctors]) IS NULL OR SUM([TargetedDoctors]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedDoctors])) / CONVERT(decimal(10, 2), SUM([TargetedDoctors]))) * 100)) END) AS 'Coverage_Ratio'
FROM        View_ActualVsTargeted
WHERE     (EmployeeID = @EmployeeID) AND (CycleID = @CycleID) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY EmployeeID, PhysicianClass";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     
PhysicianClass, 
SUM(TargetedDoctors) AS 'PlannedAffsCount', 
SUM(ActualTargetedDoctors) AS 'ActualAffsCount', 
(CASE WHEN SUM([TargetedDoctors]) IS NULL OR SUM([TargetedDoctors]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedDoctors])) / CONVERT(decimal(10, 2), 
                  SUM([TargetedDoctors]))) * 100)) END) AS 'Coverage_Ratio'
FROM        View_ActualVsTargeted
WHERE     (CycleID = @CycleIDFromComDir) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY PhysicianClass";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromComDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     
PhysicianClass, 
SUM(TargetedDoctors) AS 'PlannedAffsCount', 
SUM(ActualTargetedDoctors) AS 'ActualAffsCount', 
(CASE WHEN SUM([TargetedDoctors]) IS NULL OR SUM([TargetedDoctors]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedDoctors])) / CONVERT(decimal(10, 2), 
                  SUM([TargetedDoctors]))) * 100)) END) AS 'Coverage_Ratio'
FROM        View_ActualVsTargeted
WHERE     (ManagerID = @EmployeeIDFromSM) AND (CycleID = @CycleIDFromSM) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY ManagerID, PhysicianClass";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     
PhysicianClass, 
SUM(TargetedDoctors) AS 'PlannedAffsCount', 
SUM(ActualTargetedDoctors) AS 'ActualAffsCount', 
(CASE WHEN SUM([TargetedDoctors]) IS NULL OR SUM([TargetedDoctors]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedDoctors])) / CONVERT(decimal(10, 2), 
                  SUM([TargetedDoctors]))) * 100)) END) AS 'Coverage_Ratio'
FROM        View_ActualVsTargeted
WHERE     (DirectorID = @EmployeeIDFromSD) AND (CycleID = @CycleIDFromSD) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY DirectorID, PhysicianClass";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     PhysicianClass, SUM(TargetedDoctors) AS 'PlannedAffsCount', SUM(ActualTargetedDoctors) AS 'ActualAffsCount', (CASE WHEN SUM([TargetedDoctors]) IS NULL OR SUM([TargetedDoctors]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedDoctors])) / CONVERT(decimal(10, 2), 
                  SUM([TargetedDoctors]))) * 100)) END) AS 'Coverage_Ratio'
FROM        View_ActualVsTargeted
WHERE     (SupervisorID = @EmployeeIDFromDM) AND (CycleID = @CycleIDFromDM) AND (PhysicianClass IN ('A+', 'A')) AND (SpecialityCode IS NOT NULL)
GROUP BY SupervisorID, PhysicianClass";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCoverage2(ExecSummary2.View_PlannedVsActualAffsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_PlannedVsActualAffsDataTable GetDataCoverage2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffsDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_PlannedVsActualAffsDataTable dataTable, global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualAffsDataTable GetDataByComDir(global::System.Nullable<int> CycleIDFromComDir) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromComDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromComDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffsDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByManagerID(ExecSummary2.View_PlannedVsActualAffsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualAffsDataTable GetDataByManagerID(global::System.Nullable<int> EmployeeIDFromSM, global::System.Nullable<int> CycleIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffsDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySD(ExecSummary2.View_PlannedVsActualAffsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromSD, global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualAffsDataTable GetDataBySD(global::System.Nullable<int> EmployeeIDFromSD, global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffsDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.View_PlannedVsActualAffsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualAffsDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffsDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_SummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_SummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Summary";
            tableMapping.ColumnMappings.Add("Visits", "Visits");
            tableMapping.ColumnMappings.Add("Visited Affs", "Visited Affs");
            tableMapping.ColumnMappings.Add("Appointments", "Appointments");
            tableMapping.ColumnMappings.Add("Planned Affs", "Planned Affs");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE null END)) AS 'Visits', 
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE null END)) AS 'Visited Affs', 
COUNT(DISTINCT AppointmentID) AS 'Appointments', 
COUNT(DISTINCT AffiliationID) AS 'Planned Affs'
FROM        View3_FullView
WHERE     (EmployeeID = @EmployeeID) AND (CycleID = @CycleID) AND (Deleted IS NULL) AND (PhysicianClass IN ('A', 'B', 'C', 'A+')) AND (SpecialityCode IS NOT NULL)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillVisits2(ExecSummary2.View_SummaryDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_SummaryDataTable GetDataVisits2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_SummaryDataTable dataTable = new ExecSummary2.View_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_ListOfCalls_AdminTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_ListOfCalls_AdminTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_ListOfCalls_Admin";
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("No_of_Visits", "No_of_Visits");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SpecialityCode, COUNT(DISTINCT VisitID) AS \'No_of_Visits\'\r\nFROM       " +
                " View3_FullView\r\nWHERE     (EmployeeID = @EmployeeID) AND (CycleID = @CycleID) A" +
                "ND (Deleted IS NULL) AND (Annotations = \'Final Save\')\r\nGROUP BY SpecialityCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     SpecialityCode, PhysicianClass, 
COUNT(DISTINCT VisitID) AS 'No_of_Visits', COUNT(DISTINCT AffiliationID) AS 'No_of_Affiliations'
FROM        View_ListOfCalls_Admin
WHERE     (CycleID = @CycleID) AND (EmployeeID = @EmployeeID) AND (DeletedAppointment IS NULL)
GROUP BY SpecialityCode, PhysicianClass";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     SpecialityCode, COUNT(DISTINCT VisitID) AS 'No_of_Visits'
FROM        View3_FullView
WHERE     (SupervisorID = @EmployeeIDFromDM) AND (CycleID = @CycleIDFromDM) AND (Deleted IS NULL) AND (SpecialityCode IS NOT NULL) AND (Annotations = 'Final Save')
GROUP BY SpecialityCode";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByCycle_Area2(ExecSummary2.View_ListOfCalls_AdminDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_ListOfCalls_AdminDataTable GetDataCycle_Area2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_ListOfCalls_AdminDataTable dataTable = new ExecSummary2.View_ListOfCalls_AdminDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySpec_Class2(ExecSummary2.View_ListOfCalls_AdminDataTable dataTable, global::System.Nullable<int> CycleID, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_ListOfCalls_AdminDataTable GetDataBySpec_Class2(global::System.Nullable<int> CycleID, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_ListOfCalls_AdminDataTable dataTable = new ExecSummary2.View_ListOfCalls_AdminDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.View_ListOfCalls_AdminDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_ListOfCalls_AdminDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_ListOfCalls_AdminDataTable dataTable = new ExecSummary2.View_ListOfCalls_AdminDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AffiliationsByAreaGroupBySpecTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AffiliationsByAreaGroupBySpecTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AffiliationsByAreaGroupBySpec";
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("No_Of_Physician", "No_Of_Physician");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SpecialityCode, COUNT(AffiliationID) AS \'No_Of_Physician\'\r\nFROM       " +
                " View_Affiliations_Admin\r\nWHERE     SpecialtyValue > 0 AND EmployeeID = @Employe" +
                "eID\r\nGROUP BY SpecialityCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     SpecialityCode, COUNT(AffiliationID) AS 'No_Of_Physician'
FROM        View_Affiliations_Admin
WHERE     (SpecialtyValue > 0 AND SupervisorID = @EmployeeIDFromDM AND IsTargeted = 'Targeted')
GROUP BY SpecialityCode
ORDER BY 'No_Of_Physician' DESC";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     SpecialityCode, COUNT(AffiliationID) AS \'No_Of_Physician\'\r\nFROM       " +
                " View_Affiliations_Admin\r\nWHERE     (SpecialtyValue > 0 AND SupervisorID = @Empl" +
                "oyeeIDFromDM)\r\nGROUP BY SpecialityCode\r\nORDER BY \'No_Of_Physician\' DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     SpecialityCode, COUNT(AffiliationID) AS \'No_Of_Physician\'\r\nFROM       " +
                " View_Affiliations_Admin\r\nWHERE     SpecialtyValue > 0 AND EmployeeID = @Employe" +
                "eID AND IsTargeted = \'Targeted\'\r\nGROUP BY SpecialityCode\r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByAreaGroupBySpec2(ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.AffiliationsByAreaGroupBySpecDataTable GetDataAreaGroupBySpec2(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable = new ExecSummary2.AffiliationsByAreaGroupBySpecDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySuperTargetedAffs(ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.AffiliationsByAreaGroupBySpecDataTable GetDataBySuperTargetedAffs(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable = new ExecSummary2.AffiliationsByAreaGroupBySpecDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.AffiliationsByAreaGroupBySpecDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable = new ExecSummary2.AffiliationsByAreaGroupBySpecDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTargetedAffs(ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.AffiliationsByAreaGroupBySpecDataTable GetDataByTargetedAffs(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.AffiliationsByAreaGroupBySpecDataTable dataTable = new ExecSummary2.AffiliationsByAreaGroupBySpecDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_AppointmentsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_AppointmentsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Appointments";
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("No_of_Appointments", "No_of_Appointments");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SpecialityCode, COUNT(DISTINCT AppointmentID) AS \'No_of_Appointments\'\r" +
                "\nFROM        View_ListOfAppointments_Admin\r\nWHERE     (EmployeeID = @EmployeeID)" +
                " AND (CycleID = @CycleID) AND (AffiliationID IS NOT NULL)\r\nGROUP BY SpecialityCo" +
                "de";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     SpecialityCode, COUNT(DISTINCT AppointmentID) AS 'No_of_Appointments'
FROM        View_ListOfAppointments_Admin
WHERE     (CycleID = @CycleIDFromDM) AND (AffiliationID IS NOT NULL) AND (SpecialityCode IS NOT NULL) AND (SupervisorID = @EmployeeIDFromDM)
GROUP BY SpecialityCode";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillAppsByCycleID2(ExecSummary2.View_AppointmentsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_AppointmentsDataTable GetDataAppsByCycleID2(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_AppointmentsDataTable dataTable = new ExecSummary2.View_AppointmentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisionAreaID2(ExecSummary2.View_AppointmentsDataTable dataTable, global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_AppointmentsDataTable GetDataBySupervisionAreaID2(global::System.Nullable<int> CycleIDFromDM, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_AppointmentsDataTable dataTable = new ExecSummary2.View_AppointmentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_VisitsFullView2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_VisitsFullView2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_VisitsFullView2";
            tableMapping.ColumnMappings.Add("YearID", "YearID");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("QuarterID", "QuarterID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("No_of_Visits", "No_of_Visits");
            tableMapping.ColumnMappings.Add("No_of_Physicians", "No_of_Physicians");
            tableMapping.ColumnMappings.Add("No_of_PlannedVisits", "No_of_PlannedVisits");
            tableMapping.ColumnMappings.Add("No_of_PlannedPhysicians", "No_of_PlannedPhysicians");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     YearID, BrandName, SpecialityCode, PhysicianClass, QuarterID, CycleDesc, 
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AppointmentID ELSE null END)) AS 'No_of_Visits', 
COUNT(DISTINCT (CASE WHEN Annotations = 'Final Save' THEN AffiliationID ELSE null END)) AS 'No_of_Physicians', 
COUNT(DISTINCT AppointmentID) AS 'No_of_PlannedVisits', 
COUNT(DISTINCT AffiliationID) AS 'No_of_PlannedPhysicians'
FROM        View3_FullView
WHERE     (EmployeeID = @EmployeeID) AND (YearID >= 2017) AND (BrandName IS NOT NULL)
GROUP BY YearID, BrandName, SpecialityCode, PhysicianClass, QuarterID, CycleDesc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillVisits(ExecSummary2.View_VisitsFullView2DataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_VisitsFullView2DataTable GetDataVisits2(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_VisitsFullView2DataTable dataTable = new ExecSummary2.View_VisitsFullView2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Statistics";
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("EmployeeHRCode", "EmployeeHRCode");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("SupervisorName", "SupervisorName");
            tableMapping.ColumnMappings.Add("SupervisorID", "SupervisorID");
            tableMapping.ColumnMappings.Add("Targeted Appointments", "Targeted Appointments");
            tableMapping.ColumnMappings.Add("Visited Targeted Appointments", "Visited Targeted Appointments");
            tableMapping.ColumnMappings.Add("Frequency", "Frequency");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     PhysicianClass, SpecialityCode, CycleID, CycleDesc, EmployeeID, EmployeeHRCode, EmployeeName, SupervisorName, SupervisorID, SUM(TargetedVisits) AS 'Targeted Appointments', SUM(ActualTargetedVisits) AS 'Visited Targeted Appointments', 
                  (CASE WHEN SUM([TargetedVisits]) IS NULL OR
                  SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) END) AS 'Frequency'
FROM        View_ActualVsTargeted
WHERE     (EmployeeID = @EmployeeID) AND (CycleID = @CycleID) AND (PhysicianClass IN ('A+', 'A'))
GROUP BY PhysicianClass, SpecialityCode, CycleID, CycleDesc, EmployeeID, EmployeeHRCode, EmployeeName, SupervisorName, SupervisorID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     PhysicianClass, SpecialityCode, CycleID, CycleDesc, EmployeeID, EmployeeHRCode, EmployeeName, SupervisorName, SupervisorID, SUM(TargetedVisits) AS 'Targeted Appointments', SUM(ActualTargetedVisits) AS 'Visited Targeted Appointments', 
                  (CASE WHEN SUM([TargetedVisits]) IS NULL OR
                  SUM([TargetedVisits]) = 0 THEN 0 ELSE ((CONVERT(decimal(10, 2), (SUM([ActualTargetedVisits])) / CONVERT(decimal(10, 2), SUM([TargetedVisits]))) * 100)) END) AS 'Frequency'
FROM        View_ActualVsTargeted
WHERE     (SupervisorID = @EmployeeIDFromDM) AND (CycleID = @CycleIDFromDM)
GROUP BY PhysicianClass, SpecialityCode, CycleID, CycleDesc, EmployeeID, EmployeeHRCode, EmployeeName, SupervisorName, SupervisorID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillStatistics(ExecSummary2.View_StatisticsDataTable dataTable, global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticsDataTable GetDataStatistics(global::System.Nullable<int> EmployeeID, global::System.Nullable<int> CycleID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticsDataTable dataTable = new ExecSummary2.View_StatisticsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisorID(ExecSummary2.View_StatisticsDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticsDataTable GetDataBySupervisorID(global::System.Nullable<int> EmployeeIDFromDM, global::System.Nullable<int> CycleIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((CycleIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CycleIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticsDataTable dataTable = new ExecSummary2.View_StatisticsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_PlannedVsActual_SavedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_PlannedVsActual_SavedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_PlannedVsActual_Saved";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("AppointmentsCount", "AppointmentsCount");
            tableMapping.ColumnMappings.Add("ActualCount", "ActualCount");
            tableMapping.ColumnMappings.Add("AchievmentRatio", "AchievmentRatio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     CycleID, AppointmentsCount, ActualCount, AchievmentRatio\r\nFROM        " +
                "View_PlannedVsActual_ECMS\r\nWHERE     (CycleID = @CycleIDFromSD) AND (DirectorID " +
                "= @EmployeeIDFromSD)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     CycleID, 
SUM(AppointmentsCount) AS AppointmentsCount, 
SUM(ActualCount) AS ActualCount, 
CONVERT(decimal(10, 2), SUM(ActualCount)) / CONVERT(decimal(10, 2), SUM(AppointmentsCount)) * 100 AS
AchievmentRatio
FROM        View_PlannedVsActual_ECMS
WHERE     (CycleID = @CycleIDFromSD) 
Group By CycleID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillBySD(ExecSummary2.View_PlannedVsActual_SavedDataTable dataTable, global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_PlannedVsActual_SavedDataTable GetDataBySD(global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActual_SavedDataTable dataTable = new ExecSummary2.View_PlannedVsActual_SavedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_PlannedVsActual_SavedDataTable dataTable, global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActual_SavedDataTable GetDataByComDir(global::System.Nullable<int> CycleIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActual_SavedDataTable dataTable = new ExecSummary2.View_PlannedVsActual_SavedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_PlannedVsActualAffs_SavedTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_PlannedVsActualAffs_SavedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_PlannedVsActualAffs_Saved";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("PlannedAffsCount", "PlannedAffsCount");
            tableMapping.ColumnMappings.Add("ActualAffsCount", "ActualAffsCount");
            tableMapping.ColumnMappings.Add("Coverage_Ratio", "Coverage_Ratio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     CycleID, PhysicianClass, PlannedAffsCount, ActualAffsCount, Coverage_R" +
                "atio\r\nFROM        View_PlannedVsActualAffs_ECMS\r\nWHERE     (CycleID = @CycleIDFr" +
                "omSD) AND (DirectorID = @EmployeeIDFromSD)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     CycleID, PhysicianClass, SUM(PlannedAffsCount) AS PlannedAffsCount, SUM(ActualAffsCount) AS ActualAffsCount, CONVERT(decimal(10, 2), SUM(ActualAffsCount)) / CONVERT(decimal(10, 2), SUM(PlannedAffsCount)) * 100 AS Coverage_Ratio
FROM        View_PlannedVsActualAffs_ECMS
WHERE     (CycleID = @CycleIDFromSD) AND (DirectorID = @EmployeeIDFromSD)
GROUP BY CycleID, PhysicianClass";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CycleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillBySD(ExecSummary2.View_PlannedVsActualAffs_SavedDataTable dataTable, global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_PlannedVsActualAffs_SavedDataTable GetDataBySD(global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffs_SavedDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffs_SavedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_PlannedVsActualAffs_SavedDataTable dataTable, global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_PlannedVsActualAffs_SavedDataTable GetDataByComDir(global::System.Nullable<int> CycleIDFromSD, global::System.Nullable<int> EmployeeIDFromSD) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CycleIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(CycleIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((EmployeeIDFromSD.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(EmployeeIDFromSD.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_PlannedVsActualAffs_SavedDataTable dataTable = new ExecSummary2.View_PlannedVsActualAffs_SavedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ActualVsTargetCalls_ECMSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ActualVsTargetCalls_ECMSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ActualVsTargetCalls_ECMS";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("LineName", "LineName");
            tableMapping.ColumnMappings.Add("AmounTerritoryName", "AmounTerritoryName");
            tableMapping.ColumnMappings.Add("SupervisionAreaName", "SupervisionAreaName");
            tableMapping.ColumnMappings.Add("ManagementAreaName", "ManagementAreaName");
            tableMapping.ColumnMappings.Add("ManagerName", "ManagerName");
            tableMapping.ColumnMappings.Add("SupervisorName", "SupervisorName");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("BrandRankInCall", "BrandRankInCall");
            tableMapping.ColumnMappings.Add("CallsCount", "CallsCount");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall, SUM(CallsCount) AS CallsCount, 
                  SUM(TargetCalls) AS TargetCalls
FROM        ActualVsTargetCalls_ECMS
GROUP BY CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall, SUM(CallsCount) AS CallsCount, 
                  SUM(TargetCalls) AS TargetCalls
FROM        ActualVsTargetCalls_ECMS
Where EmployeeID = @EmployeeID
GROUP BY CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall, SUM(CallsCount) AS CallsCount, 
                  SUM(TargetCalls) AS TargetCalls
FROM        ActualVsTargetCalls_ECMS
Where ManagerID = @EmployeeIDFromSM
GROUP BY CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall, SUM(CallsCount) AS CallsCount, 
                  SUM(TargetCalls) AS TargetCalls
FROM        ActualVsTargetCalls_ECMS
Where DirectorID = @EmployeeIDFromDir
GROUP BY CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall, SUM(CallsCount) AS CallsCount, 
                  SUM(TargetCalls) AS TargetCalls
FROM        ActualVsTargetCalls_ECMS
Where SupervisorID = @EmployeeIDFromDM
GROUP BY CycleID, CycleDesc, LineName, AmounTerritoryName, SupervisionAreaName, ManagementAreaName, ManagerName, SupervisorName, EmployeeName, PhysicianClass, SpecialityCode, BrandName, BrandRankInCall";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillActualVsTargetCalls_ECMS(ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.ActualVsTargetCalls_ECMSDataTable GetDataActualVsTargetCalls_ECMS() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable = new ExecSummary2.ActualVsTargetCalls_ECMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByEmployeeID(ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.ActualVsTargetCalls_ECMSDataTable GetDataByEmployeeID(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable = new ExecSummary2.ActualVsTargetCalls_ECMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByManagerID(ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable, global::System.Nullable<int> EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.ActualVsTargetCalls_ECMSDataTable GetDataByManagerID(global::System.Nullable<int> EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((EmployeeIDFromSM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable = new ExecSummary2.ActualVsTargetCalls_ECMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySD(ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeIDFromDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.ActualVsTargetCalls_ECMSDataTable GetDataBySD(global::System.Nullable<int> EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((EmployeeIDFromDir.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable = new ExecSummary2.ActualVsTargetCalls_ECMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySupervisorID(ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.ActualVsTargetCalls_ECMSDataTable GetDataBySupervisorID(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.ActualVsTargetCalls_ECMSDataTable dataTable = new ExecSummary2.ActualVsTargetCalls_ECMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView";
            tableMapping.ColumnMappings.Add("QuarterID", "QuarterID");
            tableMapping.ColumnMappings.Add("MonthID", "MonthID");
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("LineID", "LineID");
            tableMapping.ColumnMappings.Add("LineName", "LineName");
            tableMapping.ColumnMappings.Add("BrickID", "BrickID");
            tableMapping.ColumnMappings.Add("AmounBrickName", "AmounBrickName");
            tableMapping.ColumnMappings.Add("RepAreaName", "RepAreaName");
            tableMapping.ColumnMappings.Add("SupervisionAreaName", "SupervisionAreaName");
            tableMapping.ColumnMappings.Add("RegionName", "RegionName");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("DirectManagerID", "DirectManagerID");
            tableMapping.ColumnMappings.Add("DirectManagerName", "DirectManagerName");
            tableMapping.ColumnMappings.Add("TopManagerID", "TopManagerID");
            tableMapping.ColumnMappings.Add("TopManagerName", "TopManagerName");
            tableMapping.ColumnMappings.Add("DirectorID", "DirectorID");
            tableMapping.ColumnMappings.Add("DirectorName", "DirectorName");
            tableMapping.ColumnMappings.Add("BrandID", "BrandID");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("SpecialityID", "SpecialityID");
            tableMapping.ColumnMappings.Add("SpecialityCode", "SpecialityCode");
            tableMapping.ColumnMappings.Add("PhysicianClass", "PhysicianClass");
            tableMapping.ColumnMappings.Add("BrandRankInCall", "BrandRankInCall");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("CallsCount", "CallsCount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall, ISNULL(SUM(TargetCalls), 0) 
                         AS TargetCalls, ISNULL(SUM(CallsCount), 0) AS CallsCount
FROM            View_StatisticesWebView
WHERE        (EmployeeID = @EmployeeID) AND (CycleID >= 51)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall, ISNULL(SUM(TargetCalls), 0) 
                         AS TargetCalls, ISNULL(SUM(CallsCount), 0) AS CallsCount
FROM            View_StatisticesWebView
WHERE        (DirectManagerID = @EmployeeIDFromDM)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall, ISNULL(SUM(TargetCalls), 0) 
                         AS TargetCalls, ISNULL(SUM(CallsCount), 0) AS CallsCount
FROM            View_StatisticesWebView
WHERE        (DirectorID = @EmployeeIDFromDir)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT        QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall, ISNULL(SUM(TargetCalls), 0) 
                         AS TargetCalls, ISNULL(SUM(CallsCount), 0) AS CallsCount
FROM            View_StatisticesWebView
WHERE        (TopManagerID = @EmployeeIDFromSM)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT        QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall, ISNULL(SUM(TargetCalls), 0) 
                         AS TargetCalls, ISNULL(SUM(CallsCount), 0) AS CallsCount
FROM            View_StatisticesWebView
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, BrickID, AmounBrickName, RepAreaName, SupervisionAreaName, RegionName, EmployeeID, EmployeeFullName, DirectManagerID, 
                         DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName, BrandID, BrandName, SpecialityID, SpecialityCode, PhysicianClass, BrandRankInCall";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill_StatisticsWebView(ExecSummary2.View_StatisticesWebViewDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebViewDataTable GetData_StatisticsWebView(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebViewDataTable dataTable = new ExecSummary2.View_StatisticesWebViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_DMID(ExecSummary2.View_StatisticesWebViewDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebViewDataTable GetDataBy_DMID(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebViewDataTable dataTable = new ExecSummary2.View_StatisticesWebViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_SDID(ExecSummary2.View_StatisticesWebViewDataTable dataTable, int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebViewDataTable GetDataBy_SDID(int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            ExecSummary2.View_StatisticesWebViewDataTable dataTable = new ExecSummary2.View_StatisticesWebViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_SMID(ExecSummary2.View_StatisticesWebViewDataTable dataTable, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebViewDataTable GetDataBy_SMID(int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            ExecSummary2.View_StatisticesWebViewDataTable dataTable = new ExecSummary2.View_StatisticesWebViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_StatisticesWebViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebViewDataTable GetDataByComDir() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            ExecSummary2.View_StatisticesWebViewDataTable dataTable = new ExecSummary2.View_StatisticesWebViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreqTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreqTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq";
            tableMapping.ColumnMappings.Add("QuarterID", "QuarterID");
            tableMapping.ColumnMappings.Add("MonthID", "MonthID");
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("LineID", "LineID");
            tableMapping.ColumnMappings.Add("LineName", "LineName");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("DirectManagerID", "DirectManagerID");
            tableMapping.ColumnMappings.Add("DirectManagerName", "DirectManagerName");
            tableMapping.ColumnMappings.Add("TopManagerID", "TopManagerID");
            tableMapping.ColumnMappings.Add("TopManagerName", "TopManagerName");
            tableMapping.ColumnMappings.Add("DirectorID", "DirectorID");
            tableMapping.ColumnMappings.Add("DirectorName", "DirectorName");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("Frequency", "Frequency");
            tableMapping.ColumnMappings.Add("Coverage", "Coverage");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
, SUM(ActualVisits) AS ActualVisits
, SUM(TargetVisits) AS TargetVisits
, SUM(VisitedDoctors) AS VisitedDoctors
, SUM(TargetDoctors) AS TargetDoctors

, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(ActualVisits),0) = 0 OR ISNULL(SUM(TargetVisits), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(ActualVisits)) / CONVERT(decimal(10,2), SUM(TargetVisits))) * 100)) END) as 'Frequency'
, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(VisitedDoctors),0) = 0 OR ISNULL(SUM(TargetDoctors), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(VisitedDoctors)) / CONVERT(decimal(10,2), SUM(TargetDoctors))) * 100)) END) as 'Coverage'

FROM        View_StatisticesWebView_CovFreq
WHERE     (EmployeeID = @EmployeeID)
GROUP BY 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName

";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
, SUM(ActualVisits) AS ActualVisits
, SUM(TargetVisits) AS TargetVisits
, SUM(VisitedDoctors) AS VisitedDoctors
, SUM(TargetDoctors) AS TargetDoctors

, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(ActualVisits),0) = 0 OR ISNULL(SUM(TargetVisits), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(ActualVisits)) / CONVERT(decimal(10,2), SUM(TargetVisits))) * 100)) END) as 'Frequency'
, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(VisitedDoctors),0) = 0 OR ISNULL(SUM(TargetDoctors), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(VisitedDoctors)) / CONVERT(decimal(10,2), SUM(TargetDoctors))) * 100)) END) as 'Coverage'
FROM        View_StatisticesWebView_CovFreq
WHERE     (DirectManagerID = @EmployeeIDFromDM)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
, SUM(ActualVisits) AS ActualVisits
, SUM(TargetVisits) AS TargetVisits
, SUM(VisitedDoctors) AS VisitedDoctors
, SUM(TargetDoctors) AS TargetDoctors

, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(ActualVisits),0) = 0 OR ISNULL(SUM(TargetVisits), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(ActualVisits)) / CONVERT(decimal(10,2), SUM(TargetVisits))) * 100)) END) as 'Frequency'
, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(VisitedDoctors),0) = 0 OR ISNULL(SUM(TargetDoctors), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(VisitedDoctors)) / CONVERT(decimal(10,2), SUM(TargetDoctors))) * 100)) END) as 'Coverage'
FROM        View_StatisticesWebView_CovFreq
WHERE     (DirectorID = @EmployeeIDFromDir)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
, SUM(ActualVisits) AS ActualVisits
, SUM(TargetVisits) AS TargetVisits
, SUM(VisitedDoctors) AS VisitedDoctors
, SUM(TargetDoctors) AS TargetDoctors

, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(ActualVisits),0) = 0 OR ISNULL(SUM(TargetVisits), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(ActualVisits)) / CONVERT(decimal(10,2), SUM(TargetVisits))) * 100)) END) as 'Frequency'
, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(VisitedDoctors),0) = 0 OR ISNULL(SUM(TargetDoctors), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(VisitedDoctors)) / CONVERT(decimal(10,2), SUM(TargetDoctors))) * 100)) END) as 'Coverage'
FROM        View_StatisticesWebView_CovFreq
WHERE     (TopManagerID = @EmployeeIDFromSM) AND (CycleID >= 51)
GROUP BY QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName
, SUM(ActualVisits) AS ActualVisits
, SUM(TargetVisits) AS TargetVisits
, SUM(VisitedDoctors) AS VisitedDoctors
, SUM(TargetDoctors) AS TargetDoctors

, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(ActualVisits),0) = 0 OR ISNULL(SUM(TargetVisits), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(ActualVisits)) / CONVERT(decimal(10,2), SUM(TargetVisits))) * 100)) END) as 'Frequency'
, CONVERT(decimal(10,2), CASE WHEN ISNULL(SUM(VisitedDoctors),0) = 0 OR ISNULL(SUM(TargetDoctors), 0) = 0 THEN 0 ELSE CONVERT(decimal(10,2), ((CONVERT(decimal(10,2), SUM(VisitedDoctors)) / CONVERT(decimal(10,2), SUM(TargetDoctors))) * 100)) END) as 'Coverage'

FROM        View_StatisticesWebView_CovFreq
GROUP BY 
		QuarterID, MonthID, CycleID, CycleDesc, LineID, LineName, EmployeeID, EmployeeFullName, 
		DirectManagerID, DirectManagerName, TopManagerID, TopManagerName, DirectorID, DirectorName

";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreqDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_DMID(ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreqDataTable GetDataBy_CovFreq_DMID(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_SD(ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable, int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreqDataTable GetDataBy_CovFreq_SD(int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_SMID(ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreqDataTable GetDataBy_CovFreq_SMID(int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByComDir(ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreqDataTable GetDataByComDir() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            ExecSummary2.View_StatisticesWebView_CovFreqDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreqDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2";
            tableMapping.ColumnMappings.Add("Target Doctors", "Target Doctors");
            tableMapping.ColumnMappings.Add("Target Visits", "Target Visits");
            tableMapping.ColumnMappings.Add("Visited Doctors", "Visited Doctors");
            tableMapping.ColumnMappings.Add("Actual Visits", "Actual Visits");
            tableMapping.ColumnMappings.Add("Target Calls", "Target Calls");
            tableMapping.ColumnMappings.Add("Actual Calls", "Actual Calls");
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select CycleID, 
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END)) AS 'Target Doctors',
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Visits',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END)) AS 'Visited Doctors',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Visits',
COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Calls',
COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Calls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
Where View_Employees.EmployeeID = @EmployeeID AND (CycleID >= 51)
Group By CycleID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"Select CycleID,
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END)) AS 'Target Doctors',
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Visits',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END)) AS 'Visited Doctors',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Visits',
COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Calls',
COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Calls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
Where View_Employees.DirectManagerID = @EmployeeIDFromDM AND (CycleID >= 51)
Group By CycleID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"Select CycleID, 
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END)) AS 'Target Doctors',
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Visits',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END)) AS 'Visited Doctors',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Visits',
COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Calls',
COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Calls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
Where View_Employees.DirectorID = @EmployeeIDFromDir AND (CycleID >= 51)
Group By CycleID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"Select CycleID,
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END)) AS 'Target Doctors',
COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Visits',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END)) AS 'Visited Doctors',
COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Visits',
COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END)) AS 'Target Calls',
COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END)) AS 'Actual Calls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
Where View_Employees.TopManagerID = @EmployeeIDFromSM AND (CycleID >= 51)
Group By CycleID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable, int EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2DataTable GetDataCovFreq(int EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID));
            ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_DMID(ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2DataTable GetDataBy_CovFreq_DMID(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_SD(ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable, int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2DataTable GetDataBy_CovFreq_SD(int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CovFreq_SMID(ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2DataTable GetDataBy_CovFreq_SMID(int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            ExecSummary2.View_StatisticesWebView_CovFreq2DataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2_RepTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2_RepTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2_Rep";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetVisits',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualVisits',
CONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetCalls',
CONVERT(decimal(10,2), COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID = Cycles.CycleID
Where [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] .EmployeeID = @EmployeeID AND ([BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID >= 51)
Group By [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID , CycleDesc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2_RepDataTable dataTable, global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2_RepDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebView_CovFreq2_RepDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2_RepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2_DMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2_DMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2_DM";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("EmployeeHRCode", "EmployeeHRCode");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
View_Employees.EmployeeHRCode, View_Employees.EmployeeFullName, 
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetVisits',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualVisits',
CONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetCalls',
CONVERT(decimal(10,2), COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
INNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID = Cycles.CycleID
Where View_Employees.DirectManagerID = @EmployeeIDFromDM AND ([BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID >= 51)
Group By [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
View_Employees.EmployeeHRCode, View_Employees.EmployeeFullName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2_DMDataTable dataTable, global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2_DMDataTable GetDataCovFreq(global::System.Nullable<int> EmployeeIDFromDM) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((EmployeeIDFromDM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            ExecSummary2.View_StatisticesWebView_CovFreq2_DMDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2_DMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2_SMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2_SMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2_SM";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("EmployeeHRCode", "EmployeeHRCode");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("DirectManagerName", "DirectManagerName");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
View_Employees.EmployeeHRCode, View_Employees.EmployeeFullName, View_Employees.DirectManagerName, 
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END))) AS 'TargetDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetVisits',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELSE NULL END))) AS 'VisitedDoctors',
CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualVisits',
CONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS 'TargetCalls',
CONVERT(decimal(10,2), COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS 'ActualCalls'
From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].EmployeeID
INNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID = Cycles.CycleID
Where View_Employees.TopManagerID = @EmployeeIDFromSM AND ([BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID >= 51)
Group By [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, 
View_Employees.EmployeeHRCode, View_Employees.EmployeeFullName, View_Employees.DirectManagerName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromSM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TopManagerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2_SMDataTable dataTable, int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2_SMDataTable GetDataCovFreq(int EmployeeIDFromSM) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromSM));
            ExecSummary2.View_StatisticesWebView_CovFreq2_SMDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2_SMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2_DirTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2_DirTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2_Dir";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("EmployeeHRCode", "EmployeeHRCode");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("DirectManagerName", "DirectManagerName");
            tableMapping.ColumnMappings.Add("TopManagerName", "TopManagerName");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, \r\nView" +
                "_Employees.EmployeeHRCode, View_Employees.EmployeeFullName, View_Employees.Direc" +
                "tManagerName, View_Employees.TopManagerName, \r\nCONVERT(decimal(10,2), COUNT(DIST" +
                "INCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NULL END))) AS \'" +
                "TargetDoctors\',\r\nCONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN TargetCalls is" +
                " not null THEN AppointmentID ELSE NULL END))) AS \'TargetVisits\',\r\nCONVERT(decima" +
                "l(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN AffiliationID ELS" +
                "E NULL END))) AS \'VisitedDoctors\',\r\nCONVERT(decimal(10,2), COUNT(DISTINCT (CASE " +
                "WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS \'ActualVisits" +
                "\',\r\nCONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not null THEN Appoint" +
                "mentID ELSE NULL END))) AS \'TargetCalls\',\r\nCONVERT(decimal(10,2), COUNT((CASE WH" +
                "EN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS \'ActualCalls\'\r\n" +
                "From [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN View_Employees O" +
                "N View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].Em" +
                "ployeeID\r\nINNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].C" +
                "ycleID = Cycles.CycleID\r\nWhere View_Employees.DirectorID = @EmployeeIDFromDir AN" +
                "D ([BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID >= 51)\r\nGroup By [BW_" +
                "rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, \r\nView_Employees" +
                ".EmployeeHRCode, View_Employees.EmployeeFullName, View_Employees.DirectManagerNa" +
                "me, View_Employees.TopManagerName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeIDFromDir", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "DirectorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2_DirDataTable dataTable, int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2_DirDataTable GetDataCovFreq(int EmployeeIDFromDir) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(EmployeeIDFromDir));
            ExecSummary2.View_StatisticesWebView_CovFreq2_DirDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2_DirDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_StatisticesWebView_CovFreq2_ComDirTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public View_StatisticesWebView_CovFreq2_ComDirTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_StatisticesWebView_CovFreq2_ComDir";
            tableMapping.ColumnMappings.Add("CycleID", "CycleID");
            tableMapping.ColumnMappings.Add("CycleDesc", "CycleDesc");
            tableMapping.ColumnMappings.Add("EmployeeHRCode", "EmployeeHRCode");
            tableMapping.ColumnMappings.Add("EmployeeFullName", "EmployeeFullName");
            tableMapping.ColumnMappings.Add("DirectManagerName", "DirectManagerName");
            tableMapping.ColumnMappings.Add("TopManagerName", "TopManagerName");
            tableMapping.ColumnMappings.Add("DirectorName", "DirectorName");
            tableMapping.ColumnMappings.Add("TargetDoctors", "TargetDoctors");
            tableMapping.ColumnMappings.Add("TargetVisits", "TargetVisits");
            tableMapping.ColumnMappings.Add("VisitedDoctors", "VisitedDoctors");
            tableMapping.ColumnMappings.Add("ActualVisits", "ActualVisits");
            tableMapping.ColumnMappings.Add("TargetCalls", "TargetCalls");
            tableMapping.ColumnMappings.Add("ActualCalls", "ActualCalls");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["AmounCrmConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web].CycleID, CycleDesc, \r\nView" +
                "_Employees.EmployeeHRCode, View_Employees.EmployeeFullName, View_Employees.Direc" +
                "tManagerName, View_Employees.TopManagerName, DirectorName, \r\nCONVERT(decimal(10," +
                "2), COUNT(DISTINCT (CASE WHEN TargetCalls is not null THEN AffiliationID ELSE NU" +
                "LL END))) AS \'TargetDoctors\',\r\nCONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN " +
                "TargetCalls is not null THEN AppointmentID ELSE NULL END))) AS \'TargetVisits\',\r\n" +
                "CONVERT(decimal(10,2), COUNT(DISTINCT (CASE WHEN CallsCount is not null THEN Aff" +
                "iliationID ELSE NULL END))) AS \'VisitedDoctors\',\r\nCONVERT(decimal(10,2), COUNT(D" +
                "ISTINCT (CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS" +
                " \'ActualVisits\',\r\nCONVERT(decimal(10,2), COUNT((CASE WHEN TargetCalls is not nul" +
                "l THEN AppointmentID ELSE NULL END))) AS \'TargetCalls\',\r\nCONVERT(decimal(10,2), " +
                "COUNT((CASE WHEN CallsCount is not null THEN AppointmentID ELSE NULL END))) AS \'" +
                "ActualCalls\'\r\nFrom [BW_rep_fn_Union_View_ActualVsTargetCalls5_Web] INNER JOIN Vi" +
                "ew_Employees ON View_Employees.EmployeeID = [BW_rep_fn_Union_View_ActualVsTarget" +
                "Calls5_Web].EmployeeID\r\nINNER JOIN Cycles ON [BW_rep_fn_Union_View_ActualVsTarge" +
                "tCalls5_Web].CycleID = Cycles.CycleID\r\nWhere ([BW_rep_fn_Union_View_ActualVsTarg" +
                "etCalls5_Web].CycleID >= 51)\r\nGroup By [BW_rep_fn_Union_View_ActualVsTargetCalls" +
                "5_Web].CycleID, CycleDesc, \r\nView_Employees.EmployeeHRCode, View_Employees.Emplo" +
                "yeeFullName, View_Employees.DirectManagerName, View_Employees.TopManagerName, Di" +
                "rectorName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillCovFreq(ExecSummary2.View_StatisticesWebView_CovFreq2_ComDirDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExecSummary2.View_StatisticesWebView_CovFreq2_ComDirDataTable GetDataCovFreq() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ExecSummary2.View_StatisticesWebView_CovFreq2_ComDirDataTable dataTable = new ExecSummary2.View_StatisticesWebView_CovFreq2_ComDirDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ExecSummary2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ExecSummary2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ExecSummary2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ExecSummary2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591